package net.seface.somemoreblocks.registries;

import net.minecraft.core.registries.BuiltInRegistries;
import net.minecraft.core.registries.Registries;
import net.minecraft.resources.ResourceKey;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.effect.MobEffects;
import net.minecraft.world.item.DyeColor;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.block.state.properties.NoteBlockInstrument;
import net.minecraft.world.level.material.MapColor;
import net.minecraft.world.level.material.PushReaction;
import net.seface.somemoreblocks.Constants;
import net.seface.somemoreblocks.SomeMoreBlocks;
import net.seface.somemoreblocks.block.*;
import net.seface.somemoreblocks.tags.SMBBlockTags;

import java.util.function.Function;

public class SMBBlocks {

  public static final Block AZALEA_LEAF_LITTER = registerBlock("azalea_leaf_litter", (properties) -> new LeafLitterBlock(properties, Constants.AZALEA_LEAF_LITTER_CHANCE), Block.Properties.ofFullCopy(Blocks.AZALEA_LEAVES).replaceable().noCollission().instabreak(), false);
  public static final Block BIRCH_LEAF_LITTER = registerBlock("birch_leaf_litter", (properties) -> new LeafLitterBlock(properties, Constants.BIRCH_LEAF_LITTER_CHANCE), BlockBehaviour.Properties.ofFullCopy(Blocks.BIRCH_LEAVES).replaceable().noCollission().instabreak(), false);
  public static final Block BIG_LILY_PAD = registerBlock("big_lily_pad", BigLilyPadBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LILY_PAD).pushReaction(PushReaction.BLOCK), false);
  public static final Block BROWN_MUSHROOM_COLONY = registerBlock("brown_mushroom_colony", MushroomColonyBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BROWN_MUSHROOM), false);
  public static final Block TALL_BROWN_MUSHROOM_COLONY = registerBlock("tall_brown_mushroom_colony", DoubleMushroomColonyBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BROWN_MUSHROOM), false);
  public static final Block BROWN_MUSHROOM_COLONY_WALL = registerBlock("brown_mushroom_colony_wall", WallMushroomColonyBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.BROWN_MUSHROOM_COLONY), false);
  public static final Block CATTAIL = registerBlock("cattail", CattailBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.TALL_GRASS).noCollission());
  public static final Block CRIMSON_FUNGUS_COLONY = registerBlock("crimson_fungus_colony", MushroomColonyBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CRIMSON_FUNGUS), false);
  public static final Block TALL_CRIMSON_FUNGUS_COLONY = registerBlock("tall_crimson_fungus_colony", DoubleMushroomColonyBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CRIMSON_FUNGUS), false);
  public static final Block CRIMSON_FUNGUS_COLONY_WALL = registerBlock("crimson_fungus_colony_wall", WallMushroomColonyBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CRIMSON_FUNGUS_COLONY), false);
  public static final Block FLOWERING_AZALEA_LEAF_LITTER = registerBlock("flowering_azalea_leaf_litter", (properties) -> new LeafLitterBlock(properties, Constants.FLOWERING_AZALEA_LEAF_LITTER_CHANCE), BlockBehaviour.Properties.ofFullCopy(Blocks.FLOWERING_AZALEA_LEAVES).replaceable().noCollission().instabreak(), false);
  public static final Block SPRUCE_LEAF_LITTER = registerBlock("spruce_leaf_litter", (properties) -> new LeafLitterBlock(properties, Constants.SPRUCE_LEAF_LITTER_CHANCE), BlockBehaviour.Properties.ofFullCopy(Blocks.SPRUCE_LEAVES).replaceable().noCollission().instabreak(), false);
  public static final Block LEAF_LITTER = registerBlock("leaf_litter", (properties) -> new LeafLitterBlock(properties, Constants.LEAF_LITTER_CHANCE), BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_LEAVES).replaceable().noCollission().instabreak(), false);
  public static final Block LUMINOUS_FLOWER = registerBlock("luminous_flower", LuminousFlowerBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DANDELION).lightLevel((blockStatex) -> Constants.LUMINOUS_FLOWER_LIGHT_LEVEL));
  public static final Block RED_MUSHROOM_COLONY = registerBlock("red_mushroom_colony", MushroomColonyBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RED_MUSHROOM), false);
  public static final Block TALL_RED_MUSHROOM_COLONY = registerBlock("tall_red_mushroom_colony", DoubleMushroomColonyBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RED_MUSHROOM), false);
  public static final Block RED_MUSHROOM_COLONY_WALL = registerBlock("red_mushroom_colony_wall", WallMushroomColonyBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.RED_MUSHROOM_COLONY), false);
  public static final Block SMALL_LILY_PADS = registerBlock("small_lily_pads", WaterlilyBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LILY_PAD).noCollission(), false);
  public static final Block TALL_DUNE_GRASS = registerBlock("tall_dune_grass", DoubleDuneGrassBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.TALL_GRASS));
  public static final Block DUNE_GRASS = registerBlock("dune_grass", (properties) -> new GenericBonemealableBushBlock(SMBBlocks.TALL_DUNE_GRASS, SMBBlockTags.DUNE_GRASS_PLACEABLE, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.SHORT_GRASS));
  public static final Block LARGE_SNOW_FERN = registerBlock("large_snow_fern", DoublePlantBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LARGE_FERN));
  public static final Block SNOW_FERN = registerBlock("snow_fern", (properties) -> new GenericBonemealableBushBlock(SMBBlocks.LARGE_SNOW_FERN, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.FERN));
  public static final Block TALL_SNOW_GRASS = registerBlock("tall_snow_grass", DoublePlantBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.TALL_GRASS));
  public static final Block SHORT_SNOW_GRASS = registerBlock("short_snow_grass", (properties) -> new GenericBonemealableBushBlock(SMBBlocks.TALL_SNOW_GRASS, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.SHORT_GRASS));
  public static final Block TINY_CACTUS = registerBlock("tiny_cactus", (properties) -> new TinyCactusBlock(MobEffects.POISON, 7, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.ALLIUM));
  public static final Block WARPED_FUNGUS_COLONY = registerBlock("warped_fungus_colony", MushroomColonyBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.WARPED_FUNGUS), false);
  public static final Block TALL_WARPED_FUNGUS_COLONY = registerBlock("tall_warped_fungus_colony", DoubleMushroomColonyBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.WARPED_FUNGUS), false);
  public static final Block WARPED_FUNGUS_COLONY_WALL = registerBlock("warped_fungus_colony_wall", WallMushroomColonyBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.WARPED_FUNGUS_COLONY), false);
  public static final Block POTTED_LUMINOUS_FLOWER = registerFlowerPotBlock(SMBBlocks.LUMINOUS_FLOWER, BlockBehaviour.Properties.of().instabreak().noOcclusion().pushReaction(PushReaction.DESTROY).lightLevel(value -> Constants.POTTED_LUMINOUS_FLOWER_LIGHT_LEVEL));
  public static final Block POTTED_SNOW_FERN = registerFlowerPotBlock(SMBBlocks.SNOW_FERN);
  public static final Block POTTED_TINY_CACTUS = registerFlowerPotBlock(SMBBlocks.TINY_CACTUS);
  public static final Block OCHRE_REDSTONE_FROGLIGHT = registerBlock("ochre_redstone_froglight", RedstoneLampBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_LAMP).sound(SoundType.FROGLIGHT));
  public static final Block PEARLESCENT_REDSTONE_FROGLIGHT = registerBlock("pearlescent_redstone_froglight", RedstoneLampBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_LAMP).sound(SoundType.FROGLIGHT));
  public static final Block VERDANT_REDSTONE_FROGLIGHT = registerBlock("verdant_redstone_froglight", RedstoneLampBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_LAMP).sound(SoundType.FROGLIGHT));
  public static final Block PACKED_SNOW = registerBlock("packed_snow", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SNOW_BLOCK));
  public static final Block PACKED_SNOW_SLAB = registerBlock("packed_snow_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.PACKED_SNOW));
  public static final Block PACKED_SNOW_STAIRS = registerBlock("packed_snow_stairs", (properties) -> new StairBlock(PACKED_SNOW.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.PACKED_SNOW));
  public static final Block POLISHED_SNOW = registerBlock("polished_snow", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SNOW_BLOCK));
  public static final Block POLISHED_SNOW_SLAB = registerBlock("polished_snow_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_SNOW));
  public static final Block POLISHED_SNOW_STAIRS = registerBlock("polished_snow_stairs", (properties) -> new StairBlock(POLISHED_SNOW.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_SNOW));
  public static final Block SNOW_BRICKS = registerBlock("snow_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SNOW_BLOCK));
  public static final Block SNOW_BRICK_SLAB = registerBlock("snow_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SNOW_BRICKS));
  public static final Block SNOW_BRICK_STAIRS = registerBlock("snow_brick_stairs", (properties) -> new StairBlock(SNOW_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SNOW_BRICKS));
  public static final Block SNOW_BRICK_WALL = registerBlock("snow_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SNOW_BRICKS).forceSolidOn());
  public static final Block CRACKED_SNOW_BRICKS = registerBlock("cracked_snow_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SNOW_BLOCK));
  public static final Block SNOW_TILES = registerBlock("snow_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SNOW_BLOCK));
  public static final Block SNOW_TILE_SLAB = registerBlock("snow_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SNOW_TILES));
  public static final Block SNOW_TILE_STAIRS = registerBlock("snow_tile_stairs", (properties) -> new StairBlock(SNOW_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SNOW_TILES));
  public static final Block SNOW_TILE_WALL = registerBlock("snow_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SNOW_TILES).forceSolidOn());
  public static final Block CRACKED_SNOW_TILES = registerBlock("cracked_snow_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SNOW_BLOCK));
  public static final Block SNOW_PILLAR = registerBlock("snow_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SNOW_BLOCK));
  public static final Block DEEPSLATE_PILLAR = registerBlock("deepslate_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DEEPSLATE_BRICKS));
  public static final Block MOSSY_DEEPSLATE_BRICKS = registerBlock("mossy_deepslate_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DEEPSLATE_BRICKS));
  public static final Block MOSSY_DEEPSLATE_BRICK_SLAB = registerBlock("mossy_deepslate_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_DEEPSLATE_BRICKS));
  public static final Block MOSSY_DEEPSLATE_BRICK_STAIRS = registerBlock("mossy_deepslate_brick_stairs", (properties) -> new StairBlock(MOSSY_DEEPSLATE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_DEEPSLATE_BRICKS));
  public static final Block MOSSY_DEEPSLATE_BRICK_WALL = registerBlock("mossy_deepslate_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_DEEPSLATE_BRICKS).forceSolidOn());
  public static final Block SMOOTH_DEEPSLATE = registerBlock("smooth_deepslate", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DEEPSLATE));
  public static final Block SMOOTH_DEEPSLATE_SLAB = registerBlock("smooth_deepslate_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SMOOTH_DEEPSLATE));
  public static final Block POLISHED_STONE = registerBlock("polished_stone", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DEEPSLATE));
  public static final Block POLISHED_STONE_SLAB = registerBlock("polished_stone_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_STONE));
  public static final Block POLISHED_STONE_STAIRS = registerBlock("polished_stone_stairs", (properties) -> new StairBlock(POLISHED_STONE.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_STONE));
  public static final Block STONE_TILES = registerBlock("stone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STONE));
  public static final Block STONE_TILE_SLAB = registerBlock("stone_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.STONE_TILES));
  public static final Block STONE_TILE_STAIRS = registerBlock("stone_tile_stairs", (properties) -> new StairBlock(STONE_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.STONE_TILES));
  public static final Block STONE_TILE_WALL = registerBlock("stone_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.STONE_TILES).forceSolidOn());
  public static final Block CRACKED_STONE_TILES = registerBlock("cracked_stone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STONE));
  public static final Block STONE_PILLAR = registerBlock("stone_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STONE));
  public static final Block SMOOTH_GRANITE = registerBlock("smooth_granite", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GRANITE));
  public static final Block SMOOTH_GRANITE_SLAB = registerBlock("smooth_granite_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SMOOTH_GRANITE));
  public static final Block CHISELED_GRANITE_BRICKS = registerBlock("chiseled_granite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GRANITE));
  public static final Block GRANITE_BRICKS = registerBlock("granite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GRANITE));
  public static final Block GRANITE_BRICK_SLAB = registerBlock("granite_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.GRANITE_BRICKS));
  public static final Block GRANITE_BRICK_STAIRS = registerBlock("granite_brick_stairs", (properties) -> new StairBlock(GRANITE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.GRANITE_BRICKS));
  public static final Block GRANITE_BRICK_WALL = registerBlock("granite_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.GRANITE_BRICKS).forceSolidOn());
  public static final Block CRACKED_GRANITE_BRICKS = registerBlock("cracked_granite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GRANITE));
  public static final Block MOSSY_GRANITE_BRICKS = registerBlock("mossy_granite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GRANITE));
  public static final Block MOSSY_GRANITE_BRICK_SLAB = registerBlock("mossy_granite_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_GRANITE_BRICKS));
  public static final Block MOSSY_GRANITE_BRICK_STAIRS = registerBlock("mossy_granite_brick_stairs", (properties) -> new StairBlock(MOSSY_GRANITE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_GRANITE_BRICKS));
  public static final Block MOSSY_GRANITE_BRICK_WALL = registerBlock("mossy_granite_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_GRANITE_BRICKS).forceSolidOn());
  public static final Block GRANITE_TILES = registerBlock("granite_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GRANITE));
  public static final Block GRANITE_TILE_SLAB = registerBlock("granite_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.GRANITE_TILES));
  public static final Block GRANITE_TILE_STAIRS = registerBlock("granite_tile_stairs", (properties) -> new StairBlock(GRANITE_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.GRANITE_TILES));
  public static final Block GRANITE_TILE_WALL = registerBlock("granite_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.GRANITE_TILES).forceSolidOn());
  public static final Block CRACKED_GRANITE_TILES = registerBlock("cracked_granite_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GRANITE));
  public static final Block GRANITE_PILLAR = registerBlock("granite_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GRANITE));
  public static final Block SMOOTH_DIORITE = registerBlock("smooth_diorite", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DIORITE));
  public static final Block SMOOTH_DIORITE_SLAB = registerBlock("smooth_diorite_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SMOOTH_DIORITE));
  public static final Block CHISELED_DIORITE_BRICKS = registerBlock("chiseled_diorite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DIORITE));
  public static final Block DIORITE_BRICKS = registerBlock("diorite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DIORITE));
  public static final Block DIORITE_BRICK_SLAB = registerBlock("diorite_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.DIORITE_BRICKS));
  public static final Block DIORITE_BRICK_STAIRS = registerBlock("diorite_brick_stairs", (properties) -> new StairBlock(DIORITE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.DIORITE_BRICKS));
  public static final Block DIORITE_BRICK_WALL = registerBlock("diorite_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.DIORITE_BRICKS).forceSolidOn());
  public static final Block CRACKED_DIORITE_BRICKS = registerBlock("cracked_diorite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DIORITE));
  public static final Block MOSSY_DIORITE_BRICKS = registerBlock("mossy_diorite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DIORITE));
  public static final Block MOSSY_DIORITE_BRICK_SLAB = registerBlock("mossy_diorite_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_DIORITE_BRICKS));
  public static final Block MOSSY_DIORITE_BRICK_STAIRS = registerBlock("mossy_diorite_brick_stairs", (properties) -> new StairBlock(MOSSY_DIORITE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_DIORITE_BRICKS));
  public static final Block MOSSY_DIORITE_BRICK_WALL = registerBlock("mossy_diorite_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_DIORITE_BRICKS).forceSolidOn());
  public static final Block DIORITE_TILES = registerBlock("diorite_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DIORITE));
  public static final Block DIORITE_TILE_SLAB = registerBlock("diorite_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.DIORITE_TILES));
  public static final Block DIORITE_TILE_STAIRS = registerBlock("diorite_tile_stairs", (properties) -> new StairBlock(DIORITE_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.DIORITE_TILES));
  public static final Block DIORITE_TILE_WALL = registerBlock("diorite_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.DIORITE_TILES).forceSolidOn());
  public static final Block CRACKED_DIORITE_TILES = registerBlock("cracked_diorite_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DIORITE));
  public static final Block DIORITE_PILLAR = registerBlock("diorite_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DIORITE));
  public static final Block SMOOTH_ANDESITE = registerBlock("smooth_andesite", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ANDESITE));
  public static final Block SMOOTH_ANDESITE_SLAB = registerBlock("smooth_andesite_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SMOOTH_ANDESITE));
  public static final Block CHISELED_ANDESITE_BRICKS = registerBlock("chiseled_andesite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ANDESITE));
  public static final Block ANDESITE_BRICKS = registerBlock("andesite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ANDESITE));
  public static final Block ANDESITE_BRICK_SLAB = registerBlock("andesite_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.ANDESITE_BRICKS));
  public static final Block ANDESITE_BRICK_STAIRS = registerBlock("andesite_brick_stairs", (properties) -> new StairBlock(ANDESITE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.ANDESITE_BRICKS));
  public static final Block ANDESITE_BRICK_WALL = registerBlock("andesite_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.ANDESITE_BRICKS).forceSolidOn());
  public static final Block CRACKED_ANDESITE_BRICKS = registerBlock("cracked_andesite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ANDESITE));
  public static final Block MOSSY_ANDESITE_BRICKS = registerBlock("mossy_andesite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ANDESITE));
  public static final Block MOSSY_ANDESITE_BRICK_SLAB = registerBlock("mossy_andesite_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_ANDESITE_BRICKS));
  public static final Block MOSSY_ANDESITE_BRICK_STAIRS = registerBlock("mossy_andesite_brick_stairs", (properties) -> new StairBlock(MOSSY_ANDESITE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_ANDESITE_BRICKS));
  public static final Block MOSSY_ANDESITE_BRICK_WALL = registerBlock("mossy_andesite_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_ANDESITE_BRICKS).forceSolidOn());
  public static final Block ANDESITE_TILES = registerBlock("andesite_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ANDESITE));
  public static final Block ANDESITE_TILE_SLAB = registerBlock("andesite_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.ANDESITE_TILES));
  public static final Block ANDESITE_TILE_STAIRS = registerBlock("andesite_tile_stairs", (properties) -> new StairBlock(ANDESITE_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.ANDESITE_TILES));
  public static final Block ANDESITE_TILE_WALL = registerBlock("andesite_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.ANDESITE_TILES).forceSolidOn());
  public static final Block CRACKED_ANDESITE_TILES = registerBlock("cracked_andesite_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ANDESITE));
  public static final Block ANDESITE_PILLAR = registerBlock("andesite_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ANDESITE));
  public static final Block POLISHED_END_STONE = registerBlock("polished_end_stone", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.END_STONE));
  public static final Block POLISHED_END_STONE_SLAB = registerBlock("polished_end_stone_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_END_STONE));
  public static final Block POLISHED_END_STONE_STAIRS = registerBlock("polished_end_stone_stairs", (properties) -> new StairBlock(POLISHED_END_STONE.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_END_STONE));
  public static final Block SMOOTH_END_STONE = registerBlock("smooth_end_stone", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.END_STONE));
  public static final Block SMOOTH_END_STONE_SLAB = registerBlock("smooth_end_stone_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SMOOTH_END_STONE));
  public static final Block CHISELED_END_STONE_BRICKS = registerBlock("chiseled_end_stone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.END_STONE));
  public static final Block CRACKED_END_STONE_BRICKS = registerBlock("cracked_end_stone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.END_STONE_BRICKS));
  public static final Block MOSSY_END_STONE_BRICKS = registerBlock("mossy_end_stone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.END_STONE_BRICKS));
  public static final Block MOSSY_END_STONE_BRICK_SLAB = registerBlock("mossy_end_stone_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_END_STONE_BRICKS));
  public static final Block MOSSY_END_STONE_BRICK_STAIRS = registerBlock("mossy_end_stone_brick_stairs", (properties) -> new StairBlock(MOSSY_END_STONE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_END_STONE_BRICKS));
  public static final Block MOSSY_END_STONE_BRICK_WALL = registerBlock("mossy_end_stone_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_END_STONE_BRICKS).forceSolidOn());
  public static final Block END_STONE_TILES = registerBlock("end_stone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.END_STONE_BRICKS));
  public static final Block END_STONE_TILE_SLAB = registerBlock("end_stone_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.END_STONE_TILES));
  public static final Block END_STONE_TILE_STAIRS = registerBlock("end_stone_tile_stairs", (properties) -> new StairBlock(END_STONE_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.END_STONE_TILES));
  public static final Block END_STONE_TILE_WALL = registerBlock("end_stone_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.END_STONE_TILES).forceSolidOn());
  public static final Block CRACKED_END_STONE_TILES = registerBlock("cracked_end_stone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.END_STONE_BRICKS));
  public static final Block END_STONE_PILLAR = registerBlock("end_stone_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.END_STONE_BRICKS));
  public static final Block SMOOTH_TUFF = registerBlock("smooth_tuff", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.TUFF));
  public static final Block SMOOTH_TUFF_SLAB = registerBlock("smooth_tuff_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SMOOTH_TUFF));
  public static final Block CRACKED_TUFF_BRICKS = registerBlock("cracked_tuff_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.TUFF).sound(SoundType.TUFF_BRICKS));
  public static final Block MOSSY_TUFF_BRICKS = registerBlock("mossy_tuff_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.TUFF).sound(SoundType.TUFF_BRICKS));
  public static final Block MOSSY_TUFF_BRICK_SLAB = registerBlock("mossy_tuff_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_TUFF_BRICKS));
  public static final Block MOSSY_TUFF_BRICK_STAIRS = registerBlock("mossy_tuff_brick_stairs", (properties) -> new StairBlock(MOSSY_TUFF_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_TUFF_BRICKS));
  public static final Block MOSSY_TUFF_BRICK_WALL = registerBlock("mossy_tuff_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_TUFF_BRICKS));
  public static final Block TUFF_TILES = registerBlock("tuff_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.TUFF).sound(SoundType.TUFF_BRICKS));
  public static final Block TUFF_TILE_SLAB = registerBlock("tuff_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.TUFF_TILES).sound(SoundType.TUFF_BRICKS));
  public static final Block TUFF_TILE_STAIRS = registerBlock("tuff_tile_stairs", (properties) -> new StairBlock(TUFF_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.TUFF_TILES).sound(SoundType.TUFF_BRICKS));
  public static final Block TUFF_TILE_WALL = registerBlock("tuff_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.TUFF_TILES).forceSolidOn().sound(SoundType.TUFF_BRICKS));
  public static final Block CRACKED_TUFF_TILES = registerBlock("cracked_tuff_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.TUFF).sound(SoundType.TUFF_BRICKS));
  public static final Block TUFF_PILLAR = registerBlock("tuff_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.TUFF).sound(SoundType.TUFF_BRICKS));
  public static final Block RED_SANDSTONE_BRICKS = registerBlock("red_sandstone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RED_SANDSTONE));
  public static final Block RED_SANDSTONE_BRICK_SLAB = registerBlock("red_sandstone_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.RED_SANDSTONE_BRICKS));
  public static final Block RED_SANDSTONE_BRICK_STAIRS = registerBlock("red_sandstone_brick_stairs", (properties) -> new StairBlock(RED_SANDSTONE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.RED_SANDSTONE_BRICKS));
  public static final Block RED_SANDSTONE_BRICK_WALL = registerBlock("red_sandstone_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.RED_SANDSTONE_BRICKS).forceSolidOn());
  public static final Block CRACKED_RED_SANDSTONE_BRICKS = registerBlock("cracked_red_sandstone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RED_SANDSTONE));
  public static final Block MOSSY_RED_SANDSTONE_BRICKS = registerBlock("mossy_red_sandstone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RED_SANDSTONE));
  public static final Block MOSSY_RED_SANDSTONE_BRICK_SLAB = registerBlock("mossy_red_sandstone_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_RED_SANDSTONE_BRICKS));
  public static final Block MOSSY_RED_SANDSTONE_BRICK_STAIRS = registerBlock("mossy_red_sandstone_brick_stairs", (properties) -> new StairBlock(MOSSY_RED_SANDSTONE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_RED_SANDSTONE_BRICKS));
  public static final Block MOSSY_RED_SANDSTONE_BRICK_WALL = registerBlock("mossy_red_sandstone_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_RED_SANDSTONE_BRICKS).forceSolidOn());
  public static final Block RED_SANDSTONE_TILES = registerBlock("red_sandstone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RED_SANDSTONE));
  public static final Block RED_SANDSTONE_TILE_SLAB = registerBlock("red_sandstone_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.RED_SANDSTONE_TILES));
  public static final Block RED_SANDSTONE_TILE_STAIRS = registerBlock("red_sandstone_tile_stairs", (properties) -> new StairBlock(RED_SANDSTONE_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.RED_SANDSTONE_TILES));
  public static final Block RED_SANDSTONE_TILE_WALL = registerBlock("red_sandstone_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.RED_SANDSTONE_TILES).forceSolidOn());
  public static final Block CRACKED_RED_SANDSTONE_TILES = registerBlock("cracked_red_sandstone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RED_SANDSTONE));
  public static final Block RED_SANDSTONE_PILLAR = registerBlock("red_sandstone_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RED_SANDSTONE));
  public static final Block POLISHED_CALCITE = registerBlock("polished_calcite", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CALCITE));
  public static final Block POLISHED_CALCITE_SLAB = registerBlock("polished_calcite_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_CALCITE));
  public static final Block POLISHED_CALCITE_STAIRS = registerBlock("polished_calcite_stairs", (properties) -> new StairBlock(POLISHED_CALCITE.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_CALCITE));
  public static final Block SMOOTH_CALCITE = registerBlock("smooth_calcite", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CALCITE));
  public static final Block SMOOTH_CALCITE_SLAB = registerBlock("smooth_calcite_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SMOOTH_CALCITE));
  public static final Block CHISELED_CALCITE_BRICKS = registerBlock("chiseled_calcite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CALCITE));
  public static final Block CALCITE_BRICKS = registerBlock("calcite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CALCITE));
  public static final Block CALCITE_BRICK_SLAB = registerBlock("calcite_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CALCITE_BRICKS));
  public static final Block CALCITE_BRICK_STAIRS = registerBlock("calcite_brick_stairs", (properties) -> new StairBlock(CALCITE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CALCITE_BRICKS));
  public static final Block CALCITE_BRICK_WALL = registerBlock("calcite_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CALCITE_BRICKS).forceSolidOn());
  public static final Block CRACKED_CALCITE_BRICKS = registerBlock("cracked_calcite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CALCITE));
  public static final Block MOSSY_CALCITE_BRICKS = registerBlock("mossy_calcite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CALCITE));
  public static final Block MOSSY_CALCITE_BRICK_SLAB = registerBlock("mossy_calcite_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_CALCITE_BRICKS));
  public static final Block MOSSY_CALCITE_BRICK_STAIRS = registerBlock("mossy_calcite_brick_stairs", (properties) -> new StairBlock(MOSSY_CALCITE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_CALCITE_BRICKS));
  public static final Block MOSSY_CALCITE_BRICK_WALL = registerBlock("mossy_calcite_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_CALCITE_BRICKS).forceSolidOn());
  public static final Block CALCITE_TILES = registerBlock("calcite_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CALCITE));
  public static final Block CALCITE_TILE_SLAB = registerBlock("calcite_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CALCITE_TILES));
  public static final Block CALCITE_TILE_STAIRS = registerBlock("calcite_tile_stairs", (properties) -> new StairBlock(CALCITE_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CALCITE_TILES));
  public static final Block CALCITE_TILE_WALL = registerBlock("calcite_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CALCITE_TILES).forceSolidOn());
  public static final Block CRACKED_CALCITE_TILES = registerBlock("cracked_calcite_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CALCITE));
  public static final Block CALCITE_PILLAR = registerBlock("calcite_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CALCITE));
  public static final Block POLISHED_DRIPSTONE = registerBlock("polished_dripstone", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DRIPSTONE_BLOCK));
  public static final Block POLISHED_DRIPSTONE_SLAB = registerBlock("polished_dripstone_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_DRIPSTONE));
  public static final Block POLISHED_DRIPSTONE_STAIRS = registerBlock("polished_dripstone_stairs", (properties) -> new StairBlock(POLISHED_DRIPSTONE.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_DRIPSTONE));
  public static final Block SMOOTH_DRIPSTONE = registerBlock("smooth_dripstone", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DRIPSTONE_BLOCK));
  public static final Block SMOOTH_DRIPSTONE_SLAB = registerBlock("smooth_dripstone_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SMOOTH_DRIPSTONE));
  public static final Block CHISELED_DRIPSTONE_BRICKS = registerBlock("chiseled_dripstone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DRIPSTONE_BLOCK));
  public static final Block DRIPSTONE_BRICKS = registerBlock("dripstone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DRIPSTONE_BLOCK));
  public static final Block DRIPSTONE_BRICK_SLAB = registerBlock("dripstone_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.DRIPSTONE_BRICKS));
  public static final Block DRIPSTONE_BRICK_STAIRS = registerBlock("dripstone_brick_stairs", (properties) -> new StairBlock(DRIPSTONE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.DRIPSTONE_BRICKS));
  public static final Block DRIPSTONE_BRICK_WALL = registerBlock("dripstone_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.DRIPSTONE_BRICKS).forceSolidOn());
  public static final Block CRACKED_DRIPSTONE_BRICKS = registerBlock("cracked_dripstone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DRIPSTONE_BLOCK));
  public static final Block MOSSY_DRIPSTONE_BRICKS = registerBlock("mossy_dripstone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DRIPSTONE_BLOCK));
  public static final Block MOSSY_DRIPSTONE_BRICK_SLAB = registerBlock("mossy_dripstone_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_DRIPSTONE_BRICKS));
  public static final Block MOSSY_DRIPSTONE_BRICK_STAIRS = registerBlock("mossy_dripstone_brick_stairs", (properties) -> new StairBlock(MOSSY_DRIPSTONE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_DRIPSTONE_BRICKS));
  public static final Block MOSSY_DRIPSTONE_BRICK_WALL = registerBlock("mossy_dripstone_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_DRIPSTONE_BRICKS).forceSolidOn());
  public static final Block DRIPSTONE_TILES = registerBlock("dripstone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DRIPSTONE_BLOCK));
  public static final Block DRIPSTONE_TILE_SLAB = registerBlock("dripstone_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.DRIPSTONE_TILES));
  public static final Block DRIPSTONE_TILE_STAIRS = registerBlock("dripstone_tile_stairs", (properties) -> new StairBlock(DRIPSTONE_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.DRIPSTONE_TILES));
  public static final Block DRIPSTONE_TILE_WALL = registerBlock("dripstone_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.DRIPSTONE_TILES).forceSolidOn());
  public static final Block CRACKED_DRIPSTONE_TILES = registerBlock("cracked_dripstone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DRIPSTONE_BLOCK));
  public static final Block DRIPSTONE_PILLAR = registerBlock("dripstone_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DRIPSTONE_BLOCK));
  public static final Block POLISHED_PRISMARINE = registerBlock("polished_prismarine", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PRISMARINE));
  public static final Block POLISHED_PRISMARINE_SLAB = registerBlock("polished_prismarine_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_PRISMARINE));
  public static final Block POLISHED_PRISMARINE_STAIRS = registerBlock("polished_prismarine_stairs", (properties) -> new StairBlock(POLISHED_PRISMARINE.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_PRISMARINE));
  public static final Block SMOOTH_PRISMARINE = registerBlock("smooth_prismarine", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PRISMARINE));
  public static final Block SMOOTH_PRISMARINE_SLAB = registerBlock("smooth_prismarine_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SMOOTH_PRISMARINE));
  public static final Block CHISELED_PRISMARINE_BRICKS = registerBlock("chiseled_prismarine_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PRISMARINE));
  public static final Block CRACKED_PRISMARINE_BRICKS = registerBlock("cracked_prismarine_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PRISMARINE_BRICKS));
  public static final Block MOSSY_PRISMARINE_BRICKS = registerBlock("mossy_prismarine_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PRISMARINE_BRICKS));
  public static final Block MOSSY_PRISMARINE_BRICK_SLAB = registerBlock("mossy_prismarine_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_PRISMARINE_BRICKS));
  public static final Block MOSSY_PRISMARINE_BRICK_STAIRS = registerBlock("mossy_prismarine_brick_stairs", (properties) -> new StairBlock(MOSSY_PRISMARINE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_PRISMARINE_BRICKS));
  public static final Block MOSSY_PRISMARINE_BRICK_WALL = registerBlock("mossy_prismarine_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_PRISMARINE_BRICKS).forceSolidOn());
  public static final Block PRISMARINE_TILES = registerBlock("prismarine_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PRISMARINE_BRICKS));
  public static final Block PRISMARINE_TILE_SLAB = registerBlock("prismarine_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.PRISMARINE_TILES));
  public static final Block PRISMARINE_TILE_STAIRS = registerBlock("prismarine_tile_stairs", (properties) -> new StairBlock(PRISMARINE_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.PRISMARINE_TILES));
  public static final Block PRISMARINE_TILE_WALL = registerBlock("prismarine_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.PRISMARINE_TILES).forceSolidOn());
  public static final Block CRACKED_PRISMARINE_TILES = registerBlock("cracked_prismarine_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PRISMARINE_BRICKS));
  public static final Block PRISMARINE_PILLAR = registerBlock("prismarine_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PRISMARINE_BRICKS));
  public static final Block SMOOTH_BLACKSTONE = registerBlock("smooth_blackstone", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BLACKSTONE));
  public static final Block SMOOTH_BLACKSTONE_SLAB = registerBlock("smooth_blackstone_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SMOOTH_BLACKSTONE));
  public static final Block CORRUPTED_POLISHED_BLACKSTONE_BRICKS = registerBlock("corrupted_polished_blackstone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.POLISHED_BLACKSTONE_BRICKS));
  public static final Block CORRUPTED_POLISHED_BLACKSTONE_BRICK_SLAB = registerBlock("corrupted_polished_blackstone_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CORRUPTED_POLISHED_BLACKSTONE_BRICKS));
  public static final Block CORRUPTED_POLISHED_BLACKSTONE_BRICK_STAIRS = registerBlock("corrupted_polished_blackstone_brick_stairs", (properties) -> new StairBlock(CORRUPTED_POLISHED_BLACKSTONE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CORRUPTED_POLISHED_BLACKSTONE_BRICKS));
  public static final Block CORRUPTED_POLISHED_BLACKSTONE_BRICK_WALL = registerBlock("corrupted_polished_blackstone_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CORRUPTED_POLISHED_BLACKSTONE_BRICKS).forceSolidOn());
  public static final Block POLISHED_BLACKSTONE_TILES = registerBlock("polished_blackstone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.POLISHED_BLACKSTONE_BRICKS));
  public static final Block POLISHED_BLACKSTONE_TILE_SLAB = registerBlock("polished_blackstone_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_BLACKSTONE_TILES));
  public static final Block POLISHED_BLACKSTONE_TILE_STAIRS = registerBlock("polished_blackstone_tile_stairs", (properties) -> new StairBlock(POLISHED_BLACKSTONE_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_BLACKSTONE_TILES));
  public static final Block POLISHED_BLACKSTONE_TILE_WALL = registerBlock("polished_blackstone_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_BLACKSTONE_TILES).forceSolidOn());
  public static final Block CRACKED_POLISHED_BLACKSTONE_TILES = registerBlock("cracked_polished_blackstone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.POLISHED_BLACKSTONE_BRICKS));
  public static final Block POLISHED_BLACKSTONE_PILLAR = registerBlock("polished_blackstone_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.POLISHED_BLACKSTONE_BRICKS));
  public static final Block CRACKED_QUARTZ_BRICKS = registerBlock("cracked_quartz_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.QUARTZ_BRICKS));
  public static final Block CUT_QUARTZ = registerBlock("cut_quartz", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.QUARTZ_BRICKS));
  public static final Block CRACKED_CUT_QUARTZ = registerBlock("cracked_cut_quartz", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.QUARTZ_BRICKS));
  public static final Block POLISHED_MUD = registerBlock("polished_mud", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.MUD_BRICKS));
  public static final Block POLISHED_MUD_SLAB = registerBlock("polished_mud_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_MUD));
  public static final Block POLISHED_MUD_STAIRS = registerBlock("polished_mud_stairs", (properties) -> new StairBlock(POLISHED_MUD.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_MUD));
  public static final Block SMOOTH_MUD = registerBlock("smooth_mud", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.MUD_BRICKS));
  public static final Block SMOOTH_MUD_SLAB = registerBlock("smooth_mud_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SMOOTH_MUD));
  public static final Block CHISELED_MUD_BRICKS = registerBlock("chiseled_mud_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.MUD_BRICKS));
  public static final Block CRACKED_MUD_BRICKS = registerBlock("cracked_mud_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.MUD_BRICKS));
  public static final Block MOSSY_MUD_BRICKS = registerBlock("mossy_mud_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.MUD_BRICKS));
  public static final Block MOSSY_MUD_BRICK_SLAB = registerBlock("mossy_mud_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_MUD_BRICKS));
  public static final Block MOSSY_MUD_BRICK_STAIRS = registerBlock("mossy_mud_brick_stairs", (properties) -> new StairBlock(MOSSY_MUD_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_MUD_BRICKS));
  public static final Block MOSSY_MUD_BRICK_WALL = registerBlock("mossy_mud_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_MUD_BRICKS).forceSolidOn());
  public static final Block MUD_TILES = registerBlock("mud_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.MUD_BRICKS));
  public static final Block MUD_TILE_SLAB = registerBlock("mud_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MUD_TILES));
  public static final Block MUD_TILE_STAIRS = registerBlock("mud_tile_stairs", (properties) -> new StairBlock(MUD_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MUD_TILES));
  public static final Block MUD_TILE_WALL = registerBlock("mud_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MUD_TILES).forceSolidOn());
  public static final Block CRACKED_MUD_TILES = registerBlock("cracked_mud_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.MUD_BRICKS));
  public static final Block MUD_PILLAR = registerBlock("mud_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.MUD_BRICKS));
  public static final Block SANDSTONE_BRICKS = registerBlock("sandstone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SANDSTONE));
  public static final Block SANDSTONE_BRICK_SLAB = registerBlock("sandstone_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SANDSTONE_BRICKS));
  public static final Block SANDSTONE_BRICK_STAIRS = registerBlock("sandstone_brick_stairs", (properties) -> new StairBlock(SANDSTONE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SANDSTONE_BRICKS));
  public static final Block SANDSTONE_BRICK_WALL = registerBlock("sandstone_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SANDSTONE_BRICKS).forceSolidOn());
  public static final Block CRACKED_SANDSTONE_BRICKS = registerBlock("cracked_sandstone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SANDSTONE));
  public static final Block MOSSY_SANDSTONE_BRICKS = registerBlock("mossy_sandstone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SANDSTONE));
  public static final Block MOSSY_SANDSTONE_BRICK_SLAB = registerBlock("mossy_sandstone_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_SANDSTONE_BRICKS));
  public static final Block MOSSY_SANDSTONE_BRICK_STAIRS = registerBlock("mossy_sandstone_brick_stairs", (properties) -> new StairBlock(MOSSY_SANDSTONE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_SANDSTONE_BRICKS));
  public static final Block MOSSY_SANDSTONE_BRICK_WALL = registerBlock("mossy_sandstone_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_SANDSTONE_BRICKS).forceSolidOn());
  public static final Block SANDSTONE_TILES = registerBlock("sandstone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SANDSTONE));
  public static final Block SANDSTONE_TILE_SLAB = registerBlock("sandstone_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SANDSTONE_TILES));
  public static final Block SANDSTONE_TILE_STAIRS = registerBlock("sandstone_tile_stairs", (properties) -> new StairBlock(SANDSTONE_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SANDSTONE_TILES));
  public static final Block SANDSTONE_TILE_WALL = registerBlock("sandstone_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SANDSTONE_TILES).forceSolidOn());
  public static final Block CRACKED_SANDSTONE_TILES = registerBlock("cracked_sandstone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SANDSTONE));
  public static final Block SANDSTONE_PILLAR = registerBlock("sandstone_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SANDSTONE));
  public static final Block NETHER_BRICKS_PILLAR = registerBlock("nether_bricks_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.NETHER_BRICKS));
  public static final Block CHISELED_RED_NETHER_BRICKS = registerBlock("chiseled_red_nether_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.NETHER_BRICKS));
  public static final Block CRACKED_RED_NETHER_BRICKS = registerBlock("cracked_red_nether_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.NETHER_BRICKS));
  public static final Block RED_NETHER_BRICKS_PILLAR = registerBlock("red_nether_bricks_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.NETHER_BRICKS));
  public static final Block POLISHED_ICE = registerBlock("polished_ice", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ICE));
  public static final Block POLISHED_ICE_SLAB = registerBlock("polished_ice_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_ICE));
  public static final Block POLISHED_ICE_STAIRS = registerBlock("polished_ice_stairs", (properties) -> new StairBlock(POLISHED_ICE.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_ICE));
  public static final Block ICE_BRICKS = registerBlock("ice_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ICE));
  public static final Block ICE_BRICK_SLAB = registerBlock("ice_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.ICE_BRICKS));
  public static final Block ICE_BRICK_STAIRS = registerBlock("ice_brick_stairs", (properties) -> new StairBlock(ICE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.ICE_BRICKS));
  public static final Block ICE_BRICK_WALL = registerBlock("ice_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.ICE_BRICKS).forceSolidOn());
  public static final Block CRACKED_ICE_BRICKS = registerBlock("cracked_ice_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ICE));
  public static final Block ICE_TILES = registerBlock("ice_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ICE));
  public static final Block ICE_TILE_SLAB = registerBlock("ice_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.ICE_TILES));
  public static final Block ICE_TILE_STAIRS = registerBlock("ice_tile_stairs", (properties) -> new StairBlock(ICE_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.ICE_TILES));
  public static final Block ICE_TILE_WALL = registerBlock("ice_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.ICE_TILES).forceSolidOn());
  public static final Block CRACKED_ICE_TILES = registerBlock("cracked_ice_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ICE));
  public static final Block ICE_PILLAR = registerBlock("ice_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ICE));
  public static final Block POLISHED_PURPUR = registerBlock("polished_purpur", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PURPUR_BLOCK));
  public static final Block POLISHED_PURPUR_SLAB = registerBlock("polished_purpur_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_PURPUR));
  public static final Block POLISHED_PURPUR_STAIRS = registerBlock("polished_purpur_stairs", (properties) -> new StairBlock(POLISHED_PURPUR.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_PURPUR));
  public static final Block SMOOTH_PURPUR = registerBlock("smooth_purpur", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PURPUR_BLOCK));
  public static final Block SMOOTH_PURPUR_SLAB = registerBlock("smooth_purpur_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SMOOTH_PURPUR));
  public static final Block CHISELED_PURPUR = registerBlock("chiseled_purpur", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PURPUR_BLOCK).lightLevel((state) -> Constants.CHISELED_PURPUR_LIGHT_LEVEL));
  public static final Block CRACKED_PURPUR_BLOCK = registerBlock("cracked_purpur_block", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PURPUR_BLOCK));
  public static final Block MOSSY_PURPUR_BLOCK = registerBlock("mossy_purpur_block", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PURPUR_BLOCK));
  public static final Block MOSSY_PURPUR_BLOCK_SLAB = registerBlock("mossy_purpur_block_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_PURPUR_BLOCK));
  public static final Block MOSSY_PURPUR_BLOCK_STAIRS = registerBlock("mossy_purpur_block_stairs", (properties) -> new StairBlock(MOSSY_PURPUR_BLOCK.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_PURPUR_BLOCK));
  public static final Block MOSSY_PURPUR_BLOCK_WALL = registerBlock("mossy_purpur_block_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_PURPUR_BLOCK).forceSolidOn());
  public static final Block PURPUR_TILES = registerBlock("purpur_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PURPUR_BLOCK));
  public static final Block PURPUR_TILE_SLAB = registerBlock("purpur_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.PURPUR_TILES));
  public static final Block PURPUR_TILE_STAIRS = registerBlock("purpur_tile_stairs", (properties) -> new StairBlock(PURPUR_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.PURPUR_TILES));
  public static final Block PURPUR_TILE_WALL = registerBlock("purpur_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.PURPUR_TILES).forceSolidOn());
  public static final Block CRACKED_PURPUR_TILES = registerBlock("cracked_purpur_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PURPUR_BLOCK));
  public static final Block TERRACOTTA_BRICKS = registerBlock("terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.TERRACOTTA));
  public static final Block WHITE_TERRACOTTA_BRICKS = registerBlock("white_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.WHITE_TERRACOTTA));
  public static final Block LIGHT_GRAY_TERRACOTTA_BRICKS = registerBlock("light_gray_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LIGHT_GRAY_TERRACOTTA));
  public static final Block GRAY_TERRACOTTA_BRICKS = registerBlock("gray_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GRAY_TERRACOTTA));
  public static final Block BLACK_TERRACOTTA_BRICKS = registerBlock("black_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BLACK_TERRACOTTA));
  public static final Block BROWN_TERRACOTTA_BRICKS = registerBlock("brown_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BROWN_TERRACOTTA));
  public static final Block RED_TERRACOTTA_BRICKS = registerBlock("red_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RED_TERRACOTTA));
  public static final Block ORANGE_TERRACOTTA_BRICKS = registerBlock("orange_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ORANGE_TERRACOTTA));
  public static final Block YELLOW_TERRACOTTA_BRICKS = registerBlock("yellow_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.YELLOW_TERRACOTTA));
  public static final Block LIME_TERRACOTTA_BRICKS = registerBlock("lime_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LIME_TERRACOTTA));
  public static final Block GREEN_TERRACOTTA_BRICKS = registerBlock("green_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GREEN_TERRACOTTA));
  public static final Block CYAN_TERRACOTTA_BRICKS = registerBlock("cyan_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CYAN_TERRACOTTA));
  public static final Block LIGHT_BLUE_TERRACOTTA_BRICKS = registerBlock("light_blue_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LIGHT_BLUE_TERRACOTTA));
  public static final Block BLUE_TERRACOTTA_BRICKS = registerBlock("blue_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BLUE_TERRACOTTA));
  public static final Block PURPLE_TERRACOTTA_BRICKS = registerBlock("purple_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PURPLE_TERRACOTTA));
  public static final Block MAGENTA_TERRACOTTA_BRICKS = registerBlock("magenta_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.MAGENTA_TERRACOTTA));
  public static final Block PINK_TERRACOTTA_BRICKS = registerBlock("pink_terracotta_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PINK_TERRACOTTA));
  public static final Block TERRACOTTA_TILES = registerBlock("terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.TERRACOTTA));
  public static final Block WHITE_TERRACOTTA_TILES = registerBlock("white_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.WHITE_TERRACOTTA));
  public static final Block LIGHT_GRAY_TERRACOTTA_TILES = registerBlock("light_gray_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LIGHT_GRAY_TERRACOTTA));
  public static final Block GRAY_TERRACOTTA_TILES = registerBlock("gray_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GRAY_TERRACOTTA));
  public static final Block BLACK_TERRACOTTA_TILES = registerBlock("black_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BLACK_TERRACOTTA));
  public static final Block BROWN_TERRACOTTA_TILES = registerBlock("brown_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BROWN_TERRACOTTA));
  public static final Block RED_TERRACOTTA_TILES = registerBlock("red_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RED_TERRACOTTA));
  public static final Block ORANGE_TERRACOTTA_TILES = registerBlock("orange_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ORANGE_TERRACOTTA));
  public static final Block YELLOW_TERRACOTTA_TILES = registerBlock("yellow_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.YELLOW_TERRACOTTA));
  public static final Block LIME_TERRACOTTA_TILES = registerBlock("lime_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LIME_TERRACOTTA));
  public static final Block GREEN_TERRACOTTA_TILES = registerBlock("green_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GREEN_TERRACOTTA));
  public static final Block CYAN_TERRACOTTA_TILES = registerBlock("cyan_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CYAN_TERRACOTTA));
  public static final Block LIGHT_BLUE_TERRACOTTA_TILES = registerBlock("light_blue_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LIGHT_BLUE_TERRACOTTA));
  public static final Block BLUE_TERRACOTTA_TILES = registerBlock("blue_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BLUE_TERRACOTTA));
  public static final Block PURPLE_TERRACOTTA_TILES = registerBlock("purple_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PURPLE_TERRACOTTA));
  public static final Block MAGENTA_TERRACOTTA_TILES = registerBlock("magenta_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.MAGENTA_TERRACOTTA));
  public static final Block PINK_TERRACOTTA_TILES = registerBlock("pink_terracotta_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PINK_TERRACOTTA));
  public static final Block WHITE_CONCRETE_BRICKS = registerBlock("white_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.WHITE_CONCRETE));
  public static final Block LIGHT_GRAY_CONCRETE_BRICKS = registerBlock("light_gray_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LIGHT_GRAY_CONCRETE));
  public static final Block GRAY_CONCRETE_BRICKS = registerBlock("gray_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GRAY_CONCRETE));
  public static final Block BLACK_CONCRETE_BRICKS = registerBlock("black_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BLACK_CONCRETE));
  public static final Block BROWN_CONCRETE_BRICKS = registerBlock("brown_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BROWN_CONCRETE));
  public static final Block RED_CONCRETE_BRICKS = registerBlock("red_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RED_CONCRETE));
  public static final Block ORANGE_CONCRETE_BRICKS = registerBlock("orange_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ORANGE_CONCRETE));
  public static final Block YELLOW_CONCRETE_BRICKS = registerBlock("yellow_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.YELLOW_CONCRETE));
  public static final Block LIME_CONCRETE_BRICKS = registerBlock("lime_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LIME_CONCRETE));
  public static final Block GREEN_CONCRETE_BRICKS = registerBlock("green_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GREEN_CONCRETE));
  public static final Block CYAN_CONCRETE_BRICKS = registerBlock("cyan_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CYAN_CONCRETE));
  public static final Block LIGHT_BLUE_CONCRETE_BRICKS = registerBlock("light_blue_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LIGHT_BLUE_CONCRETE));
  public static final Block BLUE_CONCRETE_BRICKS = registerBlock("blue_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BLUE_CONCRETE));
  public static final Block PURPLE_CONCRETE_BRICKS = registerBlock("purple_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PURPLE_CONCRETE));
  public static final Block MAGENTA_CONCRETE_BRICKS = registerBlock("magenta_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.MAGENTA_CONCRETE));
  public static final Block PINK_CONCRETE_BRICKS = registerBlock("pink_concrete_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PINK_CONCRETE));
  public static final Block WHITE_CONCRETE_TILES = registerBlock("white_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.WHITE_CONCRETE));
  public static final Block LIGHT_GRAY_CONCRETE_TILES = registerBlock("light_gray_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LIGHT_GRAY_CONCRETE));
  public static final Block GRAY_CONCRETE_TILES = registerBlock("gray_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GRAY_CONCRETE));
  public static final Block BLACK_CONCRETE_TILES = registerBlock("black_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BLACK_CONCRETE));
  public static final Block BROWN_CONCRETE_TILES = registerBlock("brown_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BROWN_CONCRETE));
  public static final Block RED_CONCRETE_TILES = registerBlock("red_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RED_CONCRETE));
  public static final Block ORANGE_CONCRETE_TILES = registerBlock("orange_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ORANGE_CONCRETE));
  public static final Block YELLOW_CONCRETE_TILES = registerBlock("yellow_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.YELLOW_CONCRETE));
  public static final Block LIME_CONCRETE_TILES = registerBlock("lime_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LIME_CONCRETE));
  public static final Block GREEN_CONCRETE_TILES = registerBlock("green_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GREEN_CONCRETE));
  public static final Block CYAN_CONCRETE_TILES = registerBlock("cyan_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CYAN_CONCRETE));
  public static final Block LIGHT_BLUE_CONCRETE_TILES = registerBlock("light_blue_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LIGHT_BLUE_CONCRETE));
  public static final Block BLUE_CONCRETE_TILES = registerBlock("blue_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BLUE_CONCRETE));
  public static final Block PURPLE_CONCRETE_TILES = registerBlock("purple_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PURPLE_CONCRETE));
  public static final Block MAGENTA_CONCRETE_TILES = registerBlock("magenta_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.MAGENTA_CONCRETE));
  public static final Block PINK_CONCRETE_TILES = registerBlock("pink_concrete_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PINK_CONCRETE));
  public static final Block SOUL_SANDSTONE = registerBlock("soul_sandstone", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SANDSTONE));
  public static final Block SOUL_SANDSTONE_SLAB = registerBlock("soul_sandstone_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SOUL_SANDSTONE));
  public static final Block SOUL_SANDSTONE_STAIRS = registerBlock("soul_sandstone_stairs", (properties) -> new StairBlock(SOUL_SANDSTONE.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SOUL_SANDSTONE));
  public static final Block SOUL_SANDSTONE_WALL = registerBlock("soul_sandstone_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SOUL_SANDSTONE));
  public static final Block CUT_SOUL_SANDSTONE = registerBlock("cut_soul_sandstone", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CUT_SANDSTONE));
  public static final Block CUT_SOUL_SANDSTONE_SLAB = registerBlock("cut_soul_sandstone_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CUT_SOUL_SANDSTONE));
  public static final Block SMOOTH_SOUL_SANDSTONE = registerBlock("smooth_soul_sandstone", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SMOOTH_SANDSTONE));
  public static final Block SMOOTH_SOUL_SANDSTONE_SLAB = registerBlock("smooth_soul_sandstone_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SMOOTH_SOUL_SANDSTONE));
  public static final Block SMOOTH_SOUL_SANDSTONE_STAIRS = registerBlock("smooth_soul_sandstone_stairs", (properties) -> new StairBlock(SMOOTH_SOUL_SANDSTONE.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SMOOTH_SOUL_SANDSTONE));
  public static final Block CHISELED_SOUL_SANDSTONE = registerBlock("chiseled_soul_sandstone", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CHISELED_SANDSTONE));
  public static final Block SOUL_SANDSTONE_BRICKS = registerBlock("soul_sandstone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SANDSTONE));
  public static final Block SOUL_SANDSTONE_BRICK_SLAB = registerBlock("soul_sandstone_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SOUL_SANDSTONE_BRICKS));
  public static final Block SOUL_SANDSTONE_BRICK_STAIRS = registerBlock("soul_sandstone_brick_stairs", (properties) -> new StairBlock(SOUL_SANDSTONE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SOUL_SANDSTONE_BRICKS));
  public static final Block SOUL_SANDSTONE_BRICK_WALL = registerBlock("soul_sandstone_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SOUL_SANDSTONE_BRICKS).forceSolidOn());
  public static final Block CRACKED_SOUL_SANDSTONE_BRICKS = registerBlock("cracked_soul_sandstone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SANDSTONE));
  public static final Block SOUL_SANDSTONE_TILES = registerBlock("soul_sandstone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SANDSTONE));
  public static final Block SOUL_SANDSTONE_TILE_SLAB = registerBlock("soul_sandstone_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SOUL_SANDSTONE_TILES));
  public static final Block SOUL_SANDSTONE_TILE_STAIRS = registerBlock("soul_sandstone_tile_stairs", (properties) -> new StairBlock(SOUL_SANDSTONE_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SOUL_SANDSTONE_TILES));
  public static final Block SOUL_SANDSTONE_TILE_WALL = registerBlock("soul_sandstone_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SOUL_SANDSTONE_TILES).forceSolidOn());
  public static final Block CRACKED_SOUL_SANDSTONE_TILES = registerBlock("cracked_soul_sandstone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SANDSTONE));
  public static final Block SOUL_SANDSTONE_PILLAR = registerBlock("soul_sandstone_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SANDSTONE));
  public static final Block COAL_BRICKS = registerBlock("coal_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.COAL_BLOCK));
  public static final Block CRACKED_COAL_BRICKS = registerBlock("cracked_coal_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.COAL_BLOCK));
  public static final Block CUT_COAL = registerBlock("cut_coal", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.COAL_BLOCK));
  public static final Block CRACKED_CUT_COAL = registerBlock("cracked_cut_coal", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.COAL_BLOCK));
  public static final Block COAL_PILLAR = registerBlock("coal_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.COAL_BLOCK));
  public static final Block IRON_BRICKS = registerBlock("iron_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.IRON_BLOCK));
  public static final Block CRACKED_IRON_BRICKS = registerBlock("cracked_iron_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.IRON_BLOCK));
  public static final Block CUT_IRON = registerBlock("cut_iron", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.IRON_BLOCK));
  public static final Block CRACKED_CUT_IRON = registerBlock("cracked_cut_iron", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.IRON_BLOCK));
  public static final Block IRON_PILLAR = registerBlock("iron_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.IRON_BLOCK));
  public static final Block IRON_GRATE = registerBlock("iron_grate", WaterloggedTransparentBlock::new, BlockBehaviour.Properties.of().noOcclusion().strength(Blocks.IRON_BLOCK.defaultDestroyTime()).requiresCorrectToolForDrops().sound(SoundType.METAL));
  public static final Block GOLD_BRICKS = registerBlock("gold_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GOLD_BLOCK));
  public static final Block CRACKED_GOLD_BRICKS = registerBlock("cracked_gold_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GOLD_BLOCK));
  public static final Block CUT_GOLD = registerBlock("cut_gold", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GOLD_BLOCK));
  public static final Block CRACKED_CUT_GOLD = registerBlock("cracked_cut_gold", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GOLD_BLOCK));
  public static final Block GOLD_PILLAR = registerBlock("gold_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GOLD_BLOCK));
  public static final Block REDSTONE_BRICKS = registerBlock("redstone_bricks", PoweredBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_BLOCK));
  public static final Block CRACKED_REDSTONE_BRICKS = registerBlock("cracked_redstone_bricks", CrackedPoweredBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_BLOCK));
  public static final Block CUT_REDSTONE = registerBlock("cut_redstone", PoweredBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_BLOCK));
  public static final Block CRACKED_CUT_REDSTONE = registerBlock("cracked_cut_redstone", CrackedPoweredBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_BLOCK));
  public static final Block REDSTONE_PILLAR = registerBlock("redstone_pillar", PoweredRotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.REDSTONE_BLOCK));
  public static final Block EMERALD_BRICKS = registerBlock("emerald_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.EMERALD_BLOCK));
  public static final Block CRACKED_EMERALD_BRICKS = registerBlock("cracked_emerald_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.EMERALD_BLOCK));
  public static final Block CUT_EMERALD = registerBlock("cut_emerald", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.EMERALD_BLOCK));
  public static final Block CRACKED_CUT_EMERALD = registerBlock("cracked_cut_emerald", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.EMERALD_BLOCK));
  public static final Block EMERALD_PILLAR = registerBlock("emerald_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.EMERALD_BLOCK));
  public static final Block LAPIS_BRICKS = registerBlock("lapis_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LAPIS_BLOCK));
  public static final Block CRACKED_LAPIS_BRICKS = registerBlock("cracked_lapis_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LAPIS_BLOCK));
  public static final Block CUT_LAPIS = registerBlock("cut_lapis", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LAPIS_BLOCK));
  public static final Block CRACKED_CUT_LAPIS = registerBlock("cracked_cut_lapis", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LAPIS_BLOCK));
  public static final Block LAPIS_PILLAR = registerBlock("lapis_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.LAPIS_BLOCK));
  public static final Block DIAMOND_BRICKS = registerBlock("diamond_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DIAMOND_BLOCK));
  public static final Block CRACKED_DIAMOND_BRICKS = registerBlock("cracked_diamond_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DIAMOND_BLOCK));
  public static final Block CUT_DIAMOND = registerBlock("cut_diamond", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DIAMOND_BLOCK));
  public static final Block CRACKED_CUT_DIAMOND = registerBlock("cracked_cut_diamond", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DIAMOND_BLOCK));
  public static final Block DIAMOND_PILLAR = registerBlock("diamond_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DIAMOND_BLOCK));
  public static final Block DIAMOND_GRATE = registerBlock("diamond_grate", WaterloggedTransparentBlock::new, BlockBehaviour.Properties.of().noOcclusion().strength(Blocks.DIAMOND_BLOCK.defaultDestroyTime()).requiresCorrectToolForDrops().sound(SoundType.METAL));
  public static final Block NETHERITE_BRICKS = registerBlock("netherite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.NETHERITE_BLOCK));
  public static final Block CRACKED_NETHERITE_BRICKS = registerBlock("cracked_netherite_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.NETHERITE_BLOCK));
  public static final Block CUT_NETHERITE = registerBlock("cut_netherite", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.NETHERITE_BLOCK));
  public static final Block CRACKED_CUT_NETHERITE = registerBlock("cracked_cut_netherite", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.NETHERITE_BLOCK));
  public static final Block NETHERITE_PILLAR = registerBlock("netherite_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.NETHERITE_BLOCK));
  public static final Block NETHERITE_GRATE = registerBlock("netherite_grate", WaterloggedTransparentBlock::new, BlockBehaviour.Properties.of().noOcclusion().strength(Blocks.NETHERITE_BLOCK.defaultDestroyTime()).requiresCorrectToolForDrops().sound(SoundType.NETHERITE_BLOCK));
  public static final Block AMETHYST_BRICKS = registerBlock("amethyst_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.AMETHYST_BLOCK));
  public static final Block CRACKED_AMETHYST_BRICKS = registerBlock("cracked_amethyst_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.AMETHYST_BLOCK));
  public static final Block CUT_AMETHYST = registerBlock("cut_amethyst", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.AMETHYST_BLOCK));
  public static final Block CRACKED_CUT_AMETHYST = registerBlock("cracked_cut_amethyst", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.AMETHYST_BLOCK));
  public static final Block AMETHYST_PILLAR = registerBlock("amethyst_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.AMETHYST_BLOCK));
  public static final Block SHINGLES = registerBlock("shingles", Block::new, BlockBehaviour.Properties.of().mapColor(MapColor.TERRACOTTA_BROWN).instrument(NoteBlockInstrument.BASEDRUM).requiresCorrectToolForDrops().strength(Constants.SHINGLES_DESTROY_TIME, Constants.SHINGLES_EXPLOSION_RESISTANCE).sound(SoundType.DEEPSLATE_TILES));
  public static final Block WHITE_SHINGLES = registerBlock("white_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_WHITE));
  public static final Block LIGHT_GRAY_SHINGLES = registerBlock("light_gray_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SHINGLES).mapColor(MapColor.TERRACOTTA_LIGHT_GRAY));
  public static final Block GRAY_SHINGLES = registerBlock("gray_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SHINGLES).mapColor(MapColor.TERRACOTTA_GRAY));
  public static final Block BLACK_SHINGLES = registerBlock("black_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SHINGLES).mapColor(MapColor.TERRACOTTA_BLACK));
  public static final Block BROWN_SHINGLES = registerBlock("brown_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SHINGLES).mapColor(MapColor.TERRACOTTA_BROWN));
  public static final Block RED_SHINGLES = registerBlock("red_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SHINGLES).mapColor(MapColor.TERRACOTTA_RED));
  public static final Block ORANGE_SHINGLES = registerBlock("orange_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SHINGLES).mapColor(MapColor.TERRACOTTA_ORANGE));
  public static final Block YELLOW_SHINGLES = registerBlock("yellow_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SHINGLES).mapColor(MapColor.TERRACOTTA_YELLOW));
  public static final Block LIME_SHINGLES = registerBlock("lime_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SHINGLES).mapColor(MapColor.TERRACOTTA_LIGHT_GREEN));
  public static final Block GREEN_SHINGLES = registerBlock("green_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SHINGLES).mapColor(MapColor.TERRACOTTA_GREEN));
  public static final Block CYAN_SHINGLES = registerBlock("cyan_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SHINGLES).mapColor(MapColor.TERRACOTTA_CYAN));
  public static final Block LIGHT_BLUE_SHINGLES = registerBlock("light_blue_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SHINGLES).mapColor(MapColor.TERRACOTTA_LIGHT_BLUE));
  public static final Block BLUE_SHINGLES = registerBlock("blue_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SHINGLES).mapColor(MapColor.TERRACOTTA_BLUE));
  public static final Block PURPLE_SHINGLES = registerBlock("purple_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SHINGLES).mapColor(MapColor.TERRACOTTA_PURPLE));
  public static final Block MAGENTA_SHINGLES = registerBlock("magenta_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SHINGLES).mapColor(MapColor.TERRACOTTA_MAGENTA));
  public static final Block PINK_SHINGLES = registerBlock("pink_shingles", Block::new, BlockBehaviour.Properties.ofFullCopy(SHINGLES).mapColor(MapColor.TERRACOTTA_PINK));
  public static final Block OAK_MOSAIC = registerBlock("oak_mosaic", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.OAK_PLANKS));
  public static final Block OAK_MOSAIC_SLAB = registerBlock("oak_mosaic_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.OAK_MOSAIC));
  public static final Block OAK_MOSAIC_STAIRS = registerBlock("oak_mosaic_stairs", (properties) -> new StairBlock(OAK_MOSAIC.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.OAK_MOSAIC));
  public static final Block CARVED_OAK_LOG = registerBlock("carved_oak_log", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_LOG));
  public static final Block CARVED_OAK_WOOD = registerBlock("carved_oak_wood", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_OAK_WOOD));
  public static final Block SPRUCE_MOSAIC = registerBlock("spruce_mosaic", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.SPRUCE_PLANKS));
  public static final Block SPRUCE_MOSAIC_SLAB = registerBlock("spruce_mosaic_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SPRUCE_MOSAIC));
  public static final Block SPRUCE_MOSAIC_STAIRS = registerBlock("spruce_mosaic_stairs", (properties) -> new StairBlock(SPRUCE_MOSAIC.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.SPRUCE_MOSAIC));
  public static final Block CARVED_SPRUCE_LOG = registerBlock("carved_spruce_log", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_SPRUCE_LOG));
  public static final Block CARVED_SPRUCE_WOOD = registerBlock("carved_spruce_wood", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_SPRUCE_WOOD));
  public static final Block BIRCH_MOSAIC = registerBlock("birch_mosaic", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BIRCH_PLANKS));
  public static final Block BIRCH_MOSAIC_SLAB = registerBlock("birch_mosaic_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.BIRCH_MOSAIC));
  public static final Block BIRCH_MOSAIC_STAIRS = registerBlock("birch_mosaic_stairs", (properties) -> new StairBlock(BIRCH_MOSAIC.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.BIRCH_MOSAIC));
  public static final Block CARVED_BIRCH_LOG = registerBlock("carved_birch_log", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_BIRCH_LOG));
  public static final Block CARVED_BIRCH_WOOD = registerBlock("carved_birch_wood", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_BIRCH_WOOD));
  public static final Block JUNGLE_MOSAIC = registerBlock("jungle_mosaic", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.JUNGLE_PLANKS));
  public static final Block JUNGLE_MOSAIC_SLAB = registerBlock("jungle_mosaic_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.JUNGLE_MOSAIC));
  public static final Block JUNGLE_MOSAIC_STAIRS = registerBlock("jungle_mosaic_stairs", (properties) -> new StairBlock(JUNGLE_MOSAIC.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.JUNGLE_MOSAIC));
  public static final Block CARVED_JUNGLE_LOG = registerBlock("carved_jungle_log", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_JUNGLE_LOG));
  public static final Block CARVED_JUNGLE_WOOD = registerBlock("carved_jungle_wood", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_JUNGLE_WOOD));
  public static final Block ACACIA_MOSAIC = registerBlock("acacia_mosaic", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.ACACIA_PLANKS));
  public static final Block ACACIA_MOSAIC_SLAB = registerBlock("acacia_mosaic_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.ACACIA_MOSAIC));
  public static final Block ACACIA_MOSAIC_STAIRS = registerBlock("acacia_mosaic_stairs", (properties) -> new StairBlock(ACACIA_MOSAIC.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.ACACIA_MOSAIC));
  public static final Block CARVED_ACACIA_LOG = registerBlock("carved_acacia_log", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_ACACIA_LOG));
  public static final Block CARVED_ACACIA_WOOD = registerBlock("carved_acacia_wood", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_ACACIA_WOOD));
  public static final Block DARK_OAK_MOSAIC = registerBlock("dark_oak_mosaic", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DARK_OAK_PLANKS));
  public static final Block DARK_OAK_MOSAIC_SLAB = registerBlock("dark_oak_mosaic_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.DARK_OAK_MOSAIC));
  public static final Block DARK_OAK_MOSAIC_STAIRS = registerBlock("dark_oak_mosaic_stairs", (properties) -> new StairBlock(DARK_OAK_MOSAIC.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.DARK_OAK_MOSAIC));
  public static final Block CARVED_DARK_OAK_LOG = registerBlock("carved_dark_oak_log", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_DARK_OAK_LOG));
  public static final Block CARVED_DARK_OAK_WOOD = registerBlock("carved_dark_oak_wood", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.DARK_OAK_WOOD));
  public static final Block MANGROVE_MOSAIC = registerBlock("mangrove_mosaic", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.MANGROVE_PLANKS));
  public static final Block MANGROVE_MOSAIC_SLAB = registerBlock("mangrove_mosaic_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MANGROVE_MOSAIC));
  public static final Block MANGROVE_MOSAIC_STAIRS = registerBlock("mangrove_mosaic_stairs", (properties) -> new StairBlock(MANGROVE_MOSAIC.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MANGROVE_MOSAIC));
  public static final Block CARVED_MANGROVE_LOG = registerBlock("carved_mangrove_log", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_MANGROVE_LOG));
  public static final Block CARVED_MANGROVE_WOOD = registerBlock("carved_mangrove_wood", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_MANGROVE_WOOD));
  public static final Block CRIMSON_MOSAIC = registerBlock("crimson_mosaic", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CRIMSON_PLANKS));
  public static final Block CRIMSON_MOSAIC_SLAB = registerBlock("crimson_mosaic_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CRIMSON_MOSAIC));
  public static final Block CRIMSON_MOSAIC_STAIRS = registerBlock("crimson_mosaic_stairs", (properties) -> new StairBlock(CRIMSON_MOSAIC.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CRIMSON_MOSAIC));
  public static final Block CARVED_CRIMSON_STEM = registerBlock("carved_crimson_stem", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_CRIMSON_STEM));
  public static final Block CARVED_CRIMSON_HYPHAE = registerBlock("carved_crimson_hyphae", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_CRIMSON_HYPHAE));
  public static final Block WARPED_MOSAIC = registerBlock("warped_mosaic", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.WARPED_PLANKS));
  public static final Block WARPED_MOSAIC_SLAB = registerBlock("warped_mosaic_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.WARPED_MOSAIC));
  public static final Block WARPED_MOSAIC_STAIRS = registerBlock("warped_mosaic_stairs", (properties) -> new StairBlock(WARPED_MOSAIC.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.WARPED_MOSAIC));
  public static final Block CARVED_WARPED_STEM = registerBlock("carved_warped_stem", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_WARPED_STEM));
  public static final Block CARVED_WARPED_HYPHAE = registerBlock("carved_warped_hyphae", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_WARPED_HYPHAE));
  public static final Block CHERRY_MOSAIC = registerBlock("cherry_mosaic", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.CHERRY_PLANKS));
  public static final Block CHERRY_MOSAIC_SLAB = registerBlock("cherry_mosaic_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CHERRY_MOSAIC));
  public static final Block CHERRY_MOSAIC_STAIRS = registerBlock("cherry_mosaic_stairs", (properties) -> new StairBlock(CHERRY_MOSAIC.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CHERRY_MOSAIC));
  public static final Block CARVED_CHERRY_LOG = registerBlock("carved_cherry_log", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_CHERRY_LOG));
  public static final Block CARVED_CHERRY_WOOD = registerBlock("carved_cherry_wood", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_CHERRY_WOOD));
  public static final Block CARVED_BAMBOO_BLOCK = registerBlock("carved_bamboo_block", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_BAMBOO_BLOCK));
  public static final Block MOSSY_BRICKS = registerBlock("mossy_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BRICKS));
  public static final Block MOSSY_BRICK_SLAB = registerBlock("mossy_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_BRICKS));
  public static final Block MOSSY_BRICK_STAIRS = registerBlock("mossy_brick_stairs", (properties) -> new StairBlock(MOSSY_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_BRICKS));
  public static final Block MOSSY_BRICK_WALL = registerBlock("mossy_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.MOSSY_BRICKS).forceSolidOn());
  public static final Block CRACKED_BRICKS = registerBlock("cracked_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BRICKS));
  public static final Block TILED_GLASS = registerBlock("tiled_glass", TransparentBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GLASS));
  public static final Block TILED_TINTED_GLASS = registerBlock("tiled_tinted_glass", TintedGlassBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.TINTED_GLASS));
  public static final Block WHITE_STAINED_TILED_GLASS = registerBlock("white_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.WHITE, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.WHITE_STAINED_GLASS));
  public static final Block LIGHT_GRAY_STAINED_TILED_GLASS = registerBlock("light_gray_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.LIGHT_GRAY, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.LIGHT_GRAY_STAINED_GLASS));
  public static final Block GRAY_STAINED_TILED_GLASS = registerBlock("gray_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.GRAY, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.GRAY_STAINED_GLASS));
  public static final Block BLACK_STAINED_TILED_GLASS = registerBlock("black_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.BLACK, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.BLACK_STAINED_GLASS));
  public static final Block BROWN_STAINED_TILED_GLASS = registerBlock("brown_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.BROWN, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.BROWN_STAINED_GLASS));
  public static final Block RED_STAINED_TILED_GLASS = registerBlock("red_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.RED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.RED_STAINED_GLASS));
  public static final Block ORANGE_STAINED_TILED_GLASS = registerBlock("orange_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.ORANGE, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.ORANGE_STAINED_GLASS));
  public static final Block YELLOW_STAINED_TILED_GLASS = registerBlock("yellow_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.YELLOW, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.YELLOW_STAINED_GLASS));
  public static final Block LIME_STAINED_TILED_GLASS = registerBlock("lime_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.LIME, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.LIME_STAINED_GLASS));
  public static final Block GREEN_STAINED_TILED_GLASS = registerBlock("green_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.GREEN, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.GREEN_STAINED_GLASS));
  public static final Block CYAN_STAINED_TILED_GLASS = registerBlock("cyan_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.CYAN, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.CYAN_STAINED_GLASS));
  public static final Block LIGHT_BLUE_STAINED_TILED_GLASS = registerBlock("light_blue_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.LIGHT_BLUE, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.LIGHT_BLUE_STAINED_GLASS));
  public static final Block BLUE_STAINED_TILED_GLASS = registerBlock("blue_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.BLUE, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.BLUE_STAINED_GLASS));
  public static final Block PURPLE_STAINED_TILED_GLASS = registerBlock("purple_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.PURPLE, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.PURPLE_STAINED_GLASS));
  public static final Block MAGENTA_STAINED_TILED_GLASS = registerBlock("magenta_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.MAGENTA, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.MAGENTA_STAINED_GLASS));
  public static final Block PINK_STAINED_TILED_GLASS = registerBlock("pink_stained_tiled_glass", (properties) -> new StainedGlassBlock(DyeColor.PINK, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.PINK_STAINED_GLASS));
  public static final Block TILED_GLASS_PANE = registerBlock("tiled_glass_pane", IronBarsBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.GLASS_PANE));
  public static final Block WHITE_STAINED_TILED_GLASS_PANE = registerBlock("white_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.WHITE, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.WHITE_STAINED_GLASS_PANE));
  public static final Block LIGHT_GRAY_STAINED_TILED_GLASS_PANE = registerBlock("light_gray_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.LIGHT_GRAY, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.LIGHT_GRAY_STAINED_GLASS_PANE));
  public static final Block GRAY_STAINED_TILED_GLASS_PANE = registerBlock("gray_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.GRAY, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.GRAY_STAINED_GLASS_PANE));
  public static final Block BLACK_STAINED_TILED_GLASS_PANE = registerBlock("black_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.BLACK, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.BLACK_STAINED_GLASS_PANE));
  public static final Block BROWN_STAINED_TILED_GLASS_PANE = registerBlock("brown_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.BROWN, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.BROWN_STAINED_GLASS_PANE));
  public static final Block RED_STAINED_TILED_GLASS_PANE = registerBlock("red_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.RED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.RED_STAINED_GLASS_PANE));
  public static final Block ORANGE_STAINED_TILED_GLASS_PANE = registerBlock("orange_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.ORANGE, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.ORANGE_STAINED_GLASS_PANE));
  public static final Block YELLOW_STAINED_TILED_GLASS_PANE = registerBlock("yellow_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.YELLOW, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.YELLOW_STAINED_GLASS_PANE));
  public static final Block LIME_STAINED_TILED_GLASS_PANE = registerBlock("lime_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.LIME, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.LIME_STAINED_GLASS_PANE));
  public static final Block GREEN_STAINED_TILED_GLASS_PANE = registerBlock("green_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.GREEN, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.GREEN_STAINED_GLASS_PANE));
  public static final Block CYAN_STAINED_TILED_GLASS_PANE = registerBlock("cyan_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.CYAN, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.CYAN_STAINED_GLASS_PANE));
  public static final Block LIGHT_BLUE_STAINED_TILED_GLASS_PANE = registerBlock("light_blue_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.LIGHT_BLUE, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.LIGHT_BLUE_STAINED_GLASS_PANE));
  public static final Block BLUE_STAINED_TILED_GLASS_PANE = registerBlock("blue_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.BLUE, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.BLUE_STAINED_GLASS_PANE));
  public static final Block PURPLE_STAINED_TILED_GLASS_PANE = registerBlock("purple_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.PURPLE, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.PURPLE_STAINED_GLASS_PANE));
  public static final Block MAGENTA_STAINED_TILED_GLASS_PANE = registerBlock("magenta_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.MAGENTA, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.MAGENTA_STAINED_GLASS_PANE));
  public static final Block PINK_STAINED_TILED_GLASS_PANE = registerBlock("pink_stained_tiled_glass_pane", (properties) -> new StainedGlassPaneBlock(DyeColor.PINK, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.PINK_STAINED_GLASS_PANE));
  public static final Block BONE_BRICKS = registerBlock("bone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BONE_BLOCK));
  public static final Block BONE_BRICK_SLAB = registerBlock("bone_brick_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.BONE_BRICKS));
  public static final Block BONE_BRICK_STAIRS = registerBlock("bone_brick_stairs", (properties) -> new StairBlock(BONE_BRICKS.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.BONE_BRICKS));
  public static final Block BONE_BRICK_WALL = registerBlock("bone_brick_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.BONE_BRICKS).forceSolidOn());
  public static final Block CRACKED_BONE_BRICKS = registerBlock("cracked_bone_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BONE_BLOCK));
  public static final Block BONE_TILES = registerBlock("bone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BONE_BLOCK));
  public static final Block BONE_TILE_SLAB = registerBlock("bone_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.BONE_TILES));
  public static final Block BONE_TILE_STAIRS = registerBlock("bone_tile_stairs", (properties) -> new StairBlock(BONE_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.BONE_TILES));
  public static final Block BONE_TILE_WALL = registerBlock("bone_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.BONE_TILES).forceSolidOn());
  public static final Block CRACKED_BONE_TILES = registerBlock("cracked_bone_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.BONE_BLOCK));
  public static final Block COPPER_BRICKS = registerBlock("copper_bricks", (properties) -> new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.UNAFFECTED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.COPPER_BLOCK));
  public static final Block EXPOSED_COPPER_BRICKS = registerBlock("exposed_copper_bricks", (properties) -> new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.EXPOSED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.EXPOSED_COPPER));
  public static final Block WEATHERED_COPPER_BRICKS = registerBlock("weathered_copper_bricks", (properties) -> new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.WEATHERED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.WEATHERED_COPPER));
  public static final Block OXIDIZED_COPPER_BRICKS = registerBlock("oxidized_copper_bricks", (properties) -> new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.OXIDIZED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.OXIDIZED_COPPER));
  public static final Block WAXED_COPPER_BRICKS = registerBlock("waxed_copper_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.COPPER_BRICKS));
  public static final Block WAXED_EXPOSED_COPPER_BRICKS = registerBlock("waxed_exposed_copper_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.EXPOSED_COPPER_BRICKS));
  public static final Block WAXED_WEATHERED_COPPER_BRICKS = registerBlock("waxed_weathered_copper_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.WEATHERED_COPPER_BRICKS));
  public static final Block WAXED_OXIDIZED_COPPER_BRICKS = registerBlock("waxed_oxidized_copper_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.OXIDIZED_COPPER_BRICKS));
  public static final Block CRACKED_COPPER_BRICKS = registerBlock("cracked_copper_bricks", (properties) -> new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.UNAFFECTED, properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.COPPER_BRICKS));
  public static final Block EXPOSED_CRACKED_COPPER_BRICKS = registerBlock("exposed_cracked_copper_bricks", (properties) -> new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.EXPOSED, properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.EXPOSED_COPPER_BRICKS));
  public static final Block WEATHERED_CRACKED_COPPER_BRICKS = registerBlock("weathered_cracked_copper_bricks", (properties) -> new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.WEATHERED, properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.WEATHERED_COPPER_BRICKS));
  public static final Block OXIDIZED_CRACKED_COPPER_BRICKS = registerBlock("oxidized_cracked_copper_bricks", (properties) -> new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.OXIDIZED, properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.OXIDIZED_COPPER_BRICKS));
  public static final Block WAXED_CRACKED_COPPER_BRICKS = registerBlock("waxed_cracked_copper_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CRACKED_COPPER_BRICKS));
  public static final Block WAXED_EXPOSED_CRACKED_COPPER_BRICKS = registerBlock("waxed_exposed_cracked_copper_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.EXPOSED_CRACKED_COPPER_BRICKS));
  public static final Block WAXED_WEATHERED_CRACKED_COPPER_BRICKS = registerBlock("waxed_weathered_cracked_copper_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.WEATHERED_CRACKED_COPPER_BRICKS));
  public static final Block WAXED_OXIDIZED_CRACKED_COPPER_BRICKS = registerBlock("waxed_oxidized_cracked_copper_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.OXIDIZED_CRACKED_COPPER_BRICKS));
  public static final Block CRACKED_CUT_COPPER = registerBlock("cracked_cut_copper", (properties) -> new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.UNAFFECTED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.CUT_COPPER));
  public static final Block EXPOSED_CRACKED_CUT_COPPER = registerBlock("exposed_cracked_cut_copper", (properties) -> new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.EXPOSED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.EXPOSED_CUT_COPPER));
  public static final Block WEATHERED_CRACKED_CUT_COPPER = registerBlock("weathered_cracked_cut_copper", (properties) -> new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.WEATHERED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.WEATHERED_CUT_COPPER));
  public static final Block OXIDIZED_CRACKED_CUT_COPPER = registerBlock("oxidized_cracked_cut_copper", (properties) -> new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.OXIDIZED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.OXIDIZED_CUT_COPPER));
  public static final Block WAXED_CRACKED_CUT_COPPER = registerBlock("waxed_cracked_cut_copper", Block::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.CRACKED_CUT_COPPER));
  public static final Block WAXED_EXPOSED_CRACKED_CUT_COPPER = registerBlock("waxed_exposed_cracked_cut_copper", Block::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.EXPOSED_CRACKED_CUT_COPPER));
  public static final Block WAXED_WEATHERED_CRACKED_CUT_COPPER = registerBlock("waxed_weathered_cracked_cut_copper", Block::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.WEATHERED_CRACKED_CUT_COPPER));
  public static final Block WAXED_OXIDIZED_CRACKED_CUT_COPPER = registerBlock("waxed_oxidized_cracked_cut_copper", Block::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.OXIDIZED_CRACKED_CUT_COPPER));
  public static final Block COPPER_PILLAR = registerBlock("copper_pillar", (properties) -> new WeatheringRotatedCopperFullBlock(WeatheringCopper.WeatherState.UNAFFECTED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.CUT_COPPER));
  public static final Block EXPOSED_COPPER_PILLAR = registerBlock("exposed_copper_pillar", (properties) -> new WeatheringRotatedCopperFullBlock(WeatheringCopper.WeatherState.EXPOSED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.EXPOSED_CUT_COPPER));
  public static final Block WEATHERED_COPPER_PILLAR = registerBlock("weathered_copper_pillar", (properties) -> new WeatheringRotatedCopperFullBlock(WeatheringCopper.WeatherState.WEATHERED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.WEATHERED_CUT_COPPER));
  public static final Block OXIDIZED_COPPER_PILLAR = registerBlock("oxidized_copper_pillar", (properties) -> new WeatheringRotatedCopperFullBlock(WeatheringCopper.WeatherState.OXIDIZED, properties), BlockBehaviour.Properties.ofFullCopy(Blocks.OXIDIZED_CUT_COPPER));
  public static final Block WAXED_COPPER_PILLAR = registerBlock("waxed_copper_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.COPPER_PILLAR));
  public static final Block WAXED_EXPOSED_COPPER_PILLAR = registerBlock("waxed_exposed_copper_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.EXPOSED_COPPER_PILLAR));
  public static final Block WAXED_WEATHERED_COPPER_PILLAR = registerBlock("waxed_weathered_copper_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.WEATHERED_COPPER_PILLAR));
  public static final Block WAXED_OXIDIZED_COPPER_PILLAR = registerBlock("waxed_oxidized_copper_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.OXIDIZED_COPPER_PILLAR));

  // 1.21.4
  public static final Block PALE_OAK_LEAF_LITTER = registerBlock("pale_oak_leaf_litter", (properties) -> new LeafLitterBlock(properties, Constants.PALE_OAK_LEAF_LITTER_CHANCE), BlockBehaviour.Properties.ofFullCopy(Blocks.PALE_OAK_LEAVES).replaceable().noCollission().instabreak(), false);
  public static final Block CARVED_PALE_OAK_LOG = registerBlock("carved_pale_oak_log", RotatedCarvedPaleOakBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_PALE_OAK_LOG), false);
  public static final Block CARVED_PALE_OAK_WOOD = registerBlock("carved_pale_oak_wood", RotatedCarvedPaleOakBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.STRIPPED_PALE_OAK_WOOD), false);
  public static final Block PALE_OAK_MOSAIC = registerBlock("pale_oak_mosaic", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PALE_OAK_PLANKS));
  public static final Block PALE_OAK_MOSAIC_STAIRS = registerBlock("pale_oak_mosaic_stairs", (properties) -> new StairBlock(SMBBlocks.PALE_OAK_MOSAIC.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(Blocks.PALE_OAK_PLANKS));
  public static final Block PALE_OAK_MOSAIC_SLAB = registerBlock("pale_oak_mosaic_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.PALE_OAK_PLANKS));
  public static final Block POLISHED_RESIN = registerBlock("polished_resin", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RESIN_BRICKS));
  public static final Block POLISHED_RESIN_STAIRS = registerBlock("polished_resin_stairs", (properties) -> new StairBlock(SMBBlocks.POLISHED_RESIN.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_RESIN));
  public static final Block POLISHED_RESIN_SLAB = registerBlock("polished_resin_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.POLISHED_RESIN));
  public static final Block RESINE_PILLAR = registerBlock("resin_pillar", RotatedPillarBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RESIN_BRICKS));
  public static final Block CRACKED_RESIN_BRICKS = registerBlock("cracked_resin_bricks", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RESIN_BRICKS));
  public static final Block RESIN_TILES = registerBlock("resin_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RESIN_BRICKS));
  public static final Block RESIN_TILE_STAIRS = registerBlock("resin_tile_stairs", (properties) -> new StairBlock(SMBBlocks.RESIN_TILES.defaultBlockState(), properties), BlockBehaviour.Properties.ofFullCopy(SMBBlocks.RESIN_TILES));
  public static final Block RESIN_TILE_SLAB = registerBlock("resin_tile_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.RESIN_TILES));
  public static final Block RESIN_TILE_WALL = registerBlock("resin_tile_wall", WallBlock::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.RESIN_TILES));
  public static final Block CRACKED_RESIN_TILES = registerBlock("cracked_resin_tiles", Block::new, BlockBehaviour.Properties.ofFullCopy(SMBBlocks.RESIN_TILES));
  public static final Block SMOOTH_RESIN = registerBlock("smooth_resin", Block::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RESIN_BRICKS));
  public static final Block SMOOTH_RESIN_SLAB = registerBlock("smooth_resin_slab", SlabBlock::new, BlockBehaviour.Properties.ofFullCopy(Blocks.RESIN_BRICKS));

  public static void init() {}

  private static Block registerFlowerPotBlock(Block plant) {
    return registerFlowerPotBlock(plant, BlockBehaviour.Properties.of().instabreak().noOcclusion().pushReaction(PushReaction.DESTROY));
  }

  private static Block registerFlowerPotBlock(Block plant, BlockBehaviour.Properties properties) {
    return registerBlock(
      "potted_" + BuiltInRegistries.BLOCK.getKey(plant).getPath(),
      _properties -> new FlowerPotBlock(plant, _properties),
      properties, false);
  }

  private static Block registerBlock(String path, Function<Block.Properties, Block> factory, Block.Properties properties) {
    return registerBlock(path, factory, properties, true);
  }

  private static Block registerBlock(String path, Function<Block.Properties, Block> factory, Block.Properties properties, boolean createBlockItem) {
    ResourceLocation identifier = ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, path);
    ResourceKey<Block> key = ResourceKey.create(Registries.BLOCK, identifier);
    Block instance = Blocks.register(key, factory, properties);

    if (createBlockItem) {
      Items.registerBlock(instance);
    }

    return instance;
  }
}
