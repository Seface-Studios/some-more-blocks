plugins {
  id "fabric-loom" version "${fabric_loom_version}"
  id "com.github.node-gradle.node" version "3.5.0"
}

node {
  version = '20.0.0'
  npmVersion = '10.0.0'
  download = true
}

dependencies {
  minecraft "com.mojang:minecraft:${minecraft_version}"
  mappings loom.officialMojangMappings()
  modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
  modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
}

fabricApi {
  configureDataGeneration((settings) -> {
    settings.client = true
    settings.getOutputDirectory().set(project(":common").file("src/main/generated"))
  })
}

loom {
  var File AW = project(":common").file("src/main/resources/${mod_id}.accesswidener")
  if (AW.exists()) {
    accessWidenerPath.set(AW)
  }

  mixin {
    defaultRefmapName.set("${mod_id}.refmap.json")
  }

  runs {
    configureEach {
      setConfigName("Fabric ${it.name.capitalize()}")
      ideConfigGenerated(true)
      runDir("run")
    }

    client {
      client()
    }

    server {
      server()
    }
  }
}

task applyLocalizations(type: NodeTask) {
  dependsOn("runDatagen")

  script = project(":common").file('../scripts/langfy/main.mjs')
  args = [minecraft_version, mod_name]
}

tasks.named("runDatagen") {
  finalizedBy tasks.named("applyLocalizations")
}
