package net.seface.somemoreblocks.registries;

import net.fabricmc.fabric.api.object.builder.v1.block.FabricBlockSettings;
import net.minecraft.core.Registry;
import net.minecraft.core.registries.BuiltInRegistries;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.effect.MobEffects;
import net.minecraft.world.item.DyeColor;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.properties.NoteBlockInstrument;
import net.minecraft.world.level.material.MapColor;
import net.minecraft.world.level.material.PushReaction;
import net.seface.somemoreblocks.Constants;
import net.seface.somemoreblocks.SomeMoreBlocks;
import net.seface.somemoreblocks.block.*;
import net.seface.somemoreblocks.tags.SMBBlockTags;

public class SMBBlocks {
  public static final Block AZALEA_LEAF_LITTER = new LeafLitterBlock(FabricBlockSettings.copyOf(Blocks.AZALEA_LEAVES).replaceable().noCollision().isValidSpawn(Blocks::never).instabreak(), Constants.AZALEA_LEAF_LITTER_CHANCE);
  public static final Block BIRCH_LEAF_LITTER = new LeafLitterBlock(FabricBlockSettings.copyOf(Blocks.BIRCH_LEAVES).replaceable().noCollision().isValidSpawn(Blocks::never).instabreak(), Constants.BIRCH_LEAF_LITTER_CHANCE);
  public static final Block BIG_LILY_PAD = new BigLilyPadBlock(FabricBlockSettings.copyOf(Blocks.LILY_PAD).pushReaction(PushReaction.BLOCK));
  public static final Block BROWN_MUSHROOM_COLONY = new MushroomColonyBlock(FabricBlockSettings.copyOf(Blocks.BROWN_MUSHROOM));
  public static final Block TALL_BROWN_MUSHROOM_COLONY = new DoubleMushroomColonyBlock(FabricBlockSettings.copyOf(Blocks.BROWN_MUSHROOM));
  public static final Block BROWN_MUSHROOM_COLONY_WALL = new WallMushroomColonyBlock(FabricBlockSettings.copyOf(SMBBlocks.BROWN_MUSHROOM_COLONY).dropsLike(SMBBlocks.BROWN_MUSHROOM_COLONY));
  public static final Block CATTAIL = new CattailBlock(FabricBlockSettings.copyOf(Blocks.TALL_GRASS).noOcclusion());
  public static final Block CRIMSON_FUNGUS_COLONY = new MushroomColonyBlock(FabricBlockSettings.copyOf(Blocks.CRIMSON_FUNGUS));
  public static final Block TALL_CRIMSON_FUNGUS_COLONY = new DoubleMushroomColonyBlock(FabricBlockSettings.copyOf(Blocks.CRIMSON_FUNGUS));
  public static final Block CRIMSON_FUNGUS_COLONY_WALL = new WallMushroomColonyBlock(FabricBlockSettings.copyOf(SMBBlocks.CRIMSON_FUNGUS_COLONY).dropsLike(SMBBlocks.CRIMSON_FUNGUS_COLONY));
  public static final Block FLOWERING_AZALEA_LEAF_LITTER = new LeafLitterBlock(FabricBlockSettings.copyOf(Blocks.FLOWERING_AZALEA_LEAVES).replaceable().noCollision().isValidSpawn(Blocks::never).instabreak(), Constants.FLOWERING_AZALEA_LEAF_LITTER_CHANCE);
  public static final Block SPRUCE_LEAF_LITTER = new LeafLitterBlock(FabricBlockSettings.copyOf(Blocks.SPRUCE_LEAVES).replaceable().noCollision().isValidSpawn(Blocks::never).instabreak(), Constants.SPRUCE_LEAF_LITTER_CHANCE);
  public static final Block LEAF_LITTER = new LeafLitterBlock(FabricBlockSettings.copyOf(Blocks.OAK_LEAVES).replaceable().noCollision().isValidSpawn(Blocks::never).instabreak(), Constants.LEAF_LITTER_CHANCE);
  public static final Block LUMINOUS_FLOWER = new LuminousFlowerBlock(FabricBlockSettings.copyOf(Blocks.DANDELION).lightLevel((state) -> Constants.LUMINOUS_FLOWER_LIGHT_LEVEL));
  public static final Block RED_MUSHROOM_COLONY = new MushroomColonyBlock(FabricBlockSettings.copyOf(Blocks.RED_MUSHROOM));
  public static final Block TALL_RED_MUSHROOM_COLONY = new DoubleMushroomColonyBlock(FabricBlockSettings.copyOf(Blocks.RED_MUSHROOM));
  public static final Block RED_MUSHROOM_COLONY_WALL = new WallMushroomColonyBlock(FabricBlockSettings.copyOf(SMBBlocks.RED_MUSHROOM_COLONY).dropsLike(SMBBlocks.RED_MUSHROOM_COLONY));
  public static final Block SMALL_LILY_PADS = new WaterlilyBlock(FabricBlockSettings.copyOf(Blocks.LILY_PAD).noCollision());
  public static final Block TALL_DUNE_GRASS = new DoubleDuneGrassBlock(FabricBlockSettings.copyOf(Blocks.TALL_GRASS));
  public static final Block DUNE_GRASS = new GenericBonemealableBushBlock(SMBBlocks.TALL_DUNE_GRASS, SMBBlockTags.DUNE_GRASS_PLACEABLE, FabricBlockSettings.copyOf(Blocks.SHORT_GRASS));
  public static final Block LARGE_SNOW_FERN = new DoublePlantBlock(FabricBlockSettings.copyOf(Blocks.LARGE_FERN));
  public static final Block SNOW_FERN = new GenericBonemealableBushBlock(SMBBlocks.LARGE_SNOW_FERN, FabricBlockSettings.copyOf(Blocks.FERN));
  public static final Block TALL_SNOW_GRASS = new DoublePlantBlock(FabricBlockSettings.copyOf(Blocks.TALL_GRASS));
  public static final Block SHORT_SNOW_GRASS = new GenericBonemealableBushBlock(SMBBlocks.TALL_SNOW_GRASS, FabricBlockSettings.copyOf(Blocks.SHORT_GRASS));
  public static final Block TINY_CACTUS = new TinyCactusBlock(MobEffects.POISON, 7, FabricBlockSettings.copyOf(Blocks.TORCHFLOWER));
  public static final Block WARPED_FUNGUS_COLONY = new MushroomColonyBlock(FabricBlockSettings.copyOf(Blocks.WARPED_FUNGUS));
  public static final Block TALL_WARPED_FUNGUS_COLONY = new DoubleMushroomColonyBlock(FabricBlockSettings.copyOf(Blocks.WARPED_FUNGUS));
  public static final Block WARPED_FUNGUS_COLONY_WALL = new WallMushroomColonyBlock(FabricBlockSettings.copyOf(SMBBlocks.WARPED_FUNGUS_COLONY).dropsLike(SMBBlocks.WARPED_FUNGUS_COLONY));
  public static final Block POTTED_LUMINOUS_FLOWER = createFlowerPotBlock(LUMINOUS_FLOWER, Constants.POTTED_LUMINOUS_FLOWER_LIGHT_LEVEL);
  public static final Block POTTED_SNOW_FERN = createFlowerPotBlock(SNOW_FERN);
  public static final Block POTTED_TINY_CACTUS = createFlowerPotBlock(TINY_CACTUS);
  public static final Block OCHRE_REDSTONE_FROGLIGHT = new RedstoneLampBlock(FabricBlockSettings.copyOf(Blocks.REDSTONE_LAMP).sounds(SoundType.FROGLIGHT));
  public static final Block PEARLESCENT_REDSTONE_FROGLIGHT = new RedstoneLampBlock(FabricBlockSettings.copyOf(Blocks.REDSTONE_LAMP).sounds(SoundType.FROGLIGHT));
  public static final Block VERDANT_REDSTONE_FROGLIGHT = new RedstoneLampBlock(FabricBlockSettings.copyOf(Blocks.REDSTONE_LAMP).sounds(SoundType.FROGLIGHT));
  public static final Block PACKED_SNOW = new Block(FabricBlockSettings.copyOf(Blocks.SNOW_BLOCK));
  public static final Block PACKED_SNOW_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.PACKED_SNOW));
  public static final Block PACKED_SNOW_STAIRS = new StairBlock(PACKED_SNOW.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.PACKED_SNOW));
  public static final Block POLISHED_SNOW = new Block(FabricBlockSettings.copyOf(Blocks.SNOW_BLOCK));
  public static final Block POLISHED_SNOW_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.POLISHED_SNOW));
  public static final Block POLISHED_SNOW_STAIRS = new StairBlock(POLISHED_SNOW.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.POLISHED_SNOW));
  public static final Block SNOW_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.SNOW_BLOCK));
  public static final Block SNOW_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SNOW_BRICKS));
  public static final Block SNOW_BRICK_STAIRS = new StairBlock(SNOW_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.SNOW_BRICKS));
  public static final Block SNOW_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.SNOW_BRICKS).solid());
  public static final Block CRACKED_SNOW_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.SNOW_BLOCK));
  public static final Block SNOW_TILES = new Block(FabricBlockSettings.copyOf(Blocks.SNOW_BLOCK));
  public static final Block SNOW_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SNOW_TILES));
  public static final Block SNOW_TILE_STAIRS = new StairBlock(SNOW_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.SNOW_TILES));
  public static final Block SNOW_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.SNOW_TILES).solid());
  public static final Block CRACKED_SNOW_TILES = new Block(FabricBlockSettings.copyOf(Blocks.SNOW_BLOCK));
  public static final Block SNOW_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.SNOW_BLOCK));
  public static final Block SMOOTH_DEEPSLATE = new Block(FabricBlockSettings.copyOf(Blocks.DEEPSLATE));
  public static final Block SMOOTH_DEEPSLATE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SMOOTH_DEEPSLATE));
  public static final Block MOSSY_DEEPSLATE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.DEEPSLATE_BRICKS));
  public static final Block MOSSY_DEEPSLATE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_DEEPSLATE_BRICKS));
  public static final Block MOSSY_DEEPSLATE_BRICK_STAIRS = new StairBlock(MOSSY_DEEPSLATE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MOSSY_DEEPSLATE_BRICKS));
  public static final Block MOSSY_DEEPSLATE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_DEEPSLATE_BRICKS).solid());
  public static final Block DEEPSLATE_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.DEEPSLATE_BRICKS));
  public static final Block POLISHED_STONE = new Block(FabricBlockSettings.copyOf(Blocks.DEEPSLATE));
  public static final Block POLISHED_STONE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.POLISHED_STONE));
  public static final Block POLISHED_STONE_STAIRS = new StairBlock(POLISHED_STONE.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.POLISHED_STONE));
  public static final Block STONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.STONE));
  public static final Block STONE_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.STONE_TILES));
  public static final Block STONE_TILE_STAIRS = new StairBlock(STONE_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.STONE_TILES));
  public static final Block STONE_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.STONE_TILES).solid());
  public static final Block CRACKED_STONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.STONE));
  public static final Block STONE_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STONE));
  public static final Block SMOOTH_GRANITE = new Block(FabricBlockSettings.copyOf(Blocks.GRANITE));
  public static final Block SMOOTH_GRANITE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SMOOTH_GRANITE));
  public static final Block CHISELED_GRANITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.GRANITE));
  public static final Block GRANITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.GRANITE));
  public static final Block GRANITE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.GRANITE_BRICKS));
  public static final Block GRANITE_BRICK_STAIRS = new StairBlock(GRANITE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.GRANITE_BRICKS));
  public static final Block GRANITE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.GRANITE_BRICKS).solid());
  public static final Block CRACKED_GRANITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.GRANITE));
  public static final Block MOSSY_GRANITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.GRANITE));
  public static final Block MOSSY_GRANITE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_GRANITE_BRICKS));
  public static final Block MOSSY_GRANITE_BRICK_STAIRS = new StairBlock(MOSSY_GRANITE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MOSSY_GRANITE_BRICKS));
  public static final Block MOSSY_GRANITE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_GRANITE_BRICKS).solid());
  public static final Block GRANITE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.GRANITE));
  public static final Block GRANITE_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.GRANITE_TILES));
  public static final Block GRANITE_TILE_STAIRS = new StairBlock(GRANITE_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.GRANITE_TILES));
  public static final Block GRANITE_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.GRANITE_TILES).solid());
  public static final Block CRACKED_GRANITE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.GRANITE));
  public static final Block GRANITE_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.GRANITE));
  public static final Block SMOOTH_DIORITE = new Block(FabricBlockSettings.copyOf(Blocks.DIORITE));
  public static final Block SMOOTH_DIORITE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SMOOTH_DIORITE));
  public static final Block CHISELED_DIORITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.DIORITE));
  public static final Block DIORITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.DIORITE));
  public static final Block DIORITE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.DIORITE_BRICKS));
  public static final Block DIORITE_BRICK_STAIRS = new StairBlock(DIORITE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.DIORITE_BRICKS));
  public static final Block DIORITE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.DIORITE_BRICKS).solid());
  public static final Block CRACKED_DIORITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.DIORITE));
  public static final Block MOSSY_DIORITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.DIORITE));
  public static final Block MOSSY_DIORITE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_DIORITE_BRICKS));
  public static final Block MOSSY_DIORITE_BRICK_STAIRS = new StairBlock(MOSSY_DIORITE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MOSSY_DIORITE_BRICKS));
  public static final Block MOSSY_DIORITE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_DIORITE_BRICKS).solid());
  public static final Block DIORITE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.DIORITE));
  public static final Block DIORITE_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.DIORITE_TILES));
  public static final Block DIORITE_TILE_STAIRS = new StairBlock(DIORITE_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.DIORITE_TILES));
  public static final Block DIORITE_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.DIORITE_TILES).solid());
  public static final Block CRACKED_DIORITE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.DIORITE));
  public static final Block DIORITE_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.DIORITE));
  public static final Block SMOOTH_ANDESITE = new Block(FabricBlockSettings.copyOf(Blocks.ANDESITE));
  public static final Block SMOOTH_ANDESITE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SMOOTH_ANDESITE));
  public static final Block CHISELED_ANDESITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.ANDESITE));
  public static final Block ANDESITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.ANDESITE));
  public static final Block ANDESITE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.ANDESITE_BRICKS));
  public static final Block ANDESITE_BRICK_STAIRS = new StairBlock(ANDESITE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.ANDESITE_BRICKS));
  public static final Block ANDESITE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.ANDESITE_BRICKS).solid());
  public static final Block CRACKED_ANDESITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.ANDESITE));
  public static final Block MOSSY_ANDESITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.ANDESITE));
  public static final Block MOSSY_ANDESITE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_ANDESITE_BRICKS));
  public static final Block MOSSY_ANDESITE_BRICK_STAIRS = new StairBlock(MOSSY_ANDESITE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MOSSY_ANDESITE_BRICKS));
  public static final Block MOSSY_ANDESITE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_ANDESITE_BRICKS).solid());
  public static final Block ANDESITE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.ANDESITE));
  public static final Block ANDESITE_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.ANDESITE_TILES));
  public static final Block ANDESITE_TILE_STAIRS = new StairBlock(ANDESITE_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.ANDESITE_TILES));
  public static final Block ANDESITE_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.ANDESITE_TILES).solid());
  public static final Block CRACKED_ANDESITE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.ANDESITE));
  public static final Block ANDESITE_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.ANDESITE));
  public static final Block POLISHED_END_STONE = new Block(FabricBlockSettings.copyOf(Blocks.END_STONE));
  public static final Block POLISHED_END_STONE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.POLISHED_END_STONE));
  public static final Block POLISHED_END_STONE_STAIRS = new StairBlock(POLISHED_END_STONE.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.POLISHED_END_STONE));
  public static final Block SMOOTH_END_STONE = new Block(FabricBlockSettings.copyOf(Blocks.END_STONE));
  public static final Block SMOOTH_END_STONE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SMOOTH_END_STONE));
  public static final Block CHISELED_END_STONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.END_STONE));
  public static final Block CRACKED_END_STONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.END_STONE_BRICKS));
  public static final Block MOSSY_END_STONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.END_STONE_BRICKS));
  public static final Block MOSSY_END_STONE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_END_STONE_BRICKS));
  public static final Block MOSSY_END_STONE_BRICK_STAIRS = new StairBlock(MOSSY_END_STONE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MOSSY_END_STONE_BRICKS));
  public static final Block MOSSY_END_STONE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_END_STONE_BRICKS).solid());
  public static final Block END_STONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.END_STONE_BRICKS));
  public static final Block END_STONE_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.END_STONE_TILES));
  public static final Block END_STONE_TILE_STAIRS = new StairBlock(END_STONE_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.END_STONE_TILES));
  public static final Block END_STONE_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.END_STONE_TILES).solid());
  public static final Block CRACKED_END_STONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.END_STONE_BRICKS));
  public static final Block END_STONE_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.END_STONE_BRICKS));
  public static final Block SMOOTH_TUFF = new Block(FabricBlockSettings.copyOf(Blocks.TUFF));
  public static final Block SMOOTH_TUFF_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SMOOTH_TUFF));
  public static final Block CRACKED_TUFF_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.TUFF).sound(SoundType.TUFF_BRICKS));
  public static final Block MOSSY_TUFF_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.TUFF).sound(SoundType.TUFF_BRICKS));
  public static final Block MOSSY_TUFF_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_TUFF_BRICKS));
  public static final Block MOSSY_TUFF_BRICK_STAIRS = new StairBlock(MOSSY_TUFF_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MOSSY_TUFF_BRICKS));
  public static final Block MOSSY_TUFF_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_TUFF_BRICKS));
  public static final Block TUFF_TILES = new Block(FabricBlockSettings.copyOf(Blocks.TUFF).sound(SoundType.TUFF_BRICKS));
  public static final Block TUFF_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.TUFF_TILES).sound(SoundType.TUFF_BRICKS));
  public static final Block TUFF_TILE_STAIRS = new StairBlock(TUFF_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.TUFF_TILES).sound(SoundType.TUFF_BRICKS));
  public static final Block TUFF_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.TUFF_TILES).solid().sound(SoundType.TUFF_BRICKS));
  public static final Block CRACKED_TUFF_TILES = new Block(FabricBlockSettings.copyOf(Blocks.TUFF).sound(SoundType.TUFF_BRICKS));
  public static final Block TUFF_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.TUFF).sound(SoundType.TUFF_BRICKS));
  public static final Block RED_SANDSTONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.RED_SANDSTONE));
  public static final Block RED_SANDSTONE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.RED_SANDSTONE_BRICKS));
  public static final Block RED_SANDSTONE_BRICK_STAIRS = new StairBlock(RED_SANDSTONE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.RED_SANDSTONE_BRICKS));
  public static final Block RED_SANDSTONE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.RED_SANDSTONE_BRICKS).solid());
  public static final Block CRACKED_RED_SANDSTONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.RED_SANDSTONE));
  public static final Block MOSSY_RED_SANDSTONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.RED_SANDSTONE));
  public static final Block MOSSY_RED_SANDSTONE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_RED_SANDSTONE_BRICKS));
  public static final Block MOSSY_RED_SANDSTONE_BRICK_STAIRS = new StairBlock(MOSSY_RED_SANDSTONE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MOSSY_RED_SANDSTONE_BRICKS));
  public static final Block MOSSY_RED_SANDSTONE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_RED_SANDSTONE_BRICKS).solid());
  public static final Block RED_SANDSTONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.RED_SANDSTONE));
  public static final Block RED_SANDSTONE_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.RED_SANDSTONE_TILES));
  public static final Block RED_SANDSTONE_TILE_STAIRS = new StairBlock(RED_SANDSTONE_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.RED_SANDSTONE_TILES));
  public static final Block RED_SANDSTONE_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.RED_SANDSTONE_TILES).solid());
  public static final Block CRACKED_RED_SANDSTONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.RED_SANDSTONE));
  public static final Block RED_SANDSTONE_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.RED_SANDSTONE));
  public static final Block POLISHED_CALCITE = new Block(FabricBlockSettings.copyOf(Blocks.CALCITE));
  public static final Block POLISHED_CALCITE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.POLISHED_CALCITE));
  public static final Block POLISHED_CALCITE_STAIRS = new StairBlock(POLISHED_CALCITE.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.POLISHED_CALCITE));
  public static final Block SMOOTH_CALCITE = new Block(FabricBlockSettings.copyOf(Blocks.CALCITE));
  public static final Block SMOOTH_CALCITE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SMOOTH_CALCITE));
  public static final Block CHISELED_CALCITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.CALCITE));
  public static final Block CALCITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.CALCITE));
  public static final Block CALCITE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.CALCITE_BRICKS));
  public static final Block CALCITE_BRICK_STAIRS = new StairBlock(CALCITE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.CALCITE_BRICKS));
  public static final Block CALCITE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.CALCITE_BRICKS).solid());
  public static final Block CRACKED_CALCITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.CALCITE));
  public static final Block MOSSY_CALCITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.CALCITE));
  public static final Block MOSSY_CALCITE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_CALCITE_BRICKS));
  public static final Block MOSSY_CALCITE_BRICK_STAIRS = new StairBlock(MOSSY_CALCITE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MOSSY_CALCITE_BRICKS));
  public static final Block MOSSY_CALCITE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_CALCITE_BRICKS).solid());
  public static final Block CALCITE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.CALCITE));
  public static final Block CALCITE_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.CALCITE_TILES));
  public static final Block CALCITE_TILE_STAIRS = new StairBlock(CALCITE_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.CALCITE_TILES));
  public static final Block CALCITE_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.CALCITE_TILES).solid());
  public static final Block CRACKED_CALCITE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.CALCITE));
  public static final Block CALCITE_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.CALCITE));
  public static final Block POLISHED_DRIPSTONE = new Block(FabricBlockSettings.copyOf(Blocks.DRIPSTONE_BLOCK));
  public static final Block POLISHED_DRIPSTONE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.POLISHED_DRIPSTONE));
  public static final Block POLISHED_DRIPSTONE_STAIRS = new StairBlock(POLISHED_DRIPSTONE.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.POLISHED_DRIPSTONE));
  public static final Block SMOOTH_DRIPSTONE = new Block(FabricBlockSettings.copyOf(Blocks.DRIPSTONE_BLOCK));
  public static final Block SMOOTH_DRIPSTONE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SMOOTH_DRIPSTONE));
  public static final Block CHISELED_DRIPSTONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.DRIPSTONE_BLOCK));
  public static final Block DRIPSTONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.DRIPSTONE_BLOCK));
  public static final Block DRIPSTONE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.DRIPSTONE_BRICKS));
  public static final Block DRIPSTONE_BRICK_STAIRS = new StairBlock(DRIPSTONE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.DRIPSTONE_BRICKS));
  public static final Block DRIPSTONE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.DRIPSTONE_BRICKS).solid());
  public static final Block CRACKED_DRIPSTONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.DRIPSTONE_BLOCK));
  public static final Block MOSSY_DRIPSTONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.DRIPSTONE_BLOCK));
  public static final Block MOSSY_DRIPSTONE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_DRIPSTONE_BRICKS));
  public static final Block MOSSY_DRIPSTONE_BRICK_STAIRS = new StairBlock(MOSSY_DRIPSTONE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MOSSY_DRIPSTONE_BRICKS));
  public static final Block MOSSY_DRIPSTONE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_DRIPSTONE_BRICKS).solid());
  public static final Block DRIPSTONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.DRIPSTONE_BLOCK));
  public static final Block DRIPSTONE_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.DRIPSTONE_TILES));
  public static final Block DRIPSTONE_TILE_STAIRS = new StairBlock(DRIPSTONE_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.DRIPSTONE_TILES));
  public static final Block DRIPSTONE_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.DRIPSTONE_TILES).solid());
  public static final Block CRACKED_DRIPSTONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.DRIPSTONE_BLOCK));
  public static final Block DRIPSTONE_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.DRIPSTONE_BLOCK));
  public static final Block POLISHED_PRISMARINE = new Block(FabricBlockSettings.copyOf(Blocks.PRISMARINE));
  public static final Block POLISHED_PRISMARINE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.POLISHED_PRISMARINE));
  public static final Block POLISHED_PRISMARINE_STAIRS = new StairBlock(POLISHED_PRISMARINE.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.POLISHED_PRISMARINE));
  public static final Block SMOOTH_PRISMARINE = new Block(FabricBlockSettings.copyOf(Blocks.PRISMARINE));
  public static final Block SMOOTH_PRISMARINE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SMOOTH_PRISMARINE));
  public static final Block CHISELED_PRISMARINE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.PRISMARINE));
  public static final Block CRACKED_PRISMARINE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.PRISMARINE_BRICKS));
  public static final Block MOSSY_PRISMARINE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.PRISMARINE_BRICKS));
  public static final Block MOSSY_PRISMARINE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_PRISMARINE_BRICKS));
  public static final Block MOSSY_PRISMARINE_BRICK_STAIRS = new StairBlock(MOSSY_PRISMARINE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MOSSY_PRISMARINE_BRICKS));
  public static final Block MOSSY_PRISMARINE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_PRISMARINE_BRICKS).solid());
  public static final Block PRISMARINE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.PRISMARINE_BRICKS));
  public static final Block PRISMARINE_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.PRISMARINE_TILES));
  public static final Block PRISMARINE_TILE_STAIRS = new StairBlock(PRISMARINE_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.PRISMARINE_TILES));
  public static final Block PRISMARINE_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.PRISMARINE_TILES).solid());
  public static final Block CRACKED_PRISMARINE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.PRISMARINE_BRICKS));
  public static final Block PRISMARINE_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.PRISMARINE_BRICKS));
  public static final Block SMOOTH_BLACKSTONE = new Block(FabricBlockSettings.copyOf(Blocks.BLACKSTONE));
  public static final Block SMOOTH_BLACKSTONE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SMOOTH_BLACKSTONE));
  public static final Block CORRUPTED_POLISHED_BLACKSTONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.POLISHED_BLACKSTONE_BRICKS));
  public static final Block CORRUPTED_POLISHED_BLACKSTONE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.CORRUPTED_POLISHED_BLACKSTONE_BRICKS));
  public static final Block CORRUPTED_POLISHED_BLACKSTONE_BRICK_STAIRS = new StairBlock(CORRUPTED_POLISHED_BLACKSTONE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.CORRUPTED_POLISHED_BLACKSTONE_BRICKS));
  public static final Block CORRUPTED_POLISHED_BLACKSTONE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.CORRUPTED_POLISHED_BLACKSTONE_BRICKS).solid());
  public static final Block POLISHED_BLACKSTONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.POLISHED_BLACKSTONE_BRICKS));
  public static final Block POLISHED_BLACKSTONE_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.POLISHED_BLACKSTONE_TILES));
  public static final Block POLISHED_BLACKSTONE_TILE_STAIRS = new StairBlock(POLISHED_BLACKSTONE_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.POLISHED_BLACKSTONE_TILES));
  public static final Block POLISHED_BLACKSTONE_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.POLISHED_BLACKSTONE_TILES).solid());
  public static final Block CRACKED_POLISHED_BLACKSTONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.POLISHED_BLACKSTONE_BRICKS));
  public static final Block POLISHED_BLACKSTONE_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.POLISHED_BLACKSTONE_BRICKS));
  public static final Block CRACKED_QUARTZ_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.QUARTZ_BRICKS));
  public static final Block CUT_QUARTZ = new Block(FabricBlockSettings.copyOf(Blocks.QUARTZ_BRICKS));
  public static final Block CRACKED_CUT_QUARTZ = new Block(FabricBlockSettings.copyOf(Blocks.QUARTZ_BRICKS));
  public static final Block POLISHED_MUD = new Block(FabricBlockSettings.copyOf(Blocks.MUD_BRICKS));
  public static final Block POLISHED_MUD_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.POLISHED_MUD));
  public static final Block POLISHED_MUD_STAIRS = new StairBlock(POLISHED_MUD.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.POLISHED_MUD));
  public static final Block SMOOTH_MUD = new Block(FabricBlockSettings.copyOf(Blocks.MUD_BRICKS));
  public static final Block SMOOTH_MUD_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SMOOTH_MUD));
  public static final Block CHISELED_MUD_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.MUD_BRICKS));
  public static final Block CRACKED_MUD_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.MUD_BRICKS));
  public static final Block MOSSY_MUD_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.MUD_BRICKS));
  public static final Block MOSSY_MUD_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_MUD_BRICKS));
  public static final Block MOSSY_MUD_BRICK_STAIRS = new StairBlock(MOSSY_MUD_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MOSSY_MUD_BRICKS));
  public static final Block MOSSY_MUD_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_MUD_BRICKS).solid());
  public static final Block MUD_TILES = new Block(FabricBlockSettings.copyOf(Blocks.MUD_BRICKS));
  public static final Block MUD_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MUD_TILES));
  public static final Block MUD_TILE_STAIRS = new StairBlock(MUD_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MUD_TILES));
  public static final Block MUD_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.MUD_TILES).solid());
  public static final Block CRACKED_MUD_TILES = new Block(FabricBlockSettings.copyOf(Blocks.MUD_BRICKS));
  public static final Block MUD_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.MUD_BRICKS));
  public static final Block SANDSTONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.SANDSTONE));
  public static final Block SANDSTONE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SANDSTONE_BRICKS));
  public static final Block SANDSTONE_BRICK_STAIRS = new StairBlock(SANDSTONE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.SANDSTONE_BRICKS));
  public static final Block SANDSTONE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.SANDSTONE_BRICKS).solid());
  public static final Block CRACKED_SANDSTONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.SANDSTONE));
  public static final Block MOSSY_SANDSTONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.SANDSTONE));
  public static final Block MOSSY_SANDSTONE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_SANDSTONE_BRICKS));
  public static final Block MOSSY_SANDSTONE_BRICK_STAIRS = new StairBlock(MOSSY_SANDSTONE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MOSSY_SANDSTONE_BRICKS));
  public static final Block MOSSY_SANDSTONE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_SANDSTONE_BRICKS).solid());
  public static final Block SANDSTONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.SANDSTONE));
  public static final Block SANDSTONE_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SANDSTONE_TILES));
  public static final Block SANDSTONE_TILE_STAIRS = new StairBlock(SANDSTONE_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.SANDSTONE_TILES));
  public static final Block SANDSTONE_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.SANDSTONE_TILES).solid());
  public static final Block CRACKED_SANDSTONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.SANDSTONE));
  public static final Block SANDSTONE_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.SANDSTONE));
  public static final Block NETHER_BRICKS_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.NETHER_BRICKS));
  public static final Block CHISELED_RED_NETHER_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.NETHER_BRICKS));
  public static final Block CRACKED_RED_NETHER_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.NETHER_BRICKS));
  public static final Block RED_NETHER_BRICKS_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.NETHER_BRICKS));
  public static final Block POLISHED_ICE = new Block(FabricBlockSettings.copyOf(Blocks.ICE));
  public static final Block POLISHED_ICE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.POLISHED_ICE));
  public static final Block POLISHED_ICE_STAIRS = new StairBlock(POLISHED_ICE.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.POLISHED_ICE));
  public static final Block ICE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.ICE));
  public static final Block ICE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.ICE_BRICKS));
  public static final Block ICE_BRICK_STAIRS = new StairBlock(ICE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.ICE_BRICKS));
  public static final Block ICE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.ICE_BRICKS).solid());
  public static final Block CRACKED_ICE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.ICE));
  public static final Block ICE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.ICE));
  public static final Block ICE_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.ICE_TILES));
  public static final Block ICE_TILE_STAIRS = new StairBlock(ICE_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.ICE_TILES));
  public static final Block ICE_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.ICE_TILES).solid());
  public static final Block CRACKED_ICE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.ICE));
  public static final Block ICE_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.ICE));
  public static final Block POLISHED_PURPUR = new Block(FabricBlockSettings.copyOf(Blocks.PURPUR_BLOCK));
  public static final Block POLISHED_PURPUR_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.POLISHED_PURPUR));
  public static final Block POLISHED_PURPUR_STAIRS = new StairBlock(POLISHED_PURPUR.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.POLISHED_PURPUR));
  public static final Block SMOOTH_PURPUR = new Block(FabricBlockSettings.copyOf(Blocks.PURPUR_BLOCK));
  public static final Block SMOOTH_PURPUR_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SMOOTH_PURPUR));
  public static final Block CHISELED_PURPUR = new Block(FabricBlockSettings.copyOf(Blocks.PURPUR_BLOCK).lightLevel((state) -> 10));
  public static final Block CRACKED_PURPUR_BLOCK = new Block(FabricBlockSettings.copyOf(Blocks.PURPUR_BLOCK));
  public static final Block MOSSY_PURPUR_BLOCK = new Block(FabricBlockSettings.copyOf(Blocks.PURPUR_BLOCK));
  public static final Block MOSSY_PURPUR_BLOCK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_PURPUR_BLOCK));
  public static final Block MOSSY_PURPUR_BLOCK_STAIRS = new StairBlock(MOSSY_PURPUR_BLOCK.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MOSSY_PURPUR_BLOCK));
  public static final Block MOSSY_PURPUR_BLOCK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_PURPUR_BLOCK).solid());
  public static final Block PURPUR_TILES = new Block(FabricBlockSettings.copyOf(Blocks.PURPUR_BLOCK));
  public static final Block PURPUR_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.PURPUR_TILES));
  public static final Block PURPUR_TILE_STAIRS = new StairBlock(PURPUR_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.PURPUR_TILES));
  public static final Block PURPUR_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.PURPUR_TILES).solid());
  public static final Block CRACKED_PURPUR_TILES = new Block(FabricBlockSettings.copyOf(Blocks.PURPUR_BLOCK));
  public static final Block TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.TERRACOTTA));
  public static final Block WHITE_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.WHITE_TERRACOTTA));
  public static final Block LIGHT_GRAY_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.LIGHT_GRAY_TERRACOTTA));
  public static final Block GRAY_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.GRAY_TERRACOTTA));
  public static final Block BLACK_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.BLACK_TERRACOTTA));
  public static final Block BROWN_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.BROWN_TERRACOTTA));
  public static final Block RED_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.RED_TERRACOTTA));
  public static final Block ORANGE_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.ORANGE_TERRACOTTA));
  public static final Block YELLOW_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.YELLOW_TERRACOTTA));
  public static final Block LIME_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.LIME_TERRACOTTA));
  public static final Block GREEN_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.GREEN_TERRACOTTA));
  public static final Block CYAN_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.CYAN_TERRACOTTA));
  public static final Block LIGHT_BLUE_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.LIGHT_BLUE_TERRACOTTA));
  public static final Block BLUE_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.BLUE_TERRACOTTA));
  public static final Block PURPLE_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.PURPLE_TERRACOTTA));
  public static final Block MAGENTA_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.MAGENTA_TERRACOTTA));
  public static final Block PINK_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.PINK_TERRACOTTA));
  public static final Block TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.TERRACOTTA));
  public static final Block WHITE_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.WHITE_TERRACOTTA));
  public static final Block LIGHT_GRAY_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.LIGHT_GRAY_TERRACOTTA));
  public static final Block GRAY_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.GRAY_TERRACOTTA));
  public static final Block BLACK_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.BLACK_TERRACOTTA));
  public static final Block BROWN_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.BROWN_TERRACOTTA));
  public static final Block RED_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.RED_TERRACOTTA));
  public static final Block ORANGE_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.ORANGE_TERRACOTTA));
  public static final Block YELLOW_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.YELLOW_TERRACOTTA));
  public static final Block LIME_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.LIME_TERRACOTTA));
  public static final Block GREEN_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.GREEN_TERRACOTTA));
  public static final Block CYAN_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.CYAN_TERRACOTTA));
  public static final Block LIGHT_BLUE_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.LIGHT_BLUE_TERRACOTTA));
  public static final Block BLUE_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.BLUE_TERRACOTTA));
  public static final Block PURPLE_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.PURPLE_TERRACOTTA));
  public static final Block MAGENTA_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.MAGENTA_TERRACOTTA));
  public static final Block PINK_TERRACOTTA_TILES = new Block(FabricBlockSettings.copyOf(Blocks.PINK_TERRACOTTA));
  public static final Block WHITE_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.WHITE_CONCRETE));
  public static final Block LIGHT_GRAY_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.LIGHT_GRAY_CONCRETE));
  public static final Block GRAY_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.GRAY_CONCRETE));
  public static final Block BLACK_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.BLACK_CONCRETE));
  public static final Block BROWN_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.BROWN_CONCRETE));
  public static final Block RED_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.RED_CONCRETE));
  public static final Block ORANGE_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.ORANGE_CONCRETE));
  public static final Block YELLOW_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.YELLOW_CONCRETE));
  public static final Block LIME_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.LIME_CONCRETE));
  public static final Block GREEN_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.GREEN_CONCRETE));
  public static final Block CYAN_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.CYAN_CONCRETE));
  public static final Block LIGHT_BLUE_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.LIGHT_BLUE_CONCRETE));
  public static final Block BLUE_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.BLUE_CONCRETE));
  public static final Block PURPLE_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.PURPLE_CONCRETE));
  public static final Block MAGENTA_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.MAGENTA_CONCRETE));
  public static final Block PINK_CONCRETE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.PINK_CONCRETE));
  public static final Block WHITE_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.WHITE_CONCRETE));
  public static final Block LIGHT_GRAY_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.LIGHT_GRAY_CONCRETE));
  public static final Block GRAY_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.GRAY_CONCRETE));
  public static final Block BLACK_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.BLACK_CONCRETE));
  public static final Block BROWN_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.BROWN_CONCRETE));
  public static final Block RED_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.RED_CONCRETE));
  public static final Block ORANGE_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.ORANGE_CONCRETE));
  public static final Block YELLOW_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.YELLOW_CONCRETE));
  public static final Block LIME_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.LIME_CONCRETE));
  public static final Block GREEN_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.GREEN_CONCRETE));
  public static final Block CYAN_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.CYAN_CONCRETE));
  public static final Block LIGHT_BLUE_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.LIGHT_BLUE_CONCRETE));
  public static final Block BLUE_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.BLUE_CONCRETE));
  public static final Block PURPLE_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.PURPLE_CONCRETE));
  public static final Block MAGENTA_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.MAGENTA_CONCRETE));
  public static final Block PINK_CONCRETE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.PINK_CONCRETE));
  public static final Block SOUL_SANDSTONE = new Block(FabricBlockSettings.copyOf(Blocks.SANDSTONE));
  public static final Block SOUL_SANDSTONE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SOUL_SANDSTONE));
  public static final Block SOUL_SANDSTONE_STAIRS = new StairBlock(SOUL_SANDSTONE.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.SOUL_SANDSTONE));
  public static final Block SOUL_SANDSTONE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.SOUL_SANDSTONE));
  public static final Block CUT_SOUL_SANDSTONE = new Block(FabricBlockSettings.copyOf(Blocks.CUT_SANDSTONE));
  public static final Block CUT_SOUL_SANDSTONE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.CUT_SOUL_SANDSTONE));
  public static final Block SMOOTH_SOUL_SANDSTONE = new Block(FabricBlockSettings.copyOf(Blocks.SMOOTH_SANDSTONE));
  public static final Block SMOOTH_SOUL_SANDSTONE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SMOOTH_SOUL_SANDSTONE));
  public static final Block SMOOTH_SOUL_SANDSTONE_STAIRS = new StairBlock(SMOOTH_SOUL_SANDSTONE.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.SMOOTH_SOUL_SANDSTONE));
  public static final Block CHISELED_SOUL_SANDSTONE = new Block(FabricBlockSettings.copyOf(Blocks.CHISELED_SANDSTONE));
  public static final Block SOUL_SANDSTONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.SANDSTONE));
  public static final Block SOUL_SANDSTONE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SOUL_SANDSTONE_BRICKS));
  public static final Block SOUL_SANDSTONE_BRICK_STAIRS = new StairBlock(SOUL_SANDSTONE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.SOUL_SANDSTONE_BRICKS));
  public static final Block SOUL_SANDSTONE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.SOUL_SANDSTONE_BRICKS).solid());
  public static final Block CRACKED_SOUL_SANDSTONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.SANDSTONE));
  public static final Block SOUL_SANDSTONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.SANDSTONE));
  public static final Block SOUL_SANDSTONE_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SOUL_SANDSTONE_TILES));
  public static final Block SOUL_SANDSTONE_TILE_STAIRS = new StairBlock(SOUL_SANDSTONE_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.SOUL_SANDSTONE_TILES));
  public static final Block SOUL_SANDSTONE_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.SOUL_SANDSTONE_TILES).solid());
  public static final Block CRACKED_SOUL_SANDSTONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.SANDSTONE));
  public static final Block SOUL_SANDSTONE_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.SANDSTONE));
  public static final Block COAL_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.COAL_BLOCK));
  public static final Block CRACKED_COAL_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.COAL_BLOCK));
  public static final Block CUT_COAL = new Block(FabricBlockSettings.copyOf(Blocks.COAL_BLOCK));
  public static final Block CRACKED_CUT_COAL = new Block(FabricBlockSettings.copyOf(Blocks.COAL_BLOCK));
  public static final Block COAL_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.COAL_BLOCK));
  public static final Block IRON_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.IRON_BLOCK));
  public static final Block CRACKED_IRON_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.IRON_BLOCK));
  public static final Block CUT_IRON = new Block(FabricBlockSettings.copyOf(Blocks.IRON_BLOCK));
  public static final Block CRACKED_CUT_IRON = new Block(FabricBlockSettings.copyOf(Blocks.IRON_BLOCK));
  public static final Block IRON_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.IRON_BLOCK));
  public static final Block IRON_GRATE = new WaterloggedTransparentBlock(FabricBlockSettings.create().nonOpaque().isRedstoneConductor(Blocks::never).isSuffocating(Blocks::never).isViewBlocking(Blocks::never).strength(Blocks.IRON_BLOCK.defaultDestroyTime()).requiresCorrectToolForDrops().sound(SoundType.METAL));
  public static final Block GOLD_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.GOLD_BLOCK));
  public static final Block CRACKED_GOLD_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.GOLD_BLOCK));
  public static final Block CUT_GOLD = new Block(FabricBlockSettings.copyOf(Blocks.GOLD_BLOCK));
  public static final Block CRACKED_CUT_GOLD = new Block(FabricBlockSettings.copyOf(Blocks.GOLD_BLOCK));
  public static final Block GOLD_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.GOLD_BLOCK));
  public static final Block REDSTONE_BRICKS = new PoweredBlock(FabricBlockSettings.copyOf(Blocks.REDSTONE_BLOCK));
  public static final Block CRACKED_REDSTONE_BRICKS = new CrackedPoweredBlock(FabricBlockSettings.copyOf(Blocks.REDSTONE_BLOCK));
  public static final Block CUT_REDSTONE = new PoweredBlock(FabricBlockSettings.copyOf(Blocks.REDSTONE_BLOCK));
  public static final Block CRACKED_CUT_REDSTONE = new CrackedPoweredBlock(FabricBlockSettings.copyOf(Blocks.REDSTONE_BLOCK));
  public static final Block REDSTONE_PILLAR = new PoweredRotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.REDSTONE_BLOCK));
  public static final Block EMERALD_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.EMERALD_BLOCK));
  public static final Block CRACKED_EMERALD_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.EMERALD_BLOCK));
  public static final Block CUT_EMERALD = new Block(FabricBlockSettings.copyOf(Blocks.EMERALD_BLOCK));
  public static final Block CRACKED_CUT_EMERALD = new Block(FabricBlockSettings.copyOf(Blocks.EMERALD_BLOCK));
  public static final Block EMERALD_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.EMERALD_BLOCK));
  public static final Block LAPIS_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.LAPIS_BLOCK));
  public static final Block CRACKED_LAPIS_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.LAPIS_BLOCK));
  public static final Block CUT_LAPIS = new Block(FabricBlockSettings.copyOf(Blocks.LAPIS_BLOCK));
  public static final Block CRACKED_CUT_LAPIS = new Block(FabricBlockSettings.copyOf(Blocks.LAPIS_BLOCK));
  public static final Block LAPIS_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.LAPIS_BLOCK));
  public static final Block DIAMOND_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.DIAMOND_BLOCK));
  public static final Block CRACKED_DIAMOND_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.DIAMOND_BLOCK));
  public static final Block CUT_DIAMOND = new Block(FabricBlockSettings.copyOf(Blocks.DIAMOND_BLOCK));
  public static final Block CRACKED_CUT_DIAMOND = new Block(FabricBlockSettings.copyOf(Blocks.DIAMOND_BLOCK));
  public static final Block DIAMOND_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.DIAMOND_BLOCK));
  public static final Block DIAMOND_GRATE = new WaterloggedTransparentBlock(FabricBlockSettings.create().nonOpaque().isRedstoneConductor(Blocks::never).isSuffocating(Blocks::never).isViewBlocking(Blocks::never).strength(Blocks.DIAMOND_BLOCK.defaultDestroyTime()).requiresCorrectToolForDrops().sound(SoundType.METAL));
  public static final Block NETHERITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.NETHERITE_BLOCK));
  public static final Block CRACKED_NETHERITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.NETHERITE_BLOCK));
  public static final Block CUT_NETHERITE = new Block(FabricBlockSettings.copyOf(Blocks.NETHERITE_BLOCK));
  public static final Block CRACKED_CUT_NETHERITE = new Block(FabricBlockSettings.copyOf(Blocks.NETHERITE_BLOCK));
  public static final Block NETHERITE_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.NETHERITE_BLOCK));
  public static final Block NETHERITE_GRATE = new WaterloggedTransparentBlock(FabricBlockSettings.create().nonOpaque().isRedstoneConductor(Blocks::never).isSuffocating(Blocks::never).isViewBlocking(Blocks::never).strength(Blocks.NETHERITE_BLOCK.defaultDestroyTime()).requiresCorrectToolForDrops().sound(SoundType.NETHERITE_BLOCK));
  public static final Block AMETHYST_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.AMETHYST_BLOCK));
  public static final Block CRACKED_AMETHYST_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.AMETHYST_BLOCK));
  public static final Block CUT_AMETHYST = new Block(FabricBlockSettings.copyOf(Blocks.AMETHYST_BLOCK));
  public static final Block CRACKED_CUT_AMETHYST = new Block(FabricBlockSettings.copyOf(Blocks.AMETHYST_BLOCK));
  public static final Block AMETHYST_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.AMETHYST_BLOCK));
  public static final Block SHINGLES = new Block(FabricBlockSettings.create().mapColor(MapColor.TERRACOTTA_BROWN).instrument(NoteBlockInstrument.BASEDRUM).requiresTool().strength(Constants.SHINGLES_DESTROY_TIME, Constants.SHINGLES_EXPLOSION_RESISTANCE).sounds(SoundType.DEEPSLATE_TILES));
  public static final Block WHITE_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_WHITE));
  public static final Block LIGHT_GRAY_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_LIGHT_GRAY));
  public static final Block GRAY_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_GRAY));
  public static final Block BLACK_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_BLACK));
  public static final Block BROWN_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_BROWN));
  public static final Block RED_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_RED));
  public static final Block ORANGE_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_ORANGE));
  public static final Block YELLOW_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_YELLOW));
  public static final Block LIME_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_LIGHT_GREEN));
  public static final Block GREEN_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_GREEN));
  public static final Block CYAN_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_CYAN));
  public static final Block LIGHT_BLUE_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_LIGHT_BLUE));
  public static final Block BLUE_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_BLUE));
  public static final Block PURPLE_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_PURPLE));
  public static final Block MAGENTA_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_MAGENTA));
  public static final Block PINK_SHINGLES = new Block(FabricBlockSettings.copyOf(SMBBlocks.SHINGLES).mapColor(MapColor.TERRACOTTA_PINK));
  public static final Block OAK_MOSAIC = new Block(FabricBlockSettings.copyOf(Blocks.OAK_PLANKS));
  public static final Block OAK_MOSAIC_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.OAK_MOSAIC));
  public static final Block OAK_MOSAIC_STAIRS = new StairBlock(OAK_MOSAIC.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.OAK_MOSAIC));
  public static final Block CARVED_OAK_LOG = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_OAK_LOG));
  public static final Block CARVED_OAK_WOOD = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_OAK_WOOD));
  public static final Block SPRUCE_MOSAIC = new Block(FabricBlockSettings.copyOf(Blocks.SPRUCE_PLANKS));
  public static final Block SPRUCE_MOSAIC_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.SPRUCE_MOSAIC));
  public static final Block SPRUCE_MOSAIC_STAIRS = new StairBlock(SPRUCE_MOSAIC.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.SPRUCE_MOSAIC));
  public static final Block CARVED_SPRUCE_LOG = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_SPRUCE_LOG));
  public static final Block CARVED_SPRUCE_WOOD = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_SPRUCE_WOOD));
  public static final Block BIRCH_MOSAIC = new Block(FabricBlockSettings.copyOf(Blocks.BIRCH_PLANKS));
  public static final Block BIRCH_MOSAIC_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.BIRCH_MOSAIC));
  public static final Block BIRCH_MOSAIC_STAIRS = new StairBlock(BIRCH_MOSAIC.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.BIRCH_MOSAIC));
  public static final Block CARVED_BIRCH_LOG = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_BIRCH_LOG));
  public static final Block CARVED_BIRCH_WOOD = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_BIRCH_WOOD));
  public static final Block JUNGLE_MOSAIC = new Block(FabricBlockSettings.copyOf(Blocks.JUNGLE_PLANKS));
  public static final Block JUNGLE_MOSAIC_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.JUNGLE_MOSAIC));
  public static final Block JUNGLE_MOSAIC_STAIRS = new StairBlock(JUNGLE_MOSAIC.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.JUNGLE_MOSAIC));
  public static final Block CARVED_JUNGLE_LOG = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_JUNGLE_LOG));
  public static final Block CARVED_JUNGLE_WOOD = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_JUNGLE_WOOD));
  public static final Block ACACIA_MOSAIC = new Block(FabricBlockSettings.copyOf(Blocks.ACACIA_PLANKS));
  public static final Block ACACIA_MOSAIC_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.ACACIA_MOSAIC));
  public static final Block ACACIA_MOSAIC_STAIRS = new StairBlock(ACACIA_MOSAIC.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.ACACIA_MOSAIC));
  public static final Block CARVED_ACACIA_LOG = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_ACACIA_LOG));
  public static final Block CARVED_ACACIA_WOOD = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_ACACIA_WOOD));
  public static final Block DARK_OAK_MOSAIC = new Block(FabricBlockSettings.copyOf(Blocks.DARK_OAK_PLANKS));
  public static final Block DARK_OAK_MOSAIC_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.DARK_OAK_MOSAIC));
  public static final Block DARK_OAK_MOSAIC_STAIRS = new StairBlock(DARK_OAK_MOSAIC.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.DARK_OAK_MOSAIC));
  public static final Block CARVED_DARK_OAK_LOG = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_DARK_OAK_LOG));
  public static final Block CARVED_DARK_OAK_WOOD = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.DARK_OAK_WOOD));
  public static final Block MANGROVE_MOSAIC = new Block(FabricBlockSettings.copyOf(Blocks.MANGROVE_PLANKS));
  public static final Block MANGROVE_MOSAIC_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MANGROVE_MOSAIC));
  public static final Block MANGROVE_MOSAIC_STAIRS = new StairBlock(MANGROVE_MOSAIC.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MANGROVE_MOSAIC));
  public static final Block CARVED_MANGROVE_LOG = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_MANGROVE_LOG));
  public static final Block CARVED_MANGROVE_WOOD = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_MANGROVE_WOOD));
  public static final Block CRIMSON_MOSAIC = new Block(FabricBlockSettings.copyOf(Blocks.CRIMSON_PLANKS));
  public static final Block CRIMSON_MOSAIC_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.CRIMSON_MOSAIC));
  public static final Block CRIMSON_MOSAIC_STAIRS = new StairBlock(CRIMSON_MOSAIC.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.CRIMSON_MOSAIC));
  public static final Block CARVED_CRIMSON_STEM = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_CRIMSON_STEM));
  public static final Block CARVED_CRIMSON_HYPHAE = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_CRIMSON_HYPHAE));
  public static final Block WARPED_MOSAIC = new Block(FabricBlockSettings.copyOf(Blocks.WARPED_PLANKS));
  public static final Block WARPED_MOSAIC_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.WARPED_MOSAIC));
  public static final Block WARPED_MOSAIC_STAIRS = new StairBlock(WARPED_MOSAIC.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.WARPED_MOSAIC));
  public static final Block CARVED_WARPED_STEM = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_WARPED_STEM));
  public static final Block CARVED_WARPED_HYPHAE = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_WARPED_HYPHAE));
  public static final Block CHERRY_MOSAIC = new Block(FabricBlockSettings.copyOf(Blocks.CHERRY_PLANKS));
  public static final Block CHERRY_MOSAIC_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.CHERRY_MOSAIC));
  public static final Block CHERRY_MOSAIC_STAIRS = new StairBlock(CHERRY_MOSAIC.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.CHERRY_MOSAIC));
  public static final Block CARVED_CHERRY_LOG = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_CHERRY_LOG));
  public static final Block CARVED_CHERRY_WOOD = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_CHERRY_WOOD));
  public static final Block CARVED_BAMBOO_BLOCK = new RotatedPillarBlock(FabricBlockSettings.copyOf(Blocks.STRIPPED_BAMBOO_BLOCK));
  public static final Block MOSSY_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.BRICKS));
  public static final Block MOSSY_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_BRICKS));
  public static final Block MOSSY_BRICK_STAIRS = new StairBlock(MOSSY_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.MOSSY_BRICKS));
  public static final Block MOSSY_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.MOSSY_BRICKS).solid());
  public static final Block CRACKED_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.BRICKS));
  public static final Block TILED_GLASS = new TransparentBlock(FabricBlockSettings.copyOf(Blocks.GLASS));
  public static final Block TILED_TINTED_GLASS = new TintedGlassBlock(FabricBlockSettings.copyOf(Blocks.TINTED_GLASS));
  public static final Block WHITE_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.WHITE, FabricBlockSettings.copyOf(Blocks.WHITE_STAINED_GLASS));
  public static final Block LIGHT_GRAY_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.LIGHT_GRAY, FabricBlockSettings.copyOf(Blocks.LIGHT_GRAY_STAINED_GLASS));
  public static final Block GRAY_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.GRAY, FabricBlockSettings.copyOf(Blocks.GRAY_STAINED_GLASS));
  public static final Block BLACK_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.BLACK, FabricBlockSettings.copyOf(Blocks.BLACK_STAINED_GLASS));
  public static final Block BROWN_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.BROWN, FabricBlockSettings.copyOf(Blocks.BROWN_STAINED_GLASS));
  public static final Block RED_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.RED, FabricBlockSettings.copyOf(Blocks.RED_STAINED_GLASS));
  public static final Block ORANGE_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.ORANGE, FabricBlockSettings.copyOf(Blocks.ORANGE_STAINED_GLASS));
  public static final Block YELLOW_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.YELLOW, FabricBlockSettings.copyOf(Blocks.YELLOW_STAINED_GLASS));
  public static final Block LIME_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.LIME, FabricBlockSettings.copyOf(Blocks.LIME_STAINED_GLASS));
  public static final Block GREEN_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.GREEN, FabricBlockSettings.copyOf(Blocks.GREEN_STAINED_GLASS));
  public static final Block CYAN_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.CYAN, FabricBlockSettings.copyOf(Blocks.CYAN_STAINED_GLASS));
  public static final Block LIGHT_BLUE_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.LIGHT_BLUE, FabricBlockSettings.copyOf(Blocks.LIGHT_BLUE_STAINED_GLASS));
  public static final Block BLUE_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.BLUE, FabricBlockSettings.copyOf(Blocks.BLUE_STAINED_GLASS));
  public static final Block PURPLE_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.PURPLE, FabricBlockSettings.copyOf(Blocks.PURPLE_STAINED_GLASS));
  public static final Block MAGENTA_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.MAGENTA, FabricBlockSettings.copyOf(Blocks.MAGENTA_STAINED_GLASS));
  public static final Block PINK_STAINED_TILED_GLASS = new StainedGlassBlock(DyeColor.PINK, FabricBlockSettings.copyOf(Blocks.PINK_STAINED_GLASS));
  public static final Block TILED_GLASS_PANE = new IronBarsBlock(FabricBlockSettings.copyOf(Blocks.GLASS_PANE));
  public static final Block WHITE_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.WHITE, FabricBlockSettings.copyOf(Blocks.WHITE_STAINED_GLASS_PANE));
  public static final Block LIGHT_GRAY_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.LIGHT_GRAY, FabricBlockSettings.copyOf(Blocks.LIGHT_GRAY_STAINED_GLASS_PANE));
  public static final Block GRAY_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.GRAY, FabricBlockSettings.copyOf(Blocks.GRAY_STAINED_GLASS_PANE));
  public static final Block BLACK_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.BLACK, FabricBlockSettings.copyOf(Blocks.BLACK_STAINED_GLASS_PANE));
  public static final Block BROWN_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.BROWN, FabricBlockSettings.copyOf(Blocks.BROWN_STAINED_GLASS_PANE));
  public static final Block RED_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.RED, FabricBlockSettings.copyOf(Blocks.RED_STAINED_GLASS_PANE));
  public static final Block ORANGE_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.ORANGE, FabricBlockSettings.copyOf(Blocks.ORANGE_STAINED_GLASS_PANE));
  public static final Block YELLOW_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.YELLOW, FabricBlockSettings.copyOf(Blocks.YELLOW_STAINED_GLASS_PANE));
  public static final Block LIME_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.LIME, FabricBlockSettings.copyOf(Blocks.LIME_STAINED_GLASS_PANE));
  public static final Block GREEN_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.GREEN, FabricBlockSettings.copyOf(Blocks.GREEN_STAINED_GLASS_PANE));
  public static final Block CYAN_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.CYAN, FabricBlockSettings.copyOf(Blocks.CYAN_STAINED_GLASS_PANE));
  public static final Block LIGHT_BLUE_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.LIGHT_BLUE, FabricBlockSettings.copyOf(Blocks.LIGHT_BLUE_STAINED_GLASS_PANE));
  public static final Block BLUE_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.BLUE, FabricBlockSettings.copyOf(Blocks.BLUE_STAINED_GLASS_PANE));
  public static final Block PURPLE_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.PURPLE, FabricBlockSettings.copyOf(Blocks.PURPLE_STAINED_GLASS_PANE));
  public static final Block MAGENTA_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.MAGENTA, FabricBlockSettings.copyOf(Blocks.MAGENTA_STAINED_GLASS_PANE));
  public static final Block PINK_STAINED_TILED_GLASS_PANE = new StainedGlassPaneBlock(DyeColor.PINK, FabricBlockSettings.copyOf(Blocks.PINK_STAINED_GLASS_PANE));
  public static final Block BONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.BONE_BLOCK));
  public static final Block BONE_BRICK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.BONE_BRICKS));
  public static final Block BONE_BRICK_STAIRS = new StairBlock(BONE_BRICKS.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.BONE_BRICKS));
  public static final Block BONE_BRICK_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.BONE_BRICKS).solid());
  public static final Block CRACKED_BONE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.BONE_BLOCK));
  public static final Block BONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.BONE_BLOCK));
  public static final Block BONE_TILE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(SMBBlocks.BONE_TILES));
  public static final Block BONE_TILE_STAIRS = new StairBlock(BONE_TILES.defaultBlockState(), FabricBlockSettings.copyOf(SMBBlocks.BONE_TILES));
  public static final Block BONE_TILE_WALL = new WallBlock(FabricBlockSettings.copyOf(SMBBlocks.BONE_TILES).solid());
  public static final Block CRACKED_BONE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.BONE_BLOCK));
  public static final Block COPPER_BRICKS = new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.UNAFFECTED, FabricBlockSettings.copyOf(Blocks.COPPER_BLOCK));
  public static final Block EXPOSED_COPPER_BRICKS = new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.EXPOSED, FabricBlockSettings.copyOf(Blocks.EXPOSED_COPPER));
  public static final Block WEATHERED_COPPER_BRICKS = new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.WEATHERED, FabricBlockSettings.copyOf(Blocks.WEATHERED_COPPER));
  public static final Block OXIDIZED_COPPER_BRICKS = new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.OXIDIZED, FabricBlockSettings.copyOf(Blocks.OXIDIZED_COPPER));
  public static final Block WAXED_COPPER_BRICKS = new Block(FabricBlockSettings.copyOf(SMBBlocks.COPPER_BRICKS));
  public static final Block WAXED_EXPOSED_COPPER_BRICKS = new Block(FabricBlockSettings.copyOf(SMBBlocks.EXPOSED_COPPER_BRICKS));
  public static final Block WAXED_WEATHERED_COPPER_BRICKS = new Block(FabricBlockSettings.copyOf(SMBBlocks.WEATHERED_COPPER_BRICKS));
  public static final Block WAXED_OXIDIZED_COPPER_BRICKS = new Block(FabricBlockSettings.copyOf(SMBBlocks.OXIDIZED_COPPER_BRICKS));
  public static final Block CRACKED_COPPER_BRICKS = new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.UNAFFECTED, FabricBlockSettings.copyOf(SMBBlocks.COPPER_BRICKS));
  public static final Block EXPOSED_CRACKED_COPPER_BRICKS = new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.EXPOSED, FabricBlockSettings.copyOf(SMBBlocks.EXPOSED_COPPER_BRICKS));
  public static final Block WEATHERED_CRACKED_COPPER_BRICKS = new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.WEATHERED, FabricBlockSettings.copyOf(SMBBlocks.WEATHERED_COPPER_BRICKS));
  public static final Block OXIDIZED_CRACKED_COPPER_BRICKS = new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.OXIDIZED, FabricBlockSettings.copyOf(SMBBlocks.OXIDIZED_COPPER_BRICKS));
  public static final Block WAXED_CRACKED_COPPER_BRICKS = new Block(FabricBlockSettings.copyOf(SMBBlocks.CRACKED_COPPER_BRICKS));
  public static final Block WAXED_EXPOSED_CRACKED_COPPER_BRICKS = new Block(FabricBlockSettings.copyOf(SMBBlocks.EXPOSED_CRACKED_COPPER_BRICKS));
  public static final Block WAXED_WEATHERED_CRACKED_COPPER_BRICKS = new Block(FabricBlockSettings.copyOf(SMBBlocks.WEATHERED_CRACKED_COPPER_BRICKS));
  public static final Block WAXED_OXIDIZED_CRACKED_COPPER_BRICKS = new Block(FabricBlockSettings.copyOf(SMBBlocks.OXIDIZED_CRACKED_COPPER_BRICKS));
  public static final Block CRACKED_CUT_COPPER = new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.UNAFFECTED, FabricBlockSettings.copyOf(Blocks.CUT_COPPER));
  public static final Block EXPOSED_CRACKED_CUT_COPPER = new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.EXPOSED, FabricBlockSettings.copyOf(Blocks.EXPOSED_CUT_COPPER));
  public static final Block WEATHERED_CRACKED_CUT_COPPER = new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.WEATHERED, FabricBlockSettings.copyOf(Blocks.WEATHERED_CUT_COPPER));
  public static final Block OXIDIZED_CRACKED_CUT_COPPER = new WeatheringCopperFullBlock(WeatheringCopper.WeatherState.OXIDIZED, FabricBlockSettings.copyOf(Blocks.OXIDIZED_CUT_COPPER));
  public static final Block WAXED_CRACKED_CUT_COPPER = new Block(FabricBlockSettings.copyOf(SMBBlocks.CRACKED_CUT_COPPER));
  public static final Block WAXED_EXPOSED_CRACKED_CUT_COPPER = new Block(FabricBlockSettings.copyOf(SMBBlocks.EXPOSED_CRACKED_CUT_COPPER));
  public static final Block WAXED_WEATHERED_CRACKED_CUT_COPPER = new Block(FabricBlockSettings.copyOf(SMBBlocks.WEATHERED_CRACKED_CUT_COPPER));
  public static final Block WAXED_OXIDIZED_CRACKED_CUT_COPPER = new Block(FabricBlockSettings.copyOf(SMBBlocks.OXIDIZED_CRACKED_CUT_COPPER));
  public static final Block COPPER_PILLAR = new WeatheringRotatedCopperFullBlock(WeatheringCopper.WeatherState.UNAFFECTED, FabricBlockSettings.copyOf(Blocks.CUT_COPPER));
  public static final Block EXPOSED_COPPER_PILLAR = new WeatheringRotatedCopperFullBlock(WeatheringCopper.WeatherState.EXPOSED, FabricBlockSettings.copyOf(Blocks.EXPOSED_CUT_COPPER));
  public static final Block WEATHERED_COPPER_PILLAR = new WeatheringRotatedCopperFullBlock(WeatheringCopper.WeatherState.WEATHERED, FabricBlockSettings.copyOf(Blocks.WEATHERED_CUT_COPPER));
  public static final Block OXIDIZED_COPPER_PILLAR = new WeatheringRotatedCopperFullBlock(WeatheringCopper.WeatherState.OXIDIZED, FabricBlockSettings.copyOf(Blocks.OXIDIZED_CUT_COPPER));
  public static final Block WAXED_COPPER_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(SMBBlocks.COPPER_PILLAR));
  public static final Block WAXED_EXPOSED_COPPER_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(SMBBlocks.EXPOSED_COPPER_PILLAR));
  public static final Block WAXED_WEATHERED_COPPER_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(SMBBlocks.WEATHERED_COPPER_PILLAR));
  public static final Block WAXED_OXIDIZED_COPPER_PILLAR = new RotatedPillarBlock(FabricBlockSettings.copyOf(SMBBlocks.OXIDIZED_COPPER_PILLAR));

  public static void register() {
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "copper_bricks"), COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "exposed_copper_bricks"), EXPOSED_COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "weathered_copper_bricks"), WEATHERED_COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "oxidized_copper_bricks"), OXIDIZED_COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_copper_bricks"), WAXED_COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_exposed_copper_bricks"), WAXED_EXPOSED_COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_weathered_copper_bricks"), WAXED_WEATHERED_COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_oxidized_copper_bricks"), WAXED_OXIDIZED_COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_copper_bricks"), CRACKED_COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "exposed_cracked_copper_bricks"), EXPOSED_CRACKED_COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "weathered_cracked_copper_bricks"), WEATHERED_CRACKED_COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "oxidized_cracked_copper_bricks"), OXIDIZED_CRACKED_COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_cracked_copper_bricks"), WAXED_CRACKED_COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_exposed_cracked_copper_bricks"), WAXED_EXPOSED_CRACKED_COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_weathered_cracked_copper_bricks"), WAXED_WEATHERED_CRACKED_COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_oxidized_cracked_copper_bricks"), WAXED_OXIDIZED_CRACKED_COPPER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_cut_copper"), CRACKED_CUT_COPPER);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "exposed_cracked_cut_copper"), EXPOSED_CRACKED_CUT_COPPER);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "weathered_cracked_cut_copper"), WEATHERED_CRACKED_CUT_COPPER);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "oxidized_cracked_cut_copper"), OXIDIZED_CRACKED_CUT_COPPER);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_cracked_cut_copper"), WAXED_CRACKED_CUT_COPPER);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_exposed_cracked_cut_copper"), WAXED_EXPOSED_CRACKED_CUT_COPPER);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_weathered_cracked_cut_copper"), WAXED_WEATHERED_CRACKED_CUT_COPPER);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_oxidized_cracked_cut_copper"), WAXED_OXIDIZED_CRACKED_CUT_COPPER);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "copper_pillar"), COPPER_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "exposed_copper_pillar"), EXPOSED_COPPER_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "weathered_copper_pillar"), WEATHERED_COPPER_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "oxidized_copper_pillar"), OXIDIZED_COPPER_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_copper_pillar"), WAXED_COPPER_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_exposed_copper_pillar"), WAXED_EXPOSED_COPPER_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_weathered_copper_pillar"), WAXED_WEATHERED_COPPER_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "waxed_oxidized_copper_pillar"), WAXED_OXIDIZED_COPPER_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "tiny_cactus"), TINY_CACTUS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "potted_tiny_cactus"), POTTED_TINY_CACTUS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "dune_grass"), DUNE_GRASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "tall_dune_grass"), TALL_DUNE_GRASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "short_snow_grass"), SHORT_SNOW_GRASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "tall_snow_grass"), TALL_SNOW_GRASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "snow_fern"), SNOW_FERN);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "potted_snow_fern"), POTTED_SNOW_FERN);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "large_snow_fern"), LARGE_SNOW_FERN);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cattail"), CATTAIL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "small_lily_pads"), SMALL_LILY_PADS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "luminous_flower"), LUMINOUS_FLOWER);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "potted_luminous_flower"), POTTED_LUMINOUS_FLOWER);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "big_lily_pad"), BIG_LILY_PAD);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "azalea_leaf_litter"), AZALEA_LEAF_LITTER);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "birch_leaf_litter"), BIRCH_LEAF_LITTER);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "flowering_azalea_leaf_litter"), FLOWERING_AZALEA_LEAF_LITTER);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "spruce_leaf_litter"), SPRUCE_LEAF_LITTER);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "leaf_litter"), LEAF_LITTER);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "brown_mushroom_colony"), BROWN_MUSHROOM_COLONY);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "tall_brown_mushroom_colony"), TALL_BROWN_MUSHROOM_COLONY);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "brown_mushroom_colony_wall"), BROWN_MUSHROOM_COLONY_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_mushroom_colony"), RED_MUSHROOM_COLONY);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "tall_red_mushroom_colony"), TALL_RED_MUSHROOM_COLONY);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_mushroom_colony_wall"), RED_MUSHROOM_COLONY_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "warped_fungus_colony"), WARPED_FUNGUS_COLONY);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "tall_warped_fungus_colony"), TALL_WARPED_FUNGUS_COLONY);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "warped_fungus_colony_wall"), WARPED_FUNGUS_COLONY_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "crimson_fungus_colony"), CRIMSON_FUNGUS_COLONY);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "tall_crimson_fungus_colony"), TALL_CRIMSON_FUNGUS_COLONY);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "crimson_fungus_colony_wall"), CRIMSON_FUNGUS_COLONY_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "ochre_redstone_froglight"), OCHRE_REDSTONE_FROGLIGHT);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "pearlescent_redstone_froglight"), PEARLESCENT_REDSTONE_FROGLIGHT);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "verdant_redstone_froglight"), VERDANT_REDSTONE_FROGLIGHT);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "packed_snow"), PACKED_SNOW);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "packed_snow_slab"), PACKED_SNOW_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "packed_snow_stairs"), PACKED_SNOW_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_snow"), POLISHED_SNOW);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_snow_slab"), POLISHED_SNOW_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_snow_stairs"), POLISHED_SNOW_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "snow_bricks"), SNOW_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "snow_brick_slab"), SNOW_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "snow_brick_stairs"), SNOW_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "snow_brick_wall"), SNOW_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_snow_bricks"), CRACKED_SNOW_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "snow_tiles"), SNOW_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "snow_tile_slab"), SNOW_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "snow_tile_stairs"), SNOW_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "snow_tile_wall"), SNOW_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_snow_tiles"), CRACKED_SNOW_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "snow_pillar"), SNOW_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_deepslate"), SMOOTH_DEEPSLATE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_deepslate_slab"), SMOOTH_DEEPSLATE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_deepslate_bricks"), MOSSY_DEEPSLATE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_deepslate_brick_slab"), MOSSY_DEEPSLATE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_deepslate_brick_stairs"), MOSSY_DEEPSLATE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_deepslate_brick_wall"), MOSSY_DEEPSLATE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "deepslate_pillar"), DEEPSLATE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_stone"), POLISHED_STONE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_stone_slab"), POLISHED_STONE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_stone_stairs"), POLISHED_STONE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "stone_tiles"), STONE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "stone_tile_slab"), STONE_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "stone_tile_stairs"), STONE_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "stone_tile_wall"), STONE_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_stone_tiles"), CRACKED_STONE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "stone_pillar"), STONE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_granite"), SMOOTH_GRANITE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_granite_slab"), SMOOTH_GRANITE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "chiseled_granite_bricks"), CHISELED_GRANITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "granite_bricks"), GRANITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "granite_brick_slab"), GRANITE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "granite_brick_stairs"), GRANITE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "granite_brick_wall"), GRANITE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_granite_bricks"), CRACKED_GRANITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_granite_bricks"), MOSSY_GRANITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_granite_brick_slab"), MOSSY_GRANITE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_granite_brick_stairs"), MOSSY_GRANITE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_granite_brick_wall"), MOSSY_GRANITE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "granite_tiles"), GRANITE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "granite_tile_slab"), GRANITE_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "granite_tile_stairs"), GRANITE_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "granite_tile_wall"), GRANITE_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_granite_tiles"), CRACKED_GRANITE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "granite_pillar"), GRANITE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_diorite"), SMOOTH_DIORITE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_diorite_slab"), SMOOTH_DIORITE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "chiseled_diorite_bricks"), CHISELED_DIORITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "diorite_bricks"), DIORITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "diorite_brick_slab"), DIORITE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "diorite_brick_stairs"), DIORITE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "diorite_brick_wall"), DIORITE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_diorite_bricks"), CRACKED_DIORITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_diorite_bricks"), MOSSY_DIORITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_diorite_brick_slab"), MOSSY_DIORITE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_diorite_brick_stairs"), MOSSY_DIORITE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_diorite_brick_wall"), MOSSY_DIORITE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "diorite_tiles"), DIORITE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "diorite_tile_slab"), DIORITE_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "diorite_tile_stairs"), DIORITE_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "diorite_tile_wall"), DIORITE_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_diorite_tiles"), CRACKED_DIORITE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "diorite_pillar"), DIORITE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_andesite"), SMOOTH_ANDESITE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_andesite_slab"), SMOOTH_ANDESITE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "chiseled_andesite_bricks"), CHISELED_ANDESITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "andesite_bricks"), ANDESITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "andesite_brick_slab"), ANDESITE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "andesite_brick_stairs"), ANDESITE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "andesite_brick_wall"), ANDESITE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_andesite_bricks"), CRACKED_ANDESITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_andesite_bricks"), MOSSY_ANDESITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_andesite_brick_slab"), MOSSY_ANDESITE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_andesite_brick_stairs"), MOSSY_ANDESITE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_andesite_brick_wall"), MOSSY_ANDESITE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "andesite_tiles"), ANDESITE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "andesite_tile_slab"), ANDESITE_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "andesite_tile_stairs"), ANDESITE_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "andesite_tile_wall"), ANDESITE_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_andesite_tiles"), CRACKED_ANDESITE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "andesite_pillar"), ANDESITE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_end_stone"), POLISHED_END_STONE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_end_stone_slab"), POLISHED_END_STONE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_end_stone_stairs"), POLISHED_END_STONE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_end_stone"), SMOOTH_END_STONE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_end_stone_slab"), SMOOTH_END_STONE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "chiseled_end_stone_bricks"), CHISELED_END_STONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_end_stone_bricks"), CRACKED_END_STONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_end_stone_bricks"), MOSSY_END_STONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_end_stone_brick_slab"), MOSSY_END_STONE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_end_stone_brick_stairs"), MOSSY_END_STONE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_end_stone_brick_wall"), MOSSY_END_STONE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "end_stone_tiles"), END_STONE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "end_stone_tile_slab"), END_STONE_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "end_stone_tile_stairs"), END_STONE_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "end_stone_tile_wall"), END_STONE_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_end_stone_tiles"), CRACKED_END_STONE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "end_stone_pillar"), END_STONE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_tuff_bricks"), MOSSY_TUFF_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_tuff_brick_slab"), MOSSY_TUFF_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_tuff_brick_stairs"), MOSSY_TUFF_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_tuff_brick_wall"), MOSSY_TUFF_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_tuff"), SMOOTH_TUFF);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_tuff_slab"), SMOOTH_TUFF_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_tuff_bricks"), CRACKED_TUFF_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "tuff_tiles"), TUFF_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "tuff_tile_slab"), TUFF_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "tuff_tile_stairs"), TUFF_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "tuff_tile_wall"), TUFF_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_tuff_tiles"), CRACKED_TUFF_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "tuff_pillar"), TUFF_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_sandstone_bricks"), RED_SANDSTONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_sandstone_brick_slab"), RED_SANDSTONE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_sandstone_brick_stairs"), RED_SANDSTONE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_sandstone_brick_wall"), RED_SANDSTONE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_red_sandstone_bricks"), CRACKED_RED_SANDSTONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_red_sandstone_bricks"), MOSSY_RED_SANDSTONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_red_sandstone_brick_slab"), MOSSY_RED_SANDSTONE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_red_sandstone_brick_stairs"), MOSSY_RED_SANDSTONE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_red_sandstone_brick_wall"), MOSSY_RED_SANDSTONE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_sandstone_tiles"), RED_SANDSTONE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_sandstone_tile_slab"), RED_SANDSTONE_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_sandstone_tile_stairs"), RED_SANDSTONE_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_sandstone_tile_wall"), RED_SANDSTONE_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_red_sandstone_tiles"), CRACKED_RED_SANDSTONE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_sandstone_pillar"), RED_SANDSTONE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_calcite"), POLISHED_CALCITE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_calcite_slab"), POLISHED_CALCITE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_calcite_stairs"), POLISHED_CALCITE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_calcite"), SMOOTH_CALCITE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_calcite_slab"), SMOOTH_CALCITE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "chiseled_calcite_bricks"), CHISELED_CALCITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "calcite_bricks"), CALCITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "calcite_brick_slab"), CALCITE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "calcite_brick_stairs"), CALCITE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "calcite_brick_wall"), CALCITE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_calcite_bricks"), CRACKED_CALCITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_calcite_bricks"), MOSSY_CALCITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_calcite_brick_slab"), MOSSY_CALCITE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_calcite_brick_stairs"), MOSSY_CALCITE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_calcite_brick_wall"), MOSSY_CALCITE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "calcite_tiles"), CALCITE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "calcite_tile_slab"), CALCITE_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "calcite_tile_stairs"), CALCITE_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "calcite_tile_wall"), CALCITE_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_calcite_tiles"), CRACKED_CALCITE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "calcite_pillar"), CALCITE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_dripstone"), POLISHED_DRIPSTONE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_dripstone_slab"), POLISHED_DRIPSTONE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_dripstone_stairs"), POLISHED_DRIPSTONE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_dripstone"), SMOOTH_DRIPSTONE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_dripstone_slab"), SMOOTH_DRIPSTONE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "chiseled_dripstone_bricks"), CHISELED_DRIPSTONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "dripstone_bricks"), DRIPSTONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "dripstone_brick_slab"), DRIPSTONE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "dripstone_brick_stairs"), DRIPSTONE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "dripstone_brick_wall"), DRIPSTONE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_dripstone_bricks"), CRACKED_DRIPSTONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_dripstone_bricks"), MOSSY_DRIPSTONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_dripstone_brick_slab"), MOSSY_DRIPSTONE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_dripstone_brick_stairs"), MOSSY_DRIPSTONE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_dripstone_brick_wall"), MOSSY_DRIPSTONE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "dripstone_tiles"), DRIPSTONE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "dripstone_tile_slab"), DRIPSTONE_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "dripstone_tile_stairs"), DRIPSTONE_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "dripstone_tile_wall"), DRIPSTONE_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_dripstone_tiles"), CRACKED_DRIPSTONE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "dripstone_pillar"), DRIPSTONE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_prismarine"), POLISHED_PRISMARINE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_prismarine_slab"), POLISHED_PRISMARINE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_prismarine_stairs"), POLISHED_PRISMARINE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_prismarine"), SMOOTH_PRISMARINE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_prismarine_slab"), SMOOTH_PRISMARINE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "chiseled_prismarine_bricks"), CHISELED_PRISMARINE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_prismarine_bricks"), CRACKED_PRISMARINE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_prismarine_bricks"), MOSSY_PRISMARINE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_prismarine_brick_slab"), MOSSY_PRISMARINE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_prismarine_brick_stairs"), MOSSY_PRISMARINE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_prismarine_brick_wall"), MOSSY_PRISMARINE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "prismarine_tiles"), PRISMARINE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "prismarine_tile_slab"), PRISMARINE_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "prismarine_tile_stairs"), PRISMARINE_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "prismarine_tile_wall"), PRISMARINE_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_prismarine_tiles"), CRACKED_PRISMARINE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "prismarine_pillar"), PRISMARINE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_blackstone"), SMOOTH_BLACKSTONE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_blackstone_slab"), SMOOTH_BLACKSTONE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "corrupted_polished_blackstone_bricks"), CORRUPTED_POLISHED_BLACKSTONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "corrupted_polished_blackstone_brick_slab"), CORRUPTED_POLISHED_BLACKSTONE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "corrupted_polished_blackstone_brick_stairs"), CORRUPTED_POLISHED_BLACKSTONE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "corrupted_polished_blackstone_brick_wall"), CORRUPTED_POLISHED_BLACKSTONE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_blackstone_tiles"), POLISHED_BLACKSTONE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_blackstone_tile_slab"), POLISHED_BLACKSTONE_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_blackstone_tile_stairs"), POLISHED_BLACKSTONE_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_blackstone_tile_wall"), POLISHED_BLACKSTONE_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_polished_blackstone_tiles"), CRACKED_POLISHED_BLACKSTONE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_blackstone_pillar"), POLISHED_BLACKSTONE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_quartz_bricks"), CRACKED_QUARTZ_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cut_quartz"), CUT_QUARTZ);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_cut_quartz"), CRACKED_CUT_QUARTZ);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_mud"), POLISHED_MUD);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_mud_slab"), POLISHED_MUD_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_mud_stairs"), POLISHED_MUD_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_mud"), SMOOTH_MUD);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_mud_slab"), SMOOTH_MUD_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "chiseled_mud_bricks"), CHISELED_MUD_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_mud_bricks"), CRACKED_MUD_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_mud_bricks"), MOSSY_MUD_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_mud_brick_slab"), MOSSY_MUD_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_mud_brick_stairs"), MOSSY_MUD_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_mud_brick_wall"), MOSSY_MUD_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mud_tiles"), MUD_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mud_tile_slab"), MUD_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mud_tile_stairs"), MUD_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mud_tile_wall"), MUD_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_mud_tiles"), CRACKED_MUD_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mud_pillar"), MUD_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "sandstone_bricks"), SANDSTONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "sandstone_brick_slab"), SANDSTONE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "sandstone_brick_stairs"), SANDSTONE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "sandstone_brick_wall"), SANDSTONE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_sandstone_bricks"), CRACKED_SANDSTONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_sandstone_bricks"), MOSSY_SANDSTONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_sandstone_brick_slab"), MOSSY_SANDSTONE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_sandstone_brick_stairs"), MOSSY_SANDSTONE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_sandstone_brick_wall"), MOSSY_SANDSTONE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "sandstone_tiles"), SANDSTONE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "sandstone_tile_slab"), SANDSTONE_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "sandstone_tile_stairs"), SANDSTONE_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "sandstone_tile_wall"), SANDSTONE_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_sandstone_tiles"), CRACKED_SANDSTONE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "sandstone_pillar"), SANDSTONE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "nether_bricks_pillar"), NETHER_BRICKS_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "chiseled_red_nether_bricks"), CHISELED_RED_NETHER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_red_nether_bricks"), CRACKED_RED_NETHER_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_nether_bricks_pillar"), RED_NETHER_BRICKS_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_ice"), POLISHED_ICE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_ice_slab"), POLISHED_ICE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_ice_stairs"), POLISHED_ICE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "ice_bricks"), ICE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "ice_brick_slab"), ICE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "ice_brick_stairs"), ICE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "ice_brick_wall"), ICE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_ice_bricks"), CRACKED_ICE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "ice_tiles"), ICE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "ice_tile_slab"), ICE_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "ice_tile_stairs"), ICE_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "ice_tile_wall"), ICE_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_ice_tiles"), CRACKED_ICE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "ice_pillar"), ICE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_purpur"), POLISHED_PURPUR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_purpur_slab"), POLISHED_PURPUR_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "polished_purpur_stairs"), POLISHED_PURPUR_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_purpur"), SMOOTH_PURPUR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_purpur_slab"), SMOOTH_PURPUR_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "chiseled_purpur"), CHISELED_PURPUR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_purpur_block"), CRACKED_PURPUR_BLOCK);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_purpur_block"), MOSSY_PURPUR_BLOCK);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_purpur_block_slab"), MOSSY_PURPUR_BLOCK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_purpur_block_stairs"), MOSSY_PURPUR_BLOCK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_purpur_block_wall"), MOSSY_PURPUR_BLOCK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "purpur_tiles"), PURPUR_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "purpur_tile_slab"), PURPUR_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "purpur_tile_stairs"), PURPUR_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "purpur_tile_wall"), PURPUR_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_purpur_tiles"), CRACKED_PURPUR_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "white_concrete_bricks"), WHITE_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "light_gray_concrete_bricks"), LIGHT_GRAY_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "gray_concrete_bricks"), GRAY_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "black_concrete_bricks"), BLACK_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "brown_concrete_bricks"), BROWN_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_concrete_bricks"), RED_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "orange_concrete_bricks"), ORANGE_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "yellow_concrete_bricks"), YELLOW_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "lime_concrete_bricks"), LIME_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "green_concrete_bricks"), GREEN_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cyan_concrete_bricks"), CYAN_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "light_blue_concrete_bricks"), LIGHT_BLUE_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "blue_concrete_bricks"), BLUE_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "purple_concrete_bricks"), PURPLE_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "magenta_concrete_bricks"), MAGENTA_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "pink_concrete_bricks"), PINK_CONCRETE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "white_concrete_tiles"), WHITE_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "light_gray_concrete_tiles"), LIGHT_GRAY_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "gray_concrete_tiles"), GRAY_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "black_concrete_tiles"), BLACK_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "brown_concrete_tiles"), BROWN_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_concrete_tiles"), RED_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "orange_concrete_tiles"), ORANGE_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "yellow_concrete_tiles"), YELLOW_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "lime_concrete_tiles"), LIME_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "green_concrete_tiles"), GREEN_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cyan_concrete_tiles"), CYAN_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "light_blue_concrete_tiles"), LIGHT_BLUE_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "blue_concrete_tiles"), BLUE_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "purple_concrete_tiles"), PURPLE_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "magenta_concrete_tiles"), MAGENTA_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "pink_concrete_tiles"), PINK_CONCRETE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "terracotta_bricks"), TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "white_terracotta_bricks"), WHITE_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "light_gray_terracotta_bricks"), LIGHT_GRAY_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "gray_terracotta_bricks"), GRAY_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "black_terracotta_bricks"), BLACK_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "brown_terracotta_bricks"), BROWN_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_terracotta_bricks"), RED_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "orange_terracotta_bricks"), ORANGE_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "yellow_terracotta_bricks"), YELLOW_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "lime_terracotta_bricks"), LIME_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "green_terracotta_bricks"), GREEN_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cyan_terracotta_bricks"), CYAN_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "light_blue_terracotta_bricks"), LIGHT_BLUE_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "blue_terracotta_bricks"), BLUE_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "purple_terracotta_bricks"), PURPLE_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "magenta_terracotta_bricks"), MAGENTA_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "pink_terracotta_bricks"), PINK_TERRACOTTA_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "terracotta_tiles"), TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "white_terracotta_tiles"), WHITE_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "light_gray_terracotta_tiles"), LIGHT_GRAY_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "gray_terracotta_tiles"), GRAY_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "black_terracotta_tiles"), BLACK_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "brown_terracotta_tiles"), BROWN_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_terracotta_tiles"), RED_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "orange_terracotta_tiles"), ORANGE_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "yellow_terracotta_tiles"), YELLOW_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "lime_terracotta_tiles"), LIME_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "green_terracotta_tiles"), GREEN_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cyan_terracotta_tiles"), CYAN_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "light_blue_terracotta_tiles"), LIGHT_BLUE_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "blue_terracotta_tiles"), BLUE_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "purple_terracotta_tiles"), PURPLE_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "magenta_terracotta_tiles"), MAGENTA_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "pink_terracotta_tiles"), PINK_TERRACOTTA_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "soul_sandstone"), SOUL_SANDSTONE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "soul_sandstone_slab"), SOUL_SANDSTONE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "soul_sandstone_stairs"), SOUL_SANDSTONE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "soul_sandstone_wall"), SOUL_SANDSTONE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cut_soul_sandstone"), CUT_SOUL_SANDSTONE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cut_soul_sandstone_slab"), CUT_SOUL_SANDSTONE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_soul_sandstone"), SMOOTH_SOUL_SANDSTONE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_soul_sandstone_slab"), SMOOTH_SOUL_SANDSTONE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "smooth_soul_sandstone_stairs"), SMOOTH_SOUL_SANDSTONE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "chiseled_soul_sandstone"), CHISELED_SOUL_SANDSTONE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "soul_sandstone_bricks"), SOUL_SANDSTONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "soul_sandstone_brick_slab"), SOUL_SANDSTONE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "soul_sandstone_brick_stairs"), SOUL_SANDSTONE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "soul_sandstone_brick_wall"), SOUL_SANDSTONE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_soul_sandstone_bricks"), CRACKED_SOUL_SANDSTONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "soul_sandstone_tiles"), SOUL_SANDSTONE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "soul_sandstone_tile_slab"), SOUL_SANDSTONE_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "soul_sandstone_tile_stairs"), SOUL_SANDSTONE_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "soul_sandstone_tile_wall"), SOUL_SANDSTONE_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_soul_sandstone_tiles"), CRACKED_SOUL_SANDSTONE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "soul_sandstone_pillar"), SOUL_SANDSTONE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "coal_bricks"), COAL_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_coal_bricks"), CRACKED_COAL_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cut_coal"), CUT_COAL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_cut_coal"), CRACKED_CUT_COAL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "coal_pillar"), COAL_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "iron_bricks"), IRON_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_iron_bricks"), CRACKED_IRON_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cut_iron"), CUT_IRON);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_cut_iron"), CRACKED_CUT_IRON);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "iron_pillar"), IRON_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "iron_grate"), IRON_GRATE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "gold_bricks"), GOLD_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_gold_bricks"), CRACKED_GOLD_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cut_gold"), CUT_GOLD);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_cut_gold"), CRACKED_CUT_GOLD);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "gold_pillar"), GOLD_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "redstone_bricks"), REDSTONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_redstone_bricks"), CRACKED_REDSTONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cut_redstone"), CUT_REDSTONE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_cut_redstone"), CRACKED_CUT_REDSTONE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "redstone_pillar"), REDSTONE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "emerald_bricks"), EMERALD_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_emerald_bricks"), CRACKED_EMERALD_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cut_emerald"), CUT_EMERALD);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_cut_emerald"), CRACKED_CUT_EMERALD);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "emerald_pillar"), EMERALD_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "lapis_bricks"), LAPIS_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_lapis_bricks"), CRACKED_LAPIS_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cut_lapis"), CUT_LAPIS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_cut_lapis"), CRACKED_CUT_LAPIS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "lapis_pillar"), LAPIS_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "diamond_bricks"), DIAMOND_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_diamond_bricks"), CRACKED_DIAMOND_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cut_diamond"), CUT_DIAMOND);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_cut_diamond"), CRACKED_CUT_DIAMOND);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "diamond_pillar"), DIAMOND_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "diamond_grate"), DIAMOND_GRATE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "netherite_bricks"), NETHERITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_netherite_bricks"), CRACKED_NETHERITE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cut_netherite"), CUT_NETHERITE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_cut_netherite"), CRACKED_CUT_NETHERITE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "netherite_pillar"), NETHERITE_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "netherite_grate"), NETHERITE_GRATE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "amethyst_bricks"), AMETHYST_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_amethyst_bricks"), CRACKED_AMETHYST_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cut_amethyst"), CUT_AMETHYST);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_cut_amethyst"), CRACKED_CUT_AMETHYST);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "amethyst_pillar"), AMETHYST_PILLAR);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "shingles"), SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "white_shingles"), WHITE_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "light_gray_shingles"), LIGHT_GRAY_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "gray_shingles"), GRAY_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "black_shingles"), BLACK_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "brown_shingles"), BROWN_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_shingles"), RED_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "orange_shingles"), ORANGE_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "yellow_shingles"), YELLOW_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "lime_shingles"), LIME_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "green_shingles"), GREEN_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cyan_shingles"), CYAN_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "light_blue_shingles"), LIGHT_BLUE_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "blue_shingles"), BLUE_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "purple_shingles"), PURPLE_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "magenta_shingles"), MAGENTA_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "pink_shingles"), PINK_SHINGLES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "oak_mosaic"), OAK_MOSAIC);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "oak_mosaic_slab"), OAK_MOSAIC_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "oak_mosaic_stairs"), OAK_MOSAIC_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_oak_log"), CARVED_OAK_LOG);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_oak_wood"), CARVED_OAK_WOOD);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "spruce_mosaic"), SPRUCE_MOSAIC);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "spruce_mosaic_slab"), SPRUCE_MOSAIC_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "spruce_mosaic_stairs"), SPRUCE_MOSAIC_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_spruce_log"), CARVED_SPRUCE_LOG);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_spruce_wood"), CARVED_SPRUCE_WOOD);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "birch_mosaic"), BIRCH_MOSAIC);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "birch_mosaic_slab"), BIRCH_MOSAIC_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "birch_mosaic_stairs"), BIRCH_MOSAIC_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_birch_log"), CARVED_BIRCH_LOG);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_birch_wood"), CARVED_BIRCH_WOOD);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "jungle_mosaic"), JUNGLE_MOSAIC);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "jungle_mosaic_slab"), JUNGLE_MOSAIC_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "jungle_mosaic_stairs"), JUNGLE_MOSAIC_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_jungle_log"), CARVED_JUNGLE_LOG);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_jungle_wood"), CARVED_JUNGLE_WOOD);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "acacia_mosaic"), ACACIA_MOSAIC);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "acacia_mosaic_slab"), ACACIA_MOSAIC_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "acacia_mosaic_stairs"), ACACIA_MOSAIC_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_acacia_log"), CARVED_ACACIA_LOG);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_acacia_wood"), CARVED_ACACIA_WOOD);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "dark_oak_mosaic"), DARK_OAK_MOSAIC);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "dark_oak_mosaic_slab"), DARK_OAK_MOSAIC_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "dark_oak_mosaic_stairs"), DARK_OAK_MOSAIC_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_dark_oak_log"), CARVED_DARK_OAK_LOG);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_dark_oak_wood"), CARVED_DARK_OAK_WOOD);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mangrove_mosaic"), MANGROVE_MOSAIC);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mangrove_mosaic_slab"), MANGROVE_MOSAIC_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mangrove_mosaic_stairs"), MANGROVE_MOSAIC_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_mangrove_log"), CARVED_MANGROVE_LOG);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_mangrove_wood"), CARVED_MANGROVE_WOOD);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "crimson_mosaic"), CRIMSON_MOSAIC);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "crimson_mosaic_slab"), CRIMSON_MOSAIC_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "crimson_mosaic_stairs"), CRIMSON_MOSAIC_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_crimson_stem"), CARVED_CRIMSON_STEM);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_crimson_hyphae"), CARVED_CRIMSON_HYPHAE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "warped_mosaic"), WARPED_MOSAIC);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "warped_mosaic_slab"), WARPED_MOSAIC_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "warped_mosaic_stairs"), WARPED_MOSAIC_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_warped_stem"), CARVED_WARPED_STEM);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_warped_hyphae"), CARVED_WARPED_HYPHAE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cherry_mosaic"), CHERRY_MOSAIC);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cherry_mosaic_slab"), CHERRY_MOSAIC_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cherry_mosaic_stairs"), CHERRY_MOSAIC_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_cherry_log"), CARVED_CHERRY_LOG);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_cherry_wood"), CARVED_CHERRY_WOOD);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "carved_bamboo_block"), CARVED_BAMBOO_BLOCK);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_bricks"), MOSSY_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_brick_slab"), MOSSY_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_brick_stairs"), MOSSY_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "mossy_brick_wall"), MOSSY_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_bricks"), CRACKED_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "tiled_glass"), TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "tiled_tinted_glass"), TILED_TINTED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "white_stained_tiled_glass"), WHITE_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "light_gray_stained_tiled_glass"), LIGHT_GRAY_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "gray_stained_tiled_glass"), GRAY_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "black_stained_tiled_glass"), BLACK_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "brown_stained_tiled_glass"), BROWN_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_stained_tiled_glass"), RED_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "orange_stained_tiled_glass"), ORANGE_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "yellow_stained_tiled_glass"), YELLOW_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "lime_stained_tiled_glass"), LIME_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "green_stained_tiled_glass"), GREEN_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cyan_stained_tiled_glass"), CYAN_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "light_blue_stained_tiled_glass"), LIGHT_BLUE_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "blue_stained_tiled_glass"), BLUE_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "purple_stained_tiled_glass"), PURPLE_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "magenta_stained_tiled_glass"), MAGENTA_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "pink_stained_tiled_glass"), PINK_STAINED_TILED_GLASS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "tiled_glass_pane"), TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "white_stained_tiled_glass_pane"), WHITE_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "light_gray_stained_tiled_glass_pane"), LIGHT_GRAY_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "gray_stained_tiled_glass_pane"), GRAY_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "black_stained_tiled_glass_pane"), BLACK_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "brown_stained_tiled_glass_pane"), BROWN_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "red_stained_tiled_glass_pane"), RED_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "orange_stained_tiled_glass_pane"), ORANGE_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "yellow_stained_tiled_glass_pane"), YELLOW_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "lime_stained_tiled_glass_pane"), LIME_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "green_stained_tiled_glass_pane"), GREEN_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cyan_stained_tiled_glass_pane"), CYAN_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "light_blue_stained_tiled_glass_pane"), LIGHT_BLUE_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "blue_stained_tiled_glass_pane"), BLUE_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "purple_stained_tiled_glass_pane"), PURPLE_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "magenta_stained_tiled_glass_pane"), MAGENTA_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "pink_stained_tiled_glass_pane"), PINK_STAINED_TILED_GLASS_PANE);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "bone_bricks"), BONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "bone_brick_slab"), BONE_BRICK_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "bone_brick_stairs"), BONE_BRICK_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "bone_brick_wall"), BONE_BRICK_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_bone_bricks"), CRACKED_BONE_BRICKS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "bone_tiles"), BONE_TILES);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "bone_tile_slab"), BONE_TILE_SLAB);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "bone_tile_stairs"), BONE_TILE_STAIRS);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "bone_tile_wall"), BONE_TILE_WALL);
    Registry.register(BuiltInRegistries.BLOCK, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "cracked_bone_tiles"), CRACKED_BONE_TILES);
  }

  /**
   * Create and register a generic flower pot.
   *
   * @param plant The Plant-like block instance.
   * @return The registered potted flower block.
   */
  private static Block createFlowerPotBlock(Block plant) {
    return createFlowerPotBlock(plant, 0);
  }

  /**
   * Create and register a generic flower pot with light level.
   *
   * @param plant The Plant-like block instance.
   * @param lightLevel The light level.
   * @return The registered potted flower block.
   */
  private static Block createFlowerPotBlock(Block plant, int lightLevel) {
    return new FlowerPotBlock(plant, FabricBlockSettings.of().instabreak().noOcclusion().pushReaction(PushReaction.DESTROY).lightLevel((state) -> lightLevel));
  }
}
