package net.seface.somemoreblocks.registries;

import net.fabricmc.fabric.api.itemgroup.v1.FabricItemGroup;
import net.minecraft.ChatFormatting;
import net.minecraft.core.Registry;
import net.minecraft.core.component.DataComponents;
import net.minecraft.core.registries.BuiltInRegistries;
import net.minecraft.network.chat.Component;
import net.minecraft.network.chat.MutableComponent;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.*;
import net.minecraft.world.item.component.ItemLore;
import net.seface.somemoreblocks.SomeMoreBlocks;
import net.seface.somemoreblocks.component.SMBDataComponentTypes;

import java.util.List;

public class SMBCreativeTabs {
  private static final CreativeModeTab MORE_BUILDING_BLOCKS = FabricItemGroup.builder()
    .icon(() -> new ItemStack(SMBBlocks.MOSSY_BRICKS))
    .title(Component.translatable("itemGroup.somemoreblocks.buildingBlocks"))
    .displayItems((ctx, entry) -> {
      entry.accept(SMBBlocks.CARVED_OAK_LOG);
      entry.accept(SMBBlocks.CARVED_OAK_WOOD);
      entry.accept(SMBBlocks.OAK_MOSAIC);
      entry.accept(SMBBlocks.OAK_MOSAIC_STAIRS);
      entry.accept(SMBBlocks.OAK_MOSAIC_SLAB);
      entry.accept(SMBBlocks.CARVED_SPRUCE_LOG);
      entry.accept(SMBBlocks.CARVED_SPRUCE_WOOD);
      entry.accept(SMBBlocks.SPRUCE_MOSAIC);
      entry.accept(SMBBlocks.SPRUCE_MOSAIC_STAIRS);
      entry.accept(SMBBlocks.SPRUCE_MOSAIC_SLAB);
      entry.accept(SMBBlocks.CARVED_BIRCH_LOG);
      entry.accept(SMBBlocks.CARVED_BIRCH_WOOD);
      entry.accept(SMBBlocks.BIRCH_MOSAIC);
      entry.accept(SMBBlocks.BIRCH_MOSAIC_STAIRS);
      entry.accept(SMBBlocks.BIRCH_MOSAIC_SLAB);
      entry.accept(SMBBlocks.CARVED_JUNGLE_LOG);
      entry.accept(SMBBlocks.CARVED_JUNGLE_WOOD);
      entry.accept(SMBBlocks.JUNGLE_MOSAIC);
      entry.accept(SMBBlocks.JUNGLE_MOSAIC_STAIRS);
      entry.accept(SMBBlocks.JUNGLE_MOSAIC_SLAB);
      entry.accept(SMBBlocks.CARVED_ACACIA_LOG);
      entry.accept(SMBBlocks.CARVED_ACACIA_WOOD);
      entry.accept(SMBBlocks.ACACIA_MOSAIC);
      entry.accept(SMBBlocks.ACACIA_MOSAIC_STAIRS);
      entry.accept(SMBBlocks.ACACIA_MOSAIC_SLAB);
      entry.accept(SMBBlocks.CARVED_DARK_OAK_LOG);
      entry.accept(SMBBlocks.CARVED_DARK_OAK_WOOD);
      entry.accept(SMBBlocks.DARK_OAK_MOSAIC);
      entry.accept(SMBBlocks.DARK_OAK_MOSAIC_STAIRS);
      entry.accept(SMBBlocks.DARK_OAK_MOSAIC_SLAB);
      entry.accept(SMBBlocks.CARVED_MANGROVE_LOG);
      entry.accept(SMBBlocks.CARVED_MANGROVE_WOOD);
      entry.accept(SMBBlocks.MANGROVE_MOSAIC);
      entry.accept(SMBBlocks.MANGROVE_MOSAIC_STAIRS);
      entry.accept(SMBBlocks.MANGROVE_MOSAIC_SLAB);
      entry.accept(SMBBlocks.CARVED_CRIMSON_STEM);
      entry.accept(SMBBlocks.CARVED_CRIMSON_HYPHAE);
      entry.accept(SMBBlocks.CRIMSON_MOSAIC);
      entry.accept(SMBBlocks.CRIMSON_MOSAIC_STAIRS);
      entry.accept(SMBBlocks.CRIMSON_MOSAIC_SLAB);
      entry.accept(SMBBlocks.CARVED_WARPED_STEM);
      entry.accept(SMBBlocks.CARVED_WARPED_HYPHAE);
      entry.accept(SMBBlocks.WARPED_MOSAIC);
      entry.accept(SMBBlocks.WARPED_MOSAIC_STAIRS);
      entry.accept(SMBBlocks.WARPED_MOSAIC_SLAB);
      entry.accept(SMBBlocks.CARVED_CHERRY_LOG);
      entry.accept(SMBBlocks.CARVED_CHERRY_WOOD);
      entry.accept(SMBBlocks.CHERRY_MOSAIC);
      entry.accept(SMBBlocks.CHERRY_MOSAIC_STAIRS);
      entry.accept(SMBBlocks.CHERRY_MOSAIC_SLAB);

      /* 1.21.4 */
      if (ctx.hasPermissions()) {
        for (int i = 0; i <= 7; i++) {
          ItemStack stack = SMBItems.CARVED_PALE_OAK_LOG.getDefaultInstance();
          stack.set(SMBDataComponentTypes.MOON_PHASE, i);
          stack.set(DataComponents.RARITY, Rarity.EPIC);

          MutableComponent moonPhase = Component.translatable("utilities.somemoreblocks.moon_phase.name." + i)
            .withStyle(ChatFormatting.WHITE)
            .append(" (" + i + ")");

          MutableComponent lore = Component.translatable("item.somemoreblocks.carved_pale_oak_logs.moon_phase_description", moonPhase)
            .withStyle(style -> style.withItalic(false).withColor(ChatFormatting.YELLOW));

          stack.set(DataComponents.LORE, new ItemLore(List.of(lore)));

          entry.accept(stack);
        }
      } else {
        entry.accept(SMBItems.CARVED_PALE_OAK_LOG);
      }

      if (ctx.hasPermissions()) {
        for (int i = 0; i <= 7; i++) {
          ItemStack stack = SMBItems.CARVED_PALE_OAK_WOOD.getDefaultInstance();
          stack.set(SMBDataComponentTypes.MOON_PHASE, i);
          stack.set(DataComponents.RARITY, Rarity.EPIC);

          MutableComponent moonPhase = Component.translatable("utilities.somemoreblocks.moon_phase.name." + i)
            .withStyle(ChatFormatting.WHITE)
            .append(" (" + i + ")");

          MutableComponent lore = Component.translatable("item.somemoreblocks.carved_pale_oak_logs.moon_phase_description", moonPhase)
            .withStyle(style -> style.withItalic(false).withColor(ChatFormatting.YELLOW));

          stack.set(DataComponents.LORE, new ItemLore(List.of(lore)));

          entry.accept(stack);
        }
      } else {
        entry.accept(SMBItems.CARVED_PALE_OAK_WOOD);
      }

      entry.accept(SMBBlocks.PALE_OAK_MOSAIC);
      entry.accept(SMBBlocks.PALE_OAK_MOSAIC_STAIRS);
      entry.accept(SMBBlocks.PALE_OAK_MOSAIC_SLAB);

      entry.accept(SMBBlocks.CARVED_BAMBOO_BLOCK);
      entry.accept(SMBBlocks.POLISHED_STONE);
      entry.accept(SMBBlocks.POLISHED_STONE_STAIRS);
      entry.accept(SMBBlocks.POLISHED_STONE_SLAB);
      entry.accept(SMBBlocks.STONE_PILLAR);
      entry.accept(SMBBlocks.STONE_TILES);
      entry.accept(SMBBlocks.CRACKED_STONE_TILES);
      entry.accept(SMBBlocks.STONE_TILE_STAIRS);
      entry.accept(SMBBlocks.STONE_TILE_SLAB);
      entry.accept(SMBBlocks.STONE_TILE_WALL);
      entry.accept(SMBBlocks.CHISELED_GRANITE_BRICKS);
      entry.accept(SMBBlocks.GRANITE_BRICKS);
      entry.accept(SMBBlocks.CRACKED_GRANITE_BRICKS);
      entry.accept(SMBBlocks.GRANITE_BRICK_STAIRS);
      entry.accept(SMBBlocks.GRANITE_BRICK_SLAB);
      entry.accept(SMBBlocks.GRANITE_BRICK_WALL);
      entry.accept(SMBBlocks.GRANITE_PILLAR);
      entry.accept(SMBBlocks.GRANITE_TILES);
      entry.accept(SMBBlocks.CRACKED_GRANITE_TILES);
      entry.accept(SMBBlocks.GRANITE_TILE_STAIRS);
      entry.accept(SMBBlocks.GRANITE_TILE_SLAB);
      entry.accept(SMBBlocks.GRANITE_TILE_WALL);
      entry.accept(SMBBlocks.MOSSY_GRANITE_BRICKS);
      entry.accept(SMBBlocks.MOSSY_GRANITE_BRICK_STAIRS);
      entry.accept(SMBBlocks.MOSSY_GRANITE_BRICK_SLAB);
      entry.accept(SMBBlocks.MOSSY_GRANITE_BRICK_WALL);
      entry.accept(SMBBlocks.SMOOTH_GRANITE);
      entry.accept(SMBBlocks.SMOOTH_GRANITE_SLAB);
      entry.accept(SMBBlocks.CHISELED_DIORITE_BRICKS);
      entry.accept(SMBBlocks.DIORITE_BRICKS);
      entry.accept(SMBBlocks.CRACKED_DIORITE_BRICKS);
      entry.accept(SMBBlocks.DIORITE_BRICK_STAIRS);
      entry.accept(SMBBlocks.DIORITE_BRICK_SLAB);
      entry.accept(SMBBlocks.DIORITE_BRICK_WALL);
      entry.accept(SMBBlocks.DIORITE_PILLAR);
      entry.accept(SMBBlocks.DIORITE_TILES);
      entry.accept(SMBBlocks.CRACKED_DIORITE_TILES);
      entry.accept(SMBBlocks.DIORITE_TILE_STAIRS);
      entry.accept(SMBBlocks.DIORITE_TILE_SLAB);
      entry.accept(SMBBlocks.DIORITE_TILE_WALL);
      entry.accept(SMBBlocks.MOSSY_DIORITE_BRICKS);
      entry.accept(SMBBlocks.MOSSY_DIORITE_BRICK_STAIRS);
      entry.accept(SMBBlocks.MOSSY_DIORITE_BRICK_SLAB);
      entry.accept(SMBBlocks.MOSSY_DIORITE_BRICK_WALL);
      entry.accept(SMBBlocks.SMOOTH_DIORITE);
      entry.accept(SMBBlocks.SMOOTH_DIORITE_SLAB);
      entry.accept(SMBBlocks.CHISELED_ANDESITE_BRICKS);
      entry.accept(SMBBlocks.ANDESITE_BRICKS);
      entry.accept(SMBBlocks.CRACKED_ANDESITE_BRICKS);
      entry.accept(SMBBlocks.ANDESITE_BRICK_STAIRS);
      entry.accept(SMBBlocks.ANDESITE_BRICK_SLAB);
      entry.accept(SMBBlocks.ANDESITE_BRICK_WALL);
      entry.accept(SMBBlocks.ANDESITE_PILLAR);
      entry.accept(SMBBlocks.ANDESITE_TILES);
      entry.accept(SMBBlocks.CRACKED_ANDESITE_TILES);
      entry.accept(SMBBlocks.ANDESITE_TILE_STAIRS);
      entry.accept(SMBBlocks.ANDESITE_TILE_SLAB);
      entry.accept(SMBBlocks.ANDESITE_TILE_WALL);
      entry.accept(SMBBlocks.MOSSY_ANDESITE_BRICKS);
      entry.accept(SMBBlocks.MOSSY_ANDESITE_BRICK_STAIRS);
      entry.accept(SMBBlocks.MOSSY_ANDESITE_BRICK_SLAB);
      entry.accept(SMBBlocks.MOSSY_ANDESITE_BRICK_WALL);
      entry.accept(SMBBlocks.SMOOTH_ANDESITE);
      entry.accept(SMBBlocks.SMOOTH_ANDESITE_SLAB);
      entry.accept(SMBBlocks.DEEPSLATE_PILLAR);
      entry.accept(SMBBlocks.MOSSY_DEEPSLATE_BRICKS);
      entry.accept(SMBBlocks.MOSSY_DEEPSLATE_BRICK_STAIRS);
      entry.accept(SMBBlocks.MOSSY_DEEPSLATE_BRICK_SLAB);
      entry.accept(SMBBlocks.MOSSY_DEEPSLATE_BRICK_WALL);
      entry.accept(SMBBlocks.SMOOTH_DEEPSLATE);
      entry.accept(SMBBlocks.SMOOTH_DEEPSLATE_SLAB);
      entry.accept(SMBBlocks.POLISHED_CALCITE);
      entry.accept(SMBBlocks.POLISHED_CALCITE_STAIRS);
      entry.accept(SMBBlocks.POLISHED_CALCITE_SLAB);
      entry.accept(SMBBlocks.CHISELED_CALCITE_BRICKS);
      entry.accept(SMBBlocks.CALCITE_BRICKS);
      entry.accept(SMBBlocks.CRACKED_CALCITE_BRICKS);
      entry.accept(SMBBlocks.CALCITE_BRICK_STAIRS);
      entry.accept(SMBBlocks.CALCITE_BRICK_SLAB);
      entry.accept(SMBBlocks.CALCITE_BRICK_WALL);
      entry.accept(SMBBlocks.CALCITE_PILLAR);
      entry.accept(SMBBlocks.CALCITE_TILES);
      entry.accept(SMBBlocks.CRACKED_CALCITE_TILES);
      entry.accept(SMBBlocks.CALCITE_TILE_STAIRS);
      entry.accept(SMBBlocks.CALCITE_TILE_SLAB);
      entry.accept(SMBBlocks.CALCITE_TILE_WALL);
      entry.accept(SMBBlocks.MOSSY_CALCITE_BRICKS);
      entry.accept(SMBBlocks.MOSSY_CALCITE_BRICK_STAIRS);
      entry.accept(SMBBlocks.MOSSY_CALCITE_BRICK_SLAB);
      entry.accept(SMBBlocks.MOSSY_CALCITE_BRICK_WALL);
      entry.accept(SMBBlocks.SMOOTH_CALCITE);
      entry.accept(SMBBlocks.SMOOTH_CALCITE_SLAB);
      entry.accept(SMBBlocks.CRACKED_TUFF_BRICKS);
      entry.accept(SMBBlocks.TUFF_PILLAR);
      entry.accept(SMBBlocks.TUFF_TILES);
      entry.accept(SMBBlocks.CRACKED_TUFF_TILES);
      entry.accept(SMBBlocks.TUFF_TILE_STAIRS);
      entry.accept(SMBBlocks.TUFF_TILE_SLAB);
      entry.accept(SMBBlocks.TUFF_TILE_WALL);
      entry.accept(SMBBlocks.MOSSY_TUFF_BRICKS);
      entry.accept(SMBBlocks.MOSSY_TUFF_BRICK_STAIRS);
      entry.accept(SMBBlocks.MOSSY_TUFF_BRICK_SLAB);
      entry.accept(SMBBlocks.MOSSY_TUFF_BRICK_WALL);
      entry.accept(SMBBlocks.SMOOTH_TUFF);
      entry.accept(SMBBlocks.SMOOTH_TUFF_SLAB);
      entry.accept(SMBBlocks.POLISHED_DRIPSTONE);
      entry.accept(SMBBlocks.POLISHED_DRIPSTONE_STAIRS);
      entry.accept(SMBBlocks.POLISHED_DRIPSTONE_SLAB);
      entry.accept(SMBBlocks.CHISELED_DRIPSTONE_BRICKS);
      entry.accept(SMBBlocks.DRIPSTONE_BRICKS);
      entry.accept(SMBBlocks.CRACKED_DRIPSTONE_BRICKS);
      entry.accept(SMBBlocks.DRIPSTONE_BRICK_STAIRS);
      entry.accept(SMBBlocks.DRIPSTONE_BRICK_SLAB);
      entry.accept(SMBBlocks.DRIPSTONE_BRICK_WALL);
      entry.accept(SMBBlocks.DRIPSTONE_PILLAR);
      entry.accept(SMBBlocks.DRIPSTONE_TILES);
      entry.accept(SMBBlocks.CRACKED_DRIPSTONE_TILES);
      entry.accept(SMBBlocks.DRIPSTONE_TILE_STAIRS);
      entry.accept(SMBBlocks.DRIPSTONE_TILE_SLAB);
      entry.accept(SMBBlocks.DRIPSTONE_TILE_WALL);
      entry.accept(SMBBlocks.MOSSY_DRIPSTONE_BRICKS);
      entry.accept(SMBBlocks.MOSSY_DRIPSTONE_BRICK_STAIRS);
      entry.accept(SMBBlocks.MOSSY_DRIPSTONE_BRICK_SLAB);
      entry.accept(SMBBlocks.MOSSY_DRIPSTONE_BRICK_WALL);
      entry.accept(SMBBlocks.SMOOTH_DRIPSTONE);
      entry.accept(SMBBlocks.SMOOTH_DRIPSTONE_SLAB);
      entry.accept(SMBBlocks.CRACKED_BRICKS);
      entry.accept(SMBBlocks.MOSSY_BRICKS);
      entry.accept(SMBBlocks.MOSSY_BRICK_STAIRS);
      entry.accept(SMBBlocks.MOSSY_BRICK_SLAB);
      entry.accept(SMBBlocks.MOSSY_BRICK_WALL);
      entry.accept(SMBBlocks.POLISHED_MUD);
      entry.accept(SMBBlocks.POLISHED_MUD_STAIRS);
      entry.accept(SMBBlocks.POLISHED_MUD_SLAB);
      entry.accept(SMBBlocks.CHISELED_MUD_BRICKS);
      entry.accept(SMBBlocks.CRACKED_MUD_BRICKS);
      entry.accept(SMBBlocks.MUD_PILLAR);
      entry.accept(SMBBlocks.MUD_TILES);
      entry.accept(SMBBlocks.CRACKED_MUD_TILES);
      entry.accept(SMBBlocks.MUD_TILE_STAIRS);
      entry.accept(SMBBlocks.MUD_TILE_SLAB);
      entry.accept(SMBBlocks.MUD_TILE_WALL);
      entry.accept(SMBBlocks.MOSSY_MUD_BRICKS);
      entry.accept(SMBBlocks.MOSSY_MUD_BRICK_STAIRS);
      entry.accept(SMBBlocks.MOSSY_MUD_BRICK_SLAB);
      entry.accept(SMBBlocks.MOSSY_MUD_BRICK_WALL);
      entry.accept(SMBBlocks.SMOOTH_MUD);
      entry.accept(SMBBlocks.SMOOTH_MUD_SLAB);

      /* 1.21.4 */
      entry.accept(SMBBlocks.POLISHED_RESIN);
      entry.accept(SMBBlocks.POLISHED_RESIN_STAIRS);
      entry.accept(SMBBlocks.POLISHED_RESIN_SLAB);
      entry.accept(SMBBlocks.CRACKED_RESIN_BRICKS);
      entry.accept(SMBBlocks.RESINE_PILLAR);
      entry.accept(SMBBlocks.RESIN_TILES);
      entry.accept(SMBBlocks.CRACKED_RESIN_TILES);
      entry.accept(SMBBlocks.RESIN_TILE_STAIRS);
      entry.accept(SMBBlocks.RESIN_TILE_SLAB);
      entry.accept(SMBBlocks.RESIN_TILE_WALL);
      entry.accept(SMBBlocks.SMOOTH_RESIN);
      entry.accept(SMBBlocks.SMOOTH_RESIN_SLAB);

      entry.accept(SMBBlocks.SANDSTONE_BRICKS);
      entry.accept(SMBBlocks.CRACKED_SANDSTONE_BRICKS);
      entry.accept(SMBBlocks.SANDSTONE_BRICK_STAIRS);
      entry.accept(SMBBlocks.SANDSTONE_BRICK_SLAB);
      entry.accept(SMBBlocks.SANDSTONE_BRICK_WALL);
      entry.accept(SMBBlocks.SANDSTONE_PILLAR);
      entry.accept(SMBBlocks.SANDSTONE_TILES);
      entry.accept(SMBBlocks.CRACKED_SANDSTONE_TILES);
      entry.accept(SMBBlocks.SANDSTONE_TILE_STAIRS);
      entry.accept(SMBBlocks.SANDSTONE_TILE_SLAB);
      entry.accept(SMBBlocks.SANDSTONE_TILE_WALL);
      entry.accept(SMBBlocks.MOSSY_SANDSTONE_BRICKS);
      entry.accept(SMBBlocks.MOSSY_SANDSTONE_BRICK_STAIRS);
      entry.accept(SMBBlocks.MOSSY_SANDSTONE_BRICK_SLAB);
      entry.accept(SMBBlocks.MOSSY_SANDSTONE_BRICK_WALL);
      entry.accept(SMBBlocks.RED_SANDSTONE_BRICKS);
      entry.accept(SMBBlocks.CRACKED_RED_SANDSTONE_BRICKS);
      entry.accept(SMBBlocks.RED_SANDSTONE_BRICK_STAIRS);
      entry.accept(SMBBlocks.RED_SANDSTONE_BRICK_SLAB);
      entry.accept(SMBBlocks.RED_SANDSTONE_BRICK_WALL);
      entry.accept(SMBBlocks.RED_SANDSTONE_PILLAR);
      entry.accept(SMBBlocks.RED_SANDSTONE_TILES);
      entry.accept(SMBBlocks.CRACKED_RED_SANDSTONE_TILES);
      entry.accept(SMBBlocks.RED_SANDSTONE_TILE_STAIRS);
      entry.accept(SMBBlocks.RED_SANDSTONE_TILE_SLAB);
      entry.accept(SMBBlocks.RED_SANDSTONE_TILE_WALL);
      entry.accept(SMBBlocks.MOSSY_RED_SANDSTONE_BRICKS);
      entry.accept(SMBBlocks.MOSSY_RED_SANDSTONE_BRICK_STAIRS);
      entry.accept(SMBBlocks.MOSSY_RED_SANDSTONE_BRICK_SLAB);
      entry.accept(SMBBlocks.MOSSY_RED_SANDSTONE_BRICK_WALL);
      entry.accept(SMBBlocks.POLISHED_PRISMARINE);
      entry.accept(SMBBlocks.POLISHED_PRISMARINE_STAIRS);
      entry.accept(SMBBlocks.POLISHED_PRISMARINE_SLAB);
      entry.accept(SMBBlocks.CHISELED_PRISMARINE_BRICKS);
      entry.accept(SMBBlocks.CRACKED_PRISMARINE_BRICKS);
      entry.accept(SMBBlocks.PRISMARINE_PILLAR);
      entry.accept(SMBBlocks.PRISMARINE_TILES);
      entry.accept(SMBBlocks.CRACKED_PRISMARINE_TILES);
      entry.accept(SMBBlocks.PRISMARINE_TILE_STAIRS);
      entry.accept(SMBBlocks.PRISMARINE_TILE_SLAB);
      entry.accept(SMBBlocks.PRISMARINE_TILE_WALL);
      entry.accept(SMBBlocks.MOSSY_PRISMARINE_BRICKS);
      entry.accept(SMBBlocks.MOSSY_PRISMARINE_BRICK_STAIRS);
      entry.accept(SMBBlocks.MOSSY_PRISMARINE_BRICK_SLAB);
      entry.accept(SMBBlocks.MOSSY_PRISMARINE_BRICK_WALL);
      entry.accept(SMBBlocks.SMOOTH_PRISMARINE);
      entry.accept(SMBBlocks.SMOOTH_PRISMARINE_SLAB);
      entry.accept(SMBBlocks.NETHER_BRICKS_PILLAR);
      entry.accept(SMBBlocks.CRACKED_RED_NETHER_BRICKS);
      entry.accept(SMBBlocks.CHISELED_RED_NETHER_BRICKS);
      entry.accept(SMBBlocks.RED_NETHER_BRICKS_PILLAR);
      entry.accept(SMBBlocks.POLISHED_BLACKSTONE_PILLAR);
      entry.accept(SMBBlocks.POLISHED_BLACKSTONE_TILES);
      entry.accept(SMBBlocks.CRACKED_POLISHED_BLACKSTONE_TILES);
      entry.accept(SMBBlocks.POLISHED_BLACKSTONE_TILE_STAIRS);
      entry.accept(SMBBlocks.POLISHED_BLACKSTONE_TILE_SLAB);
      entry.accept(SMBBlocks.POLISHED_BLACKSTONE_TILE_WALL);
      entry.accept(SMBBlocks.CORRUPTED_POLISHED_BLACKSTONE_BRICKS);
      entry.accept(SMBBlocks.CORRUPTED_POLISHED_BLACKSTONE_BRICK_STAIRS);
      entry.accept(SMBBlocks.CORRUPTED_POLISHED_BLACKSTONE_BRICK_SLAB);
      entry.accept(SMBBlocks.CORRUPTED_POLISHED_BLACKSTONE_BRICK_WALL);
      entry.accept(SMBBlocks.SMOOTH_BLACKSTONE);
      entry.accept(SMBBlocks.SMOOTH_BLACKSTONE_SLAB);
      entry.accept(SMBBlocks.POLISHED_END_STONE);
      entry.accept(SMBBlocks.POLISHED_END_STONE_STAIRS);
      entry.accept(SMBBlocks.POLISHED_END_STONE_SLAB);
      entry.accept(SMBBlocks.CHISELED_END_STONE_BRICKS);
      entry.accept(SMBBlocks.CRACKED_END_STONE_BRICKS);
      entry.accept(SMBBlocks.END_STONE_PILLAR);
      entry.accept(SMBBlocks.END_STONE_TILES);
      entry.accept(SMBBlocks.CRACKED_END_STONE_TILES);
      entry.accept(SMBBlocks.END_STONE_TILE_STAIRS);
      entry.accept(SMBBlocks.END_STONE_TILE_SLAB);
      entry.accept(SMBBlocks.END_STONE_TILE_WALL);
      entry.accept(SMBBlocks.MOSSY_END_STONE_BRICKS);
      entry.accept(SMBBlocks.MOSSY_END_STONE_BRICK_STAIRS);
      entry.accept(SMBBlocks.MOSSY_END_STONE_BRICK_SLAB);
      entry.accept(SMBBlocks.MOSSY_END_STONE_BRICK_WALL);
      entry.accept(SMBBlocks.SMOOTH_END_STONE);
      entry.accept(SMBBlocks.SMOOTH_END_STONE_SLAB);
      entry.accept(SMBBlocks.POLISHED_PURPUR);
      entry.accept(SMBBlocks.POLISHED_PURPUR_STAIRS);
      entry.accept(SMBBlocks.POLISHED_PURPUR_SLAB);
      entry.accept(SMBBlocks.CHISELED_PURPUR);
      entry.accept(SMBBlocks.CRACKED_PURPUR_BLOCK);
      entry.accept(SMBBlocks.PURPUR_TILES);
      entry.accept(SMBBlocks.CRACKED_PURPUR_TILES);
      entry.accept(SMBBlocks.PURPUR_TILE_STAIRS);
      entry.accept(SMBBlocks.PURPUR_TILE_SLAB);
      entry.accept(SMBBlocks.PURPUR_TILE_WALL);
      entry.accept(SMBBlocks.MOSSY_PURPUR_BLOCK);
      entry.accept(SMBBlocks.MOSSY_PURPUR_BLOCK_STAIRS);
      entry.accept(SMBBlocks.MOSSY_PURPUR_BLOCK_SLAB);
      entry.accept(SMBBlocks.MOSSY_PURPUR_BLOCK_WALL);
      entry.accept(SMBBlocks.SMOOTH_PURPUR);
      entry.accept(SMBBlocks.SMOOTH_PURPUR_SLAB);
      entry.accept(SMBBlocks.COAL_BRICKS);
      entry.accept(SMBBlocks.CRACKED_COAL_BRICKS);
      entry.accept(SMBBlocks.COAL_PILLAR);
      entry.accept(SMBBlocks.CUT_COAL);
      entry.accept(SMBBlocks.CRACKED_CUT_COAL);
      entry.accept(SMBBlocks.IRON_BRICKS);
      entry.accept(SMBBlocks.CRACKED_IRON_BRICKS);
      entry.accept(SMBBlocks.IRON_PILLAR);
      entry.accept(SMBBlocks.CUT_IRON);
      entry.accept(SMBBlocks.CRACKED_CUT_IRON);
      entry.accept(SMBBlocks.IRON_GRATE);
      entry.accept(SMBBlocks.GOLD_BRICKS);
      entry.accept(SMBBlocks.CRACKED_GOLD_BRICKS);
      entry.accept(SMBBlocks.GOLD_PILLAR);
      entry.accept(SMBBlocks.CUT_GOLD);
      entry.accept(SMBBlocks.CRACKED_CUT_GOLD);
      entry.accept(SMBBlocks.REDSTONE_BRICKS);
      entry.accept(SMBBlocks.CRACKED_REDSTONE_BRICKS);
      entry.accept(SMBBlocks.REDSTONE_PILLAR);
      entry.accept(SMBBlocks.CUT_REDSTONE);
      entry.accept(SMBBlocks.CRACKED_CUT_REDSTONE);
      entry.accept(SMBBlocks.EMERALD_BRICKS);
      entry.accept(SMBBlocks.CRACKED_EMERALD_BRICKS);
      entry.accept(SMBBlocks.EMERALD_PILLAR);
      entry.accept(SMBBlocks.CUT_EMERALD);
      entry.accept(SMBBlocks.CRACKED_CUT_EMERALD);
      entry.accept(SMBBlocks.LAPIS_BRICKS);
      entry.accept(SMBBlocks.CRACKED_LAPIS_BRICKS);
      entry.accept(SMBBlocks.LAPIS_PILLAR);
      entry.accept(SMBBlocks.CUT_LAPIS);
      entry.accept(SMBBlocks.CRACKED_CUT_LAPIS);
      entry.accept(SMBBlocks.DIAMOND_BRICKS);
      entry.accept(SMBBlocks.CRACKED_DIAMOND_BRICKS);
      entry.accept(SMBBlocks.DIAMOND_PILLAR);
      entry.accept(SMBBlocks.CUT_DIAMOND);
      entry.accept(SMBBlocks.CRACKED_CUT_DIAMOND);
      entry.accept(SMBBlocks.DIAMOND_GRATE);
      entry.accept(SMBBlocks.NETHERITE_BRICKS);
      entry.accept(SMBBlocks.CRACKED_NETHERITE_BRICKS);
      entry.accept(SMBBlocks.NETHERITE_PILLAR);
      entry.accept(SMBBlocks.CUT_NETHERITE);
      entry.accept(SMBBlocks.CRACKED_CUT_NETHERITE);
      entry.accept(SMBBlocks.NETHERITE_GRATE);
      entry.accept(SMBBlocks.CRACKED_QUARTZ_BRICKS);
      entry.accept(SMBBlocks.CUT_QUARTZ);
      entry.accept(SMBBlocks.CRACKED_CUT_QUARTZ);
      entry.accept(SMBBlocks.AMETHYST_BRICKS);
      entry.accept(SMBBlocks.CRACKED_AMETHYST_BRICKS);
      entry.accept(SMBBlocks.AMETHYST_PILLAR);
      entry.accept(SMBBlocks.CUT_AMETHYST);
      entry.accept(SMBBlocks.CRACKED_CUT_AMETHYST);
      entry.accept(SMBBlocks.COPPER_BRICKS);
      entry.accept(SMBBlocks.CRACKED_COPPER_BRICKS);
      entry.accept(SMBBlocks.COPPER_PILLAR);
      entry.accept(SMBBlocks.CRACKED_CUT_COPPER);
      entry.accept(SMBBlocks.EXPOSED_COPPER_BRICKS);
      entry.accept(SMBBlocks.EXPOSED_CRACKED_COPPER_BRICKS);
      entry.accept(SMBBlocks.EXPOSED_COPPER_PILLAR);
      entry.accept(SMBBlocks.EXPOSED_CRACKED_CUT_COPPER);
      entry.accept(SMBBlocks.WEATHERED_COPPER_BRICKS);
      entry.accept(SMBBlocks.WEATHERED_CRACKED_COPPER_BRICKS);
      entry.accept(SMBBlocks.WEATHERED_COPPER_PILLAR);
      entry.accept(SMBBlocks.WEATHERED_CRACKED_CUT_COPPER);
      entry.accept(SMBBlocks.OXIDIZED_COPPER_BRICKS);
      entry.accept(SMBBlocks.OXIDIZED_CRACKED_COPPER_BRICKS);
      entry.accept(SMBBlocks.OXIDIZED_COPPER_PILLAR);
      entry.accept(SMBBlocks.OXIDIZED_CRACKED_CUT_COPPER);
      entry.accept(SMBBlocks.WAXED_COPPER_BRICKS);
      entry.accept(SMBBlocks.WAXED_CRACKED_COPPER_BRICKS);
      entry.accept(SMBBlocks.WAXED_COPPER_PILLAR);
      entry.accept(SMBBlocks.WAXED_CRACKED_CUT_COPPER);
      entry.accept(SMBBlocks.WAXED_EXPOSED_COPPER_BRICKS);
      entry.accept(SMBBlocks.WAXED_EXPOSED_CRACKED_COPPER_BRICKS);
      entry.accept(SMBBlocks.WAXED_EXPOSED_COPPER_PILLAR);
      entry.accept(SMBBlocks.WAXED_EXPOSED_CRACKED_CUT_COPPER);
      entry.accept(SMBBlocks.WAXED_WEATHERED_COPPER_BRICKS);
      entry.accept(SMBBlocks.WAXED_WEATHERED_CRACKED_COPPER_BRICKS);
      entry.accept(SMBBlocks.WAXED_WEATHERED_COPPER_PILLAR);
      entry.accept(SMBBlocks.WAXED_WEATHERED_CRACKED_CUT_COPPER);
      entry.accept(SMBBlocks.WAXED_OXIDIZED_COPPER_BRICKS);
      entry.accept(SMBBlocks.WAXED_OXIDIZED_CRACKED_COPPER_BRICKS);
      entry.accept(SMBBlocks.WAXED_OXIDIZED_COPPER_PILLAR);
      entry.accept(SMBBlocks.WAXED_OXIDIZED_CRACKED_CUT_COPPER);
      entry.accept(SMBBlocks.BONE_BRICKS);
      entry.accept(SMBBlocks.CRACKED_BONE_BRICKS);
      entry.accept(SMBBlocks.BONE_BRICK_STAIRS);
      entry.accept(SMBBlocks.BONE_BRICK_SLAB);
      entry.accept(SMBBlocks.BONE_BRICK_WALL);
      entry.accept(SMBBlocks.BONE_TILES);
      entry.accept(SMBBlocks.CRACKED_BONE_TILES);
      entry.accept(SMBBlocks.BONE_TILE_STAIRS);
      entry.accept(SMBBlocks.BONE_TILE_SLAB);
      entry.accept(SMBBlocks.BONE_TILE_WALL);
      entry.accept(SMBBlocks.SOUL_SANDSTONE);
      entry.accept(SMBBlocks.SOUL_SANDSTONE_STAIRS);
      entry.accept(SMBBlocks.SOUL_SANDSTONE_SLAB);
      entry.accept(SMBBlocks.SOUL_SANDSTONE_WALL);
      entry.accept(SMBBlocks.CHISELED_SOUL_SANDSTONE);
      entry.accept(SMBBlocks.SOUL_SANDSTONE_BRICKS);
      entry.accept(SMBBlocks.CRACKED_SOUL_SANDSTONE_BRICKS);
      entry.accept(SMBBlocks.SOUL_SANDSTONE_BRICK_STAIRS);
      entry.accept(SMBBlocks.SOUL_SANDSTONE_BRICK_SLAB);
      entry.accept(SMBBlocks.SOUL_SANDSTONE_BRICK_WALL);
      entry.accept(SMBBlocks.SOUL_SANDSTONE_PILLAR);
      entry.accept(SMBBlocks.SOUL_SANDSTONE_TILES);
      entry.accept(SMBBlocks.CRACKED_SOUL_SANDSTONE_TILES);
      entry.accept(SMBBlocks.SOUL_SANDSTONE_TILE_STAIRS);
      entry.accept(SMBBlocks.SOUL_SANDSTONE_TILE_SLAB);
      entry.accept(SMBBlocks.SOUL_SANDSTONE_TILE_WALL);
      entry.accept(SMBBlocks.SMOOTH_SOUL_SANDSTONE);
      entry.accept(SMBBlocks.SMOOTH_SOUL_SANDSTONE_SLAB);
      entry.accept(SMBBlocks.SMOOTH_SOUL_SANDSTONE_STAIRS);
      entry.accept(SMBBlocks.CUT_SOUL_SANDSTONE);
      entry.accept(SMBBlocks.CUT_SOUL_SANDSTONE_SLAB);
      entry.accept(SMBBlocks.PACKED_SNOW);
      entry.accept(SMBBlocks.PACKED_SNOW_STAIRS);
      entry.accept(SMBBlocks.PACKED_SNOW_SLAB);
      entry.accept(SMBBlocks.POLISHED_SNOW);
      entry.accept(SMBBlocks.POLISHED_SNOW_STAIRS);
      entry.accept(SMBBlocks.POLISHED_SNOW_SLAB);
      entry.accept(SMBBlocks.SNOW_BRICKS);
      entry.accept(SMBBlocks.CRACKED_SNOW_BRICKS);
      entry.accept(SMBBlocks.SNOW_BRICK_STAIRS);
      entry.accept(SMBBlocks.SNOW_BRICK_SLAB);
      entry.accept(SMBBlocks.SNOW_BRICK_WALL);
      entry.accept(SMBBlocks.SNOW_PILLAR);
      entry.accept(SMBBlocks.SNOW_TILES);
      entry.accept(SMBBlocks.CRACKED_SNOW_TILES);
      entry.accept(SMBBlocks.SNOW_TILE_STAIRS);
      entry.accept(SMBBlocks.SNOW_TILE_SLAB);
      entry.accept(SMBBlocks.SNOW_TILE_WALL);
      entry.accept(SMBBlocks.POLISHED_ICE);
      entry.accept(SMBBlocks.POLISHED_ICE_STAIRS);
      entry.accept(SMBBlocks.POLISHED_ICE_SLAB);
      entry.accept(SMBBlocks.ICE_BRICKS);
      entry.accept(SMBBlocks.CRACKED_ICE_BRICKS);
      entry.accept(SMBBlocks.ICE_BRICK_STAIRS);
      entry.accept(SMBBlocks.ICE_BRICK_SLAB);
      entry.accept(SMBBlocks.ICE_BRICK_WALL);
      entry.accept(SMBBlocks.ICE_PILLAR);
      entry.accept(SMBBlocks.ICE_TILES);
      entry.accept(SMBBlocks.CRACKED_ICE_TILES);
      entry.accept(SMBBlocks.ICE_TILE_STAIRS);
      entry.accept(SMBBlocks.ICE_TILE_SLAB);
      entry.accept(SMBBlocks.ICE_TILE_WALL);
    }).build();

  private static final CreativeModeTab MORE_COLORED_BLOCKS = FabricItemGroup.builder()
    .icon(() -> new ItemStack(SMBBlocks.MAGENTA_SHINGLES))
    .title(Component.translatable("itemGroup.somemoreblocks.coloredBlocks"))
    .displayItems((ctx, entry) -> {
      entry.accept(SMBBlocks.TILED_GLASS);
      entry.accept(SMBBlocks.TILED_TINTED_GLASS);
      entry.accept(SMBBlocks.WHITE_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.LIGHT_GRAY_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.GRAY_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.BLACK_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.BROWN_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.RED_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.ORANGE_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.YELLOW_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.LIME_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.GREEN_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.CYAN_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.LIGHT_BLUE_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.BLUE_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.PURPLE_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.MAGENTA_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.PINK_STAINED_TILED_GLASS);
      entry.accept(SMBBlocks.TILED_GLASS_PANE);
      entry.accept(SMBBlocks.WHITE_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.LIGHT_GRAY_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.GRAY_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.BLACK_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.BROWN_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.RED_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.ORANGE_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.YELLOW_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.LIME_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.GREEN_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.CYAN_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.LIGHT_BLUE_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.BLUE_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.PURPLE_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.MAGENTA_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.PINK_STAINED_TILED_GLASS_PANE);
      entry.accept(SMBBlocks.SHINGLES);
      entry.accept(SMBBlocks.WHITE_SHINGLES);
      entry.accept(SMBBlocks.LIGHT_GRAY_SHINGLES);
      entry.accept(SMBBlocks.GRAY_SHINGLES);
      entry.accept(SMBBlocks.BLACK_SHINGLES);
      entry.accept(SMBBlocks.BROWN_SHINGLES);
      entry.accept(SMBBlocks.RED_SHINGLES);
      entry.accept(SMBBlocks.ORANGE_SHINGLES);
      entry.accept(SMBBlocks.YELLOW_SHINGLES);
      entry.accept(SMBBlocks.LIME_SHINGLES);
      entry.accept(SMBBlocks.GREEN_SHINGLES);
      entry.accept(SMBBlocks.CYAN_SHINGLES);
      entry.accept(SMBBlocks.LIGHT_BLUE_SHINGLES);
      entry.accept(SMBBlocks.BLUE_SHINGLES);
      entry.accept(SMBBlocks.PURPLE_SHINGLES);
      entry.accept(SMBBlocks.MAGENTA_SHINGLES);
      entry.accept(SMBBlocks.PINK_SHINGLES);
      entry.accept(SMBBlocks.TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.WHITE_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.LIGHT_GRAY_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.GRAY_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.BLACK_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.BROWN_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.RED_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.ORANGE_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.YELLOW_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.LIME_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.GREEN_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.CYAN_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.LIGHT_BLUE_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.BLUE_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.PURPLE_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.MAGENTA_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.PINK_TERRACOTTA_BRICKS);
      entry.accept(SMBBlocks.TERRACOTTA_TILES);
      entry.accept(SMBBlocks.WHITE_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.LIGHT_GRAY_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.GRAY_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.BLACK_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.BROWN_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.RED_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.ORANGE_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.YELLOW_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.LIME_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.GREEN_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.CYAN_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.LIGHT_BLUE_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.BLUE_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.PURPLE_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.MAGENTA_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.PINK_TERRACOTTA_TILES);
      entry.accept(SMBBlocks.WHITE_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.LIGHT_GRAY_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.GRAY_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.BLACK_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.BROWN_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.RED_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.ORANGE_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.YELLOW_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.LIME_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.GREEN_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.CYAN_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.LIGHT_BLUE_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.BLUE_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.PURPLE_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.MAGENTA_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.PINK_CONCRETE_BRICKS);
      entry.accept(SMBBlocks.WHITE_CONCRETE_TILES);
      entry.accept(SMBBlocks.LIGHT_GRAY_CONCRETE_TILES);
      entry.accept(SMBBlocks.GRAY_CONCRETE_TILES);
      entry.accept(SMBBlocks.BLACK_CONCRETE_TILES);
      entry.accept(SMBBlocks.BROWN_CONCRETE_TILES);
      entry.accept(SMBBlocks.RED_CONCRETE_TILES);
      entry.accept(SMBBlocks.ORANGE_CONCRETE_TILES);
      entry.accept(SMBBlocks.YELLOW_CONCRETE_TILES);
      entry.accept(SMBBlocks.LIME_CONCRETE_TILES);
      entry.accept(SMBBlocks.GREEN_CONCRETE_TILES);
      entry.accept(SMBBlocks.CYAN_CONCRETE_TILES);
      entry.accept(SMBBlocks.LIGHT_BLUE_CONCRETE_TILES);
      entry.accept(SMBBlocks.BLUE_CONCRETE_TILES);
      entry.accept(SMBBlocks.PURPLE_CONCRETE_TILES);
      entry.accept(SMBBlocks.MAGENTA_CONCRETE_TILES);
      entry.accept(SMBBlocks.PINK_CONCRETE_TILES);
    }).build();

  private static final CreativeModeTab MORE_NATURAL_BLOCKS = FabricItemGroup.builder()
    .icon(() -> new ItemStack(SMBBlocks.TINY_CACTUS))
    .title(Component.translatable("itemGroup.somemoreblocks.naturalBlocks"))
    .displayItems((ctx, entry) -> {
      entry.accept(SMBBlocks.TINY_CACTUS);
      entry.accept(SMBBlocks.DUNE_GRASS);
      entry.accept(SMBBlocks.TALL_DUNE_GRASS);
      entry.accept(SMBBlocks.SHORT_SNOW_GRASS);
      entry.accept(SMBBlocks.TALL_SNOW_GRASS);
      entry.accept(SMBBlocks.SNOW_FERN);
      entry.accept(SMBBlocks.LARGE_SNOW_FERN);
      entry.accept(SMBBlocks.CATTAIL);
      entry.accept(SMBItems.LEAVES_BUCKET.getDefaultInstance());
      entry.accept(SMBItems.BIRCH_LEAVES_BUCKET.getDefaultInstance());
      entry.accept(SMBItems.SPRUCE_LEAVES_BUCKET.getDefaultInstance());
      entry.accept(SMBItems.PALE_OAK_LEAVES_BUCKET.getDefaultInstance());
      entry.accept(SMBItems.AZALEA_LEAVES_BUCKET.getDefaultInstance());
      entry.accept(SMBItems.FLOWERING_AZALEA_LEAVES_BUCKET.getDefaultInstance());
      entry.accept(SMBItems.SMALL_LILY_PADS);
      entry.accept(SMBBlocks.LUMINOUS_FLOWER);

      if (ctx.hasPermissions()) {
        entry.accept(SMBItems.BIG_LILY_PAD);
        entry.accept(SMBItems.BROWN_MUSHROOM_COLONY);
        entry.accept(SMBItems.TALL_BROWN_MUSHROOM_COLONY);
        entry.accept(SMBItems.RED_MUSHROOM_COLONY);
        entry.accept(SMBItems.TALL_RED_MUSHROOM_COLONY);
        entry.accept(SMBItems.CRIMSON_FUNGUS_COLONY);
        entry.accept(SMBItems.TALL_CRIMSON_FUNGUS_COLONY);
        entry.accept(SMBItems.WARPED_FUNGUS_COLONY);
        entry.accept(SMBItems.TALL_WARPED_FUNGUS_COLONY);
      }
    }).build();

  private static final CreativeModeTab MORE_REDSTONE_BLOCKS = FabricItemGroup.builder()
    .icon(() -> new ItemStack(SMBBlocks.OCHRE_REDSTONE_FROGLIGHT))
    .title(Component.translatable("itemGroup.somemoreblocks.redstoneBlocks"))
    .displayItems((ctx, entry) -> {
      entry.accept(SMBBlocks.REDSTONE_BRICKS);
      entry.accept(SMBBlocks.CRACKED_REDSTONE_BRICKS);
      entry.accept(SMBBlocks.REDSTONE_PILLAR);
      entry.accept(SMBBlocks.CUT_REDSTONE);
      entry.accept(SMBBlocks.CRACKED_CUT_REDSTONE);
      entry.accept(SMBBlocks.OCHRE_REDSTONE_FROGLIGHT);
      entry.accept(SMBBlocks.VERDANT_REDSTONE_FROGLIGHT);
      entry.accept(SMBBlocks.PEARLESCENT_REDSTONE_FROGLIGHT);
    }).build();

  private static final CreativeModeTab MORE_CACTUS_BLOCKS = FabricItemGroup.builder()
    .icon(() -> new ItemStack(SMBBlocks.CACTUS_PILLAR))
    .title(Component.translatable("itemGroup.somemoreblocks.cactusBlocks"))
    .displayItems((ctx, entry) -> {
      entry.accept(SMBBlocks.POLISHED_CACTUS);
      //entry.accept(SMBBlocks.POLISHED_CACTUS_STAIRS);
      //entry.accept(SMBBlocks.POLISHED_CACTUS_SLAB);
      entry.accept(SMBBlocks.CHISELED_CACTUS_BRICKS);
      entry.accept(SMBBlocks.CACTUS_BRICKS);
      entry.accept(SMBBlocks.CRACKED_CACTUS_BRICKS);
      //entry.accept(SMBBlocks.CACTUS_BRICK_STAIRS);
      //entry.accept(SMBBlocks.CACTUS_BRICK_SLAB);
      //entry.accept(SMBBlocks.CACTUS_BRICK_WALL);
      entry.accept(SMBBlocks.CACTUS_PILLAR);
      entry.accept(SMBBlocks.CACTUS_TILES);
      entry.accept(SMBBlocks.CRACKED_CACTUS_TILES);
      //entry.accept(SMBBlocks.CACTUS_TILE_STAIRS);
      //entry.accept(SMBBlocks.CACTUS_TILE_SLAB);
      //entry.accept(SMBBlocks.CACTUS_TILE_WALL);
      entry.accept(SMBBlocks.MOSSY_CACTUS_BRICKS);
      //entry.accept(SMBBlocks.MOSSY_CACTUS_BRICK_STAIRS);
      //entry.accept(SMBBlocks.MOSSY_CACTUS_BRICK_SLAB);
      //entry.accept(SMBBlocks.MOSSY_CACTUS_BRICK_WALL);
      entry.accept(SMBBlocks.SMOOTH_CACTUS);
      //entry.accept(SMBBlocks.SMOOTH_CACTUS_SLAB);
      entry.accept(SMBBlocks.TALL_CACTUS);
      entry.accept(SMBBlocks.CACTUS_LADDER);
      entry.accept(SMBBlocks.CACTUS_CHEST);

    }).build();

  public static void init() {
    Registry.register(BuiltInRegistries.CREATIVE_MODE_TAB, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "0_more_building_blocks"), MORE_BUILDING_BLOCKS);
    Registry.register(BuiltInRegistries.CREATIVE_MODE_TAB, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "1_more_colored_blocks"), MORE_COLORED_BLOCKS);
    Registry.register(BuiltInRegistries.CREATIVE_MODE_TAB, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "2_more_natural_blocks"), MORE_NATURAL_BLOCKS);
    Registry.register(BuiltInRegistries.CREATIVE_MODE_TAB, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "3_more_cactus_blocks"), MORE_CACTUS_BLOCKS);
    Registry.register(BuiltInRegistries.CREATIVE_MODE_TAB, ResourceLocation.fromNamespaceAndPath(SomeMoreBlocks.ID, "4_more_redstone_blocks"), MORE_REDSTONE_BLOCKS);
  }
}
